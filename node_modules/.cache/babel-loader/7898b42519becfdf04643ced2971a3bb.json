{"ast":null,"code":"import React from \"react\";\nconst FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET_USERS\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\nlet initialization = {\n  users: [],\n  pageSize: 5,\n  totalCount: 0,\n  currentPage: 1,\n  isFetching: true\n};\n\nlet usersReducer = (state = initialization, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      console.log(action.userId);\n      return { ...state,\n        users: state.users.map(u => {\n          console.log(u);\n\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      console.log(action.userId);\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      {\n        return { ...state,\n          users: [...action.users]\n        };\n      }\n\n    case SET_CURRENT_PAGE:\n      {\n        return { ...state,\n          currentPage: action.currentPage\n        };\n      }\n\n    case SET_TOTAL_USERS_COUNT:\n      {\n        return { ...state,\n          totalCount: action.totalCount\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport let setPageAc = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport let setTotalUsersCountAC = totalCount => ({\n  type: SET_TOTAL_USERS_COUNT,\n  totalCount\n});\nexport let followAC = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport let unfollowAC = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport let setUsersAC = users => ({\n  type: SET_USERS,\n  users\n});\nexport default usersReducer; // case SET_USERS:{\n//     return {...state, users: [...state.users, ...action.users]}\n//\n// }","map":{"version":3,"sources":["D:/react/net/project1/src/Redux/usersReducer.js"],"names":["React","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","initialization","users","pageSize","totalCount","currentPage","isFetching","usersReducer","state","action","type","console","log","userId","map","u","id","followed","setPageAc","setTotalUsersCountAC","followAC","unfollowAC","setUsersAC"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,qBAAqB,GAAG,uBAA9B;AAGA,IAAIC,cAAc,GAAG;AACjBC,EAAAA,KAAK,EAAC,EADW;AAEjBC,EAAAA,QAAQ,EAAC,CAFQ;AAGjBC,EAAAA,UAAU,EAAC,CAHM;AAIjBC,EAAAA,WAAW,EAAC,CAJK;AAKjBC,EAAAA,UAAU,EAAC;AALM,CAArB;;AAOA,IAAIC,YAAY,GAAG,CAACC,KAAK,GAAGP,cAAT,EAAyBQ,MAAzB,KAAoC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKd,MAAL;AACIe,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,MAAnB;AACA,aAAO,EACH,GAAGL,KADA;AAEHN,QAAAA,KAAK,EAAEM,KAAK,CAACN,KAAN,CAAYY,GAAZ,CAAgBC,CAAC,IAAI;AACxBJ,UAAAA,OAAO,CAACC,GAAR,CAAYG,CAAZ;;AACA,cAAIA,CAAC,CAACC,EAAF,KAASP,MAAM,CAACI,MAApB,EAA4B;AACxB,mBAAO,EAAC,GAAGE,CAAJ;AAAOE,cAAAA,QAAQ,EAAE;AAAjB,aAAP;AACH;;AACD,iBAAOF,CAAP;AACH,SANM;AAFJ,OAAP;;AAWJ,SAAKlB,QAAL;AACIc,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,MAAnB;AAEA,aAAO,EACH,GAAGL,KADA;AAEHN,QAAAA,KAAK,EAAEM,KAAK,CAACN,KAAN,CAAYY,GAAZ,CAAgBC,CAAC,IAAI;AACxB,cAAIA,CAAC,CAACC,EAAF,KAASP,MAAM,CAACI,MAApB,EAA4B;AACxB,mBAAO,EAAC,GAAGE,CAAJ;AAAOE,cAAAA,QAAQ,EAAE;AAAjB,aAAP;AACH;;AACD,iBAAOF,CAAP;AACH,SALM;AAFJ,OAAP;;AASJ,SAAKjB,SAAL;AAAe;AACX,eAAO,EAAC,GAAGU,KAAJ;AAAWN,UAAAA,KAAK,EAAE,CAAC,GAAGO,MAAM,CAACP,KAAX;AAAlB,SAAP;AAEH;;AACD,SAAKH,gBAAL;AAAsB;AAClB,eAAO,EAAC,GAAGS,KAAJ;AAAUH,UAAAA,WAAW,EAACI,MAAM,CAACJ;AAA7B,SAAP;AACH;;AACD,SAAKL,qBAAL;AAA2B;AACvB,eAAM,EAAC,GAAGQ,KAAJ;AAAWJ,UAAAA,UAAU,EAACK,MAAM,CAACL;AAA7B,SAAN;AACH;;AAED;AACI,aAAOI,KAAP;AAtCR;AAyCH,CA1CD;;AA6CA,OAAO,IAAIU,SAAS,GAAIb,WAAD,KAAiB;AAACK,EAAAA,IAAI,EAACX,gBAAN;AAAwBM,EAAAA;AAAxB,CAAjB,CAAhB;AACP,OAAO,IAAIc,oBAAoB,GAAIf,UAAD,KAAgB;AAACM,EAAAA,IAAI,EAAEV,qBAAP;AAA8BI,EAAAA;AAA9B,CAAhB,CAA3B;AACP,OAAO,IAAIgB,QAAQ,GAAIP,MAAD,KAAa;AAACH,EAAAA,IAAI,EAAEd,MAAP;AAAeiB,EAAAA;AAAf,CAAb,CAAf;AACP,OAAO,IAAIQ,UAAU,GAAIR,MAAD,KAAa;AAACH,EAAAA,IAAI,EAAEb,QAAP;AAAiBgB,EAAAA;AAAjB,CAAb,CAAjB;AACP,OAAO,IAAIS,UAAU,GAAIpB,KAAD,KAAY;AAACQ,EAAAA,IAAI,EAAEZ,SAAP;AAAkBI,EAAAA;AAAlB,CAAZ,CAAjB;AAGP,eAAeK,YAAf,C,CAEA;AACA;AACA;AACA","sourcesContent":["import React from \"react\"\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\n\r\n\r\nlet initialization = {\r\n    users:[],\r\n    pageSize:5,\r\n    totalCount:0,\r\n    currentPage:1,\r\n    isFetching:true,\r\n}\r\nlet usersReducer = (state = initialization, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            console.log(action.userId)\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    console.log(u)\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                }),\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            console.log(action.userId)\r\n\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case SET_USERS:{\r\n            return {...state, users: [...action.users]}\r\n\r\n        }\r\n        case SET_CURRENT_PAGE:{\r\n            return {...state,currentPage:action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT:{\r\n            return{...state, totalCount:action.totalCount}\r\n        }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\n\r\nexport let setPageAc = (currentPage)=>( {type:SET_CURRENT_PAGE, currentPage})\r\nexport let setTotalUsersCountAC = (totalCount)=>( {type: SET_TOTAL_USERS_COUNT, totalCount})\r\nexport let followAC = (userId) => ({type: FOLLOW, userId})\r\nexport let unfollowAC = (userId) => ({type: UNFOLLOW, userId})\r\nexport let setUsersAC = (users) => ({type: SET_USERS, users})\r\n\r\n\r\nexport default usersReducer\r\n\r\n// case SET_USERS:{\r\n//     return {...state, users: [...state.users, ...action.users]}\r\n//\r\n// }"]},"metadata":{},"sourceType":"module"}