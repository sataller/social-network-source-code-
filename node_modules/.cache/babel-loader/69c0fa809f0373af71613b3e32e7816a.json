{"ast":null,"code":"import { profileAPI, usersAPI } from \"../API/api\";\nconst ADD_POST = \"ADD_POST\";\nconst UPDATE_NEW_TEXT = \"UPDATE_NEW_TEXT\";\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\nconst SET_USER_STATUS = \"SET_USER_STATUS\";\nlet initialisation = {\n  posts: [{\n    id: 1,\n    text: \"My first post!\",\n    lickCount: 12,\n    avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\"\n  }, {\n    id: 2,\n    text: \"My first post!\",\n    lickCount: 12,\n    avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\"\n  }, {\n    id: 3,\n    text: \"My first post!\",\n    lickCount: 12,\n    avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\"\n  }],\n  newText: \"\",\n  profile: null,\n  status: \"\"\n};\n\nconst profileReducer = (state = initialisation, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      let newPost = {\n        id: 4,\n        text: state.newText,\n        lickCount: 0,\n        avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\"\n      };\n      return { ...state,\n        posts: [...state.posts, newPost],\n        newText: \"\"\n      };\n\n    case UPDATE_NEW_TEXT:\n      return { ...state,\n        newText: action.text\n      };\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    case SET_USER_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostAC = () => {\n  return {\n    type: ADD_POST\n  };\n};\nexport const updateNewTextAC = newText => {\n  return {\n    type: UPDATE_NEW_TEXT,\n    text: newText\n  };\n};\nexport const setProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setStatus = status => ({\n  type: SET_USER_STATUS,\n  status\n});\nexport const setUsersProfile = userId => {\n  return dispatch => {\n    if (!userId) {\n      userId = 2;\n    }\n\n    usersAPI.setUsers(userId).then(response => {\n      dispatch(setProfile(response.data));\n    });\n  };\n};\nexport const getUserStatus = userId => {\n  return dispatch => {\n    profileAPI.getStatus(userId).then(response => {\n      dispatch(setStatus(response.data));\n    });\n  };\n};\nexport const updateUserStatus = status => {\n  return dispatch => {\n    profileAPI.updateStatus(status).then(response => {\n      if (response.data.resultCode === 0) {\n        dispatch(setStatus(response.data));\n      }\n    });\n  };\n};\nexport default profileReducer;","map":{"version":3,"sources":["D:/react/net/project1/src/Redux/profileReducer.js"],"names":["profileAPI","usersAPI","ADD_POST","UPDATE_NEW_TEXT","SET_USER_PROFILE","SET_USER_STATUS","initialisation","posts","id","text","lickCount","avatar","newText","profile","status","profileReducer","state","action","type","newPost","addPostAC","updateNewTextAC","setProfile","setStatus","setUsersProfile","userId","dispatch","setUsers","then","response","data","getUserStatus","getStatus","updateUserStatus","updateStatus","resultCode"],"mappings":"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","sourcesContent":["import {profileAPI, usersAPI} from \"../API/api\";\r\n\r\nconst ADD_POST = \"ADD_POST\";\r\nconst UPDATE_NEW_TEXT = \"UPDATE_NEW_TEXT\"\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_USER_STATUS = \"SET_USER_STATUS\";\r\n\r\nlet initialisation = {\r\n    posts: [\r\n        {\r\n            id: 1, text: \"My first post!\", lickCount: 12,\r\n            avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\"\r\n        },\r\n        {\r\n            id: 2, text: \"My first post!\", lickCount: 12,\r\n            avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\"\r\n        },\r\n        {\r\n            id: 3, text: \"My first post!\", lickCount: 12,\r\n            avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\"\r\n        },\r\n    ],\r\n    newText: \"\",\r\n    profile: null,\r\n    status: \"\",\r\n}\r\n\r\nconst profileReducer = (state = initialisation, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 4,\r\n                text: state.newText,\r\n                lickCount: 0,\r\n                avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\"\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newText: \"\"\r\n            }\r\n        case UPDATE_NEW_TEXT:\r\n            return {\r\n                ...state,\r\n                newText: action.text\r\n            }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state, profile: action.profile\r\n            }\r\n        }\r\n        case SET_USER_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostAC = () => {\r\n    return ({type: ADD_POST})\r\n};\r\n\r\nexport const updateNewTextAC = (newText) => {\r\n    return ({type: UPDATE_NEW_TEXT, text: newText})\r\n};\r\n\r\nexport const setProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\n\r\nexport const setStatus = (status) => ({type: SET_USER_STATUS, status});\r\n\r\nexport const setUsersProfile = (userId) => {\r\n    return (dispatch) => {\r\n        if (!userId) {\r\n            userId = 2;\r\n        }\r\n        usersAPI.setUsers(userId).then(response => {\r\n            dispatch(setProfile(response.data))\r\n        });\r\n    }\r\n}\r\n\r\nexport const getUserStatus = (userId) => {\r\n    return (dispatch) => {\r\n        profileAPI.getStatus(userId).then(response => {\r\n            dispatch(setStatus(response.data))\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateUserStatus = (status) => {\r\n    return (dispatch) => {\r\n        profileAPI.updateStatus(status).then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatus(response.data))\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default profileReducer"]},"metadata":{},"sourceType":"module"}