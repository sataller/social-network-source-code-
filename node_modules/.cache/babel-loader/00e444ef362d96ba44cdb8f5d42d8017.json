{"ast":null,"code":"import * as axios from \"axios\";\nconst instance = axios.create({\n  withCredentials: true,\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n  headers: {\n    \"API-KEY\": \"09237f73-efd4-4bff-b0ba-2a8987601863\"\n  }\n});\nexport const usersAPI = {\n  async getUsers(currentPage = 1, pageSize = 10) {\n    let response = await instance.get(`users?page=${currentPage}&count=${pageSize}`);\n    return response.data;\n  },\n\n  async unfollowUser(id) {\n    let response = await instance.delete(`follow/${id}`);\n    return response.data;\n  },\n\n  async followUser(id) {\n    let response = await instance.post(`follow/${id}`);\n    return response.data;\n  },\n\n  setUsers: id => {\n    console.warn(\"Obsolete method. Pleas profileAPI object method\");\n    return profileAPI.setUsers(id);\n  }\n};\nexport const authAPI = {\n  async me() {\n    let response = await instance.get(`auth/me`);\n    return response.data;\n  },\n\n  async login(email, password, rememberMe = false) {\n    let response = await instance.post(`/auth/login`, {\n      email,\n      password,\n      rememberMe\n    });\n    return response.data;\n  },\n\n  async logout() {\n    let response = instance.delete(`/auth/login`);\n    return response.data;\n  }\n\n};\nexport const profileAPI = {\n  setUsers: id => {\n    return instance.get(`profile/` + id);\n  },\n  getStatus: id => {\n    return instance.get(`profile/status/` + id);\n  },\n  updateStatus: status => {\n    return instance.put(`profile/status`, {\n      status: status\n    });\n  }\n};","map":{"version":3,"sources":["D:/react/net/project1/src/API/api.js"],"names":["axios","instance","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","response","get","data","unfollowUser","id","delete","followUser","post","setUsers","console","warn","profileAPI","authAPI","me","login","email","password","rememberMe","logout","getStatus","updateStatus","status","put"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC1BC,EAAAA,eAAe,EAAE,IADS;AAE1BC,EAAAA,OAAO,EAAE,+CAFiB;AAG1BC,EAAAA,OAAO,EAAE;AAAC,eAAW;AAAZ;AAHiB,CAAb,CAAjB;AAMA,OAAO,MAAMC,QAAQ,GAAG;AACpB,QAAMC,QAAN,CAAeC,WAAW,GAAG,CAA7B,EAAgCC,QAAQ,GAAG,EAA3C,EAA+C;AAC3C,QAAIC,QAAQ,GAAG,MAAMT,QAAQ,CAACU,GAAT,CAAc,cAAaH,WAAY,UAASC,QAAS,EAAzD,CAArB;AACA,WAAOC,QAAQ,CAACE,IAAhB;AACH,GAJmB;;AAKpB,QAAMC,YAAN,CAAmBC,EAAnB,EAAuB;AACnB,QAAIJ,QAAQ,GAAG,MAAMT,QAAQ,CAACc,MAAT,CAAiB,UAASD,EAAG,EAA7B,CAArB;AACA,WAAOJ,QAAQ,CAACE,IAAhB;AACH,GARmB;;AASpB,QAAMI,UAAN,CAAiBF,EAAjB,EAAqB;AACjB,QAAIJ,QAAQ,GAAG,MAAMT,QAAQ,CAACgB,IAAT,CAAe,UAASH,EAAG,EAA3B,CAArB;AACA,WAAOJ,QAAQ,CAACE,IAAhB;AACH,GAZmB;;AAapBM,EAAAA,QAAQ,EAAGJ,EAAD,IAAQ;AACdK,IAAAA,OAAO,CAACC,IAAR,CAAa,iDAAb;AACA,WAAOC,UAAU,CAACH,QAAX,CAAoBJ,EAApB,CAAP;AACH;AAhBmB,CAAjB;AAmBP,OAAO,MAAMQ,OAAO,GAAG;AACnB,QAAMC,EAAN,GAAW;AACP,QAAIb,QAAQ,GAAG,MAAMT,QAAQ,CAACU,GAAT,CAAc,SAAd,CAArB;AACA,WAAOD,QAAQ,CAACE,IAAhB;AAEH,GALkB;;AAMnB,QAAMY,KAAN,CAAYC,KAAZ,EAAmBC,QAAnB,EAA6BC,UAAU,GAAG,KAA1C,EAAiD;AAC7C,QAAIjB,QAAQ,GAAG,MAAMT,QAAQ,CAACgB,IAAT,CAAe,aAAf,EAA6B;AAACQ,MAAAA,KAAD;AAAQC,MAAAA,QAAR;AAAkBC,MAAAA;AAAlB,KAA7B,CAArB;AAEA,WAAOjB,QAAQ,CAACE,IAAhB;AAEH,GAXkB;;AAYnB,QAAMgB,MAAN,GAAe;AACX,QAAIlB,QAAQ,GAAGT,QAAQ,CAACc,MAAT,CAAiB,aAAjB,CAAf;AACA,WAAOL,QAAQ,CAACE,IAAhB;AACH;;AAfkB,CAAhB;AAkBP,OAAO,MAAMS,UAAU,GAAG;AACtBH,EAAAA,QAAQ,EAAGJ,EAAD,IAAQ;AACd,WAAOb,QAAQ,CAACU,GAAT,CAAc,UAAD,GAAaG,EAA1B,CAAP;AACH,GAHqB;AAItBe,EAAAA,SAAS,EAAGf,EAAD,IAAQ;AACf,WAAOb,QAAQ,CAACU,GAAT,CAAc,iBAAD,GAAoBG,EAAjC,CAAP;AACH,GANqB;AAQtBgB,EAAAA,YAAY,EAAGC,MAAD,IAAY;AACtB,WAAO9B,QAAQ,CAAC+B,GAAT,CAAc,gBAAd,EAA+B;AAACD,MAAAA,MAAM,EAAEA;AAAT,KAA/B,CAAP;AACH;AAVqB,CAAnB","sourcesContent":["import * as axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\"API-KEY\": \"09237f73-efd4-4bff-b0ba-2a8987601863\"},\r\n});\r\n\r\nexport const usersAPI = {\r\n    async getUsers(currentPage = 1, pageSize = 10) {\r\n        let response = await instance.get(`users?page=${currentPage}&count=${pageSize}`,)\r\n        return response.data\r\n    },\r\n    async unfollowUser(id) {\r\n        let response = await instance.delete(`follow/${id}`)\r\n        return response.data\r\n    },\r\n    async followUser(id) {\r\n        let response = await instance.post(`follow/${id}`)\r\n        return response.data\r\n    },\r\n    setUsers: (id) => {\r\n        console.warn(\"Obsolete method. Pleas profileAPI object method\")\r\n        return profileAPI.setUsers(id)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    async me() {\r\n        let response = await instance.get(`auth/me`)\r\n        return response.data\r\n\r\n    },\r\n    async login(email, password, rememberMe = false) {\r\n        let response = await instance.post(`/auth/login`, {email, password, rememberMe})\r\n\r\n        return response.data\r\n\r\n    },\r\n    async logout() {\r\n        let response = instance.delete(`/auth/login`)\r\n        return response.data\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    setUsers: (id) => {\r\n        return instance.get(`profile/` + id)\r\n    },\r\n    getStatus: (id) => {\r\n        return instance.get(`profile/status/` + id)\r\n    },\r\n\r\n    updateStatus: (status) => {\r\n        return instance.put(`profile/status`, {status: status})\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}