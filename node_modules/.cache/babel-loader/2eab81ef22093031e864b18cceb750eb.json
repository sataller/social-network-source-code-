{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\react\\\\net\\\\project1\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\react\\\\net\\\\project1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _toConsumableArray from\"D:\\\\react\\\\net\\\\project1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"D:\\\\react\\\\net\\\\project1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{dialogsAPI}from\"../API/api\";import{updateObjectInArray}from\"../utils/objectHelpers\";var SEND_MESSAGE=\"network/dialogs/SEND_MESSAGE\";var START_CHATTING=\"network/dialogs/START_CHATTING\";var SET_DIALOGS=\"network/dialogs/SET_DIALOGS\";var GET_DIALOGS_MESSAGES=\"network/dialogs/GET_DIALOGS_MESSAGES\";var UPDATE_ACTIVE_DIALOG=\"network/dialogs/UPDATE_ACTIVE_DIALOG\";var UPDATE_MESSAGE_VIEWED=\"network/dialogs/UPDATE_MESSAGE_VIEWED\";var ADD_MESSAGE_IN_SPAM=\"network/dialogs/ADD_MESSAGE_IN_SPAM\";var DELETE_MESSAGE=\"network/dialogs/DELETE_MESSAGE\";var RETURN_MESSAGE=\"network/dialogs/RETURN_MESSAGE\";var initialisation={dialogs:[],activeDialogId:null,messages:null,messagesItems:null,messagePageSize:20,numberOfPage:1,spamMessagesId:[],deleteMessagesId:[]};var dialogsReducer=function dialogsReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialisation;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case SEND_MESSAGE:{return _objectSpread({},state,{// item: [...state.messages.items, action.newMessage.message],\nmessagesItems:[].concat(_toConsumableArray(state.messages.items),[action.newMessage])});}case START_CHATTING:{return _objectSpread({},state,{dialogs:[].concat(_toConsumableArray(state.dialogs),[action.dialog])});}case SET_DIALOGS:{return _objectSpread({},state,{dialogs:action.dialogs});}case GET_DIALOGS_MESSAGES:{return _objectSpread({},state,{messages:action.messages,messagesItems:action.messages.items});}case UPDATE_ACTIVE_DIALOG:{return _objectSpread({},state,{activeDialogId:action.userId});}case ADD_MESSAGE_IN_SPAM:{return _objectSpread({},state,{spamMessagesId:[].concat(_toConsumableArray(state.spamMessagesId),[action.messageId]),messagesItems:updateObjectInArray(state.messagesItems,\"id\",action.messageId,{body:\"Message is add to spam\"})});}case DELETE_MESSAGE:{return _objectSpread({},state,{deleteMessagesId:[].concat(_toConsumableArray(state.deleteMessagesId),[action.messageId]),messagesItems:updateObjectInArray(state.messagesItems,\"id\",action.messageId,{body:\"Message si deleted\"})});}case RETURN_MESSAGE:{return{messagesItems:updateObjectInArray(state.messagesItems,\"id\",action.messageId,{body:\"Message si deleted\"})};}default:return state;}};export var sendMessageAC=function sendMessageAC(newMessage){return{type:SEND_MESSAGE,newMessage:newMessage};};export var startChatting=function startChatting(dialog){return{type:START_CHATTING,dialog:dialog};};export var setDialogs=function setDialogs(dialogs){return{type:SET_DIALOGS,dialogs:dialogs};};export var getDialogMessages=function getDialogMessages(messages){return{type:GET_DIALOGS_MESSAGES,messages:messages};};export var updateActiveDialog=function updateActiveDialog(userId){return{type:UPDATE_ACTIVE_DIALOG,userId:userId};};export var addMessageInSpam=function addMessageInSpam(message){return{type:ADD_MESSAGE_IN_SPAM,message:message};};export var deleteMessage=function deleteMessage(messageId){return{type:DELETE_MESSAGE,messageId:messageId};};export var returnMessage=function returnMessage(message){return{type:RETURN_MESSAGE,message:message};};export var sendNewMessage=function sendNewMessage(userId,body){return(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return dialogsAPI.sendMessage(userId,body);case 2:response=_context.sent;if(response.data.resultCode===0){dispatch(sendMessageAC(response.data.data.message));}case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());};export var startDialog=function startDialog(userId){return(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return dialogsAPI.startChatting(userId);case 2:response=_context2.sent;if(response.resultCode===0){dispatch(startChatting(response.data));}case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}());};export var getDialogs=function getDialogs(){return(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return dialogsAPI.getDialogs();case 2:response=_context3.sent;dispatch(setDialogs(response.data));case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}());};export var getMessages=function getMessages(userId,count,pageNumber){return(/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var response;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return dialogsAPI.getMassagesList(userId,count,pageNumber);case 2:response=_context4.sent;dispatch(getDialogMessages(response.data));case 4:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x4){return _ref4.apply(this,arguments);};}());};export var setActiveDialog=function setActiveDialog(userId){return function(dispatch){dispatch(updateActiveDialog(userId));};};export var setMessageViewed=function setMessageViewed(messageId){return(/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return dialogsAPI.viewedMessage(messageId);case 2:case\"end\":return _context5.stop();}}},_callee5);}));return function(_x5){return _ref5.apply(this,arguments);};}());};export var sendMessageInSpam=function sendMessageInSpam(messageId){return(/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch){var response;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return dialogsAPI.addMassageToSpam(messageId);case 2:response=_context6.sent;if(response.data.resultCode===0){dispatch(addMessageInSpam(response.data));}case 4:case\"end\":return _context6.stop();}}},_callee6);}));return function(_x6){return _ref6.apply(this,arguments);};}());};export var deleteMessageForMe=function deleteMessageForMe(messageId){return(/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch){return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return dialogsAPI.deleteMessageForMe(messageId);case 2:dispatch(deleteMessage(messageId));case 3:case\"end\":return _context7.stop();}}},_callee7);}));return function(_x7){return _ref7.apply(this,arguments);};}());};export var restoreMessage=function restoreMessage(messageId){return(/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(dispatch){var response;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.next=2;return dialogsAPI.restoreMessage(messageId);case 2:response=_context8.sent;dispatch(returnMessage(response.data));case 4:case\"end\":return _context8.stop();}}},_callee8);}));return function(_x8){return _ref8.apply(this,arguments);};}());};export default dialogsReducer;","map":{"version":3,"sources":["D:/react/net/project1/src/Redux/dialogsReducer.js"],"names":["dialogsAPI","updateObjectInArray","SEND_MESSAGE","START_CHATTING","SET_DIALOGS","GET_DIALOGS_MESSAGES","UPDATE_ACTIVE_DIALOG","UPDATE_MESSAGE_VIEWED","ADD_MESSAGE_IN_SPAM","DELETE_MESSAGE","RETURN_MESSAGE","initialisation","dialogs","activeDialogId","messages","messagesItems","messagePageSize","numberOfPage","spamMessagesId","deleteMessagesId","dialogsReducer","state","action","type","items","newMessage","dialog","userId","messageId","body","sendMessageAC","startChatting","setDialogs","getDialogMessages","updateActiveDialog","addMessageInSpam","message","deleteMessage","returnMessage","sendNewMessage","dispatch","sendMessage","response","data","resultCode","startDialog","getDialogs","getMessages","count","pageNumber","getMassagesList","setActiveDialog","setMessageViewed","viewedMessage","sendMessageInSpam","addMassageToSpam","deleteMessageForMe","restoreMessage"],"mappings":"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","sourcesContent":["import {dialogsAPI} from \"../API/api\";\r\nimport {updateObjectInArray} from \"../utils/objectHelpers\";\r\n\r\nconst SEND_MESSAGE = \"network/dialogs/SEND_MESSAGE\";\r\nconst START_CHATTING = \"network/dialogs/START_CHATTING\";\r\nconst SET_DIALOGS = \"network/dialogs/SET_DIALOGS\";\r\nconst GET_DIALOGS_MESSAGES = \"network/dialogs/GET_DIALOGS_MESSAGES\";\r\nconst UPDATE_ACTIVE_DIALOG = \"network/dialogs/UPDATE_ACTIVE_DIALOG\";\r\nconst UPDATE_MESSAGE_VIEWED = \"network/dialogs/UPDATE_MESSAGE_VIEWED\";\r\nconst ADD_MESSAGE_IN_SPAM = \"network/dialogs/ADD_MESSAGE_IN_SPAM\";\r\nconst DELETE_MESSAGE = \"network/dialogs/DELETE_MESSAGE\";\r\nconst RETURN_MESSAGE = \"network/dialogs/RETURN_MESSAGE\";\r\n\r\n\r\nlet initialisation = {\r\n    dialogs: [],\r\n    activeDialogId: null,\r\n    messages: null,\r\n    messagesItems: null,\r\n    messagePageSize: 20,\r\n    numberOfPage: 1,\r\n    spamMessagesId: [],\r\n    deleteMessagesId: [],\r\n\r\n};\r\n\r\n\r\nlet dialogsReducer = (state = initialisation, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                // item: [...state.messages.items, action.newMessage.message],\r\n                messagesItems: [...state.messages.items, (action.newMessage)],\r\n            }\r\n        }\r\n        case START_CHATTING: {\r\n            return {\r\n                ...state,\r\n                dialogs: [...state.dialogs, action.dialog]\r\n            }\r\n        }\r\n        case SET_DIALOGS: {\r\n            return {\r\n                ...state,\r\n                dialogs: action.dialogs,\r\n            }\r\n        }\r\n        case GET_DIALOGS_MESSAGES: {\r\n            return {\r\n                ...state,\r\n                messages: action.messages,\r\n                messagesItems: action.messages.items,\r\n            }\r\n        }\r\n        case UPDATE_ACTIVE_DIALOG: {\r\n            return {\r\n                ...state,\r\n                activeDialogId: action.userId,\r\n            }\r\n        }\r\n        case ADD_MESSAGE_IN_SPAM: {\r\n            return {\r\n                ...state,\r\n                spamMessagesId: [...state.spamMessagesId, action.messageId],\r\n                messagesItems: updateObjectInArray(state.messagesItems, \"id\", action.messageId, {body: \"Message is add to spam\"})\r\n            }\r\n        }\r\n        case DELETE_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                deleteMessagesId: [...state.deleteMessagesId, action.messageId],\r\n                messagesItems: updateObjectInArray(state.messagesItems, \"id\", action.messageId, {body: \"Message si deleted\"})\r\n            }\r\n        }\r\n        case RETURN_MESSAGE: {\r\n            return {\r\n                messagesItems: updateObjectInArray(state.messagesItems, \"id\", action.messageId, {body: \"Message si deleted\"})\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const sendMessageAC = (newMessage) => ({type: SEND_MESSAGE, newMessage});\r\n\r\nexport const startChatting = (dialog) => ({type: START_CHATTING, dialog});\r\n\r\nexport const setDialogs = (dialogs) => ({type: SET_DIALOGS, dialogs});\r\n\r\nexport const getDialogMessages = (messages) => ({type: GET_DIALOGS_MESSAGES, messages})\r\n\r\nexport const updateActiveDialog = (userId) => ({type: UPDATE_ACTIVE_DIALOG, userId})\r\n\r\nexport const addMessageInSpam = (message) => ({type: ADD_MESSAGE_IN_SPAM, message})\r\n\r\nexport const deleteMessage = (messageId) => ({type: DELETE_MESSAGE, messageId})\r\n\r\nexport const returnMessage = (message) => ({type: RETURN_MESSAGE, message})\r\n\r\nexport const sendNewMessage = (userId, body) => async (dispatch) => {\r\n    const response = await dialogsAPI.sendMessage(userId, body)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(sendMessageAC(response.data.data.message))\r\n\r\n    }\r\n}\r\n\r\nexport const startDialog = (userId) => async (dispatch) => {\r\n    const response = await dialogsAPI.startChatting(userId)\r\n    if (response.resultCode === 0) {\r\n        dispatch(startChatting(response.data))\r\n    }\r\n}\r\n\r\nexport const getDialogs = () => async (dispatch) => {\r\n    const response = await dialogsAPI.getDialogs()\r\n    dispatch(setDialogs(response.data))\r\n}\r\n\r\nexport const getMessages = (userId, count, pageNumber) => async (dispatch) => {\r\n\r\n    const response = await dialogsAPI.getMassagesList(userId, count, pageNumber)\r\n    dispatch(getDialogMessages(response.data))\r\n}\r\n\r\nexport const setActiveDialog = (userId) => (dispatch) => {\r\n    dispatch(updateActiveDialog(userId))\r\n}\r\n\r\nexport const setMessageViewed = (messageId) => async (dispatch) => {\r\n    await dialogsAPI.viewedMessage(messageId)\r\n}\r\n\r\nexport const sendMessageInSpam = (messageId) => async (dispatch) => {\r\n    const response = await dialogsAPI.addMassageToSpam(messageId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(addMessageInSpam(response.data))\r\n    }\r\n}\r\n\r\nexport const deleteMessageForMe = (messageId) => async (dispatch) => {\r\n    await dialogsAPI.deleteMessageForMe(messageId)\r\n    dispatch(deleteMessage(messageId))\r\n}\r\n\r\nexport const restoreMessage = (messageId) => async (dispatch) => {\r\n    const response = await dialogsAPI.restoreMessage(messageId)\r\n    dispatch(returnMessage(response.data))\r\n}\r\n\r\n\r\nexport default dialogsReducer\r\n"]},"metadata":{},"sourceType":"module"}