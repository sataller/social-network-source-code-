{"ast":null,"code":"import _defineProperty from\"D:\\\\react\\\\net\\\\project1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"D:\\\\react\\\\net\\\\project1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\react\\\\net\\\\project1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"D:\\\\react\\\\net\\\\project1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"D:\\\\react\\\\net\\\\project1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"D:\\\\react\\\\net\\\\project1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from\"react\";import{connect}from\"react-redux\";import{deleteMessageForMe,getDialogs,getMessages,restoreMessage,sendMessageInSpam,sendNewMessage,setActiveDialog,setMessageViewed,startDialog}from\"../../Redux/dialogsReducer\";import Dialogs from\"./Dialogs\";import withAuthRedirect from\"../../HOC/withAuthRedirect\";var DialogsContainer=/*#__PURE__*/function(_React$Component){_inherits(DialogsContainer,_React$Component);function DialogsContainer(){_classCallCheck(this,DialogsContainer);return _possibleConstructorReturn(this,_getPrototypeOf(DialogsContainer).apply(this,arguments));}_createClass(DialogsContainer,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.getDialogs();}},{key:\"render\",value:function render(){var _React$createElement;return React.createElement(Dialogs,(_React$createElement={sendNewMessage:this.props.sendNewMessage,getDialogs:this.props.getDialogs,startDialog:this.props.startDialog,dialogsPage:this.props.dialogsPage,isAuth:this.props.isAuth,authUserId:this.props.authUserId,dialogs:this.props.dialogs,getMessages:this.props.getMessages,messages:this.props.messages},_defineProperty(_React$createElement,\"sendNewMessage\",this.props.sendNewMessage),_defineProperty(_React$createElement,\"activeDialogId\",this.props.activeDialogId),_defineProperty(_React$createElement,\"messageItems\",this.props.messageItems),_defineProperty(_React$createElement,\"numberOfPage\",this.props.numberOfPage),_defineProperty(_React$createElement,\"messagePageSize\",this.props.messagePageSize),_defineProperty(_React$createElement,\"setActiveDialog\",this.props.setActiveDialog),_defineProperty(_React$createElement,\"setMessageViewed\",this.props.setMessageViewed),_defineProperty(_React$createElement,\"sendMessageInSpam\",this.props.sendMessageInSpam),_defineProperty(_React$createElement,\"spamMessagesId\",this.props.spamMessagesId),_defineProperty(_React$createElement,\"deleteMessagesId\",this.props.deleteMessagesId),_defineProperty(_React$createElement,\"deleteMessageForMe\",this.props.deleteMessageForMe),_defineProperty(_React$createElement,\"restoreMessage\",this.props.restoreMessage),_React$createElement));}}]);return DialogsContainer;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{dialogsPage:state.dialogsPage,isAuth:state.auth.isAuth,authUserId:state.auth.id,dialogs:state.dialogsPage.dialogs,messages:state.dialogsPage.messages,activeDialogId:state.dialogsPage.activeDialogId,messageItems:state.dialogsPage.messageItems,messagePageSize:state.dialogsPage.messagePageSize,numberOfPage:state.dialogsPage.numberOfPage,spamMessagesId:state.dialogsPage.spamMessagesId,deleteMessagesId:state.dialogsPage.deleteMessagesId};};var AuthRedirectComponent=withAuthRedirect(DialogsContainer);export default connect(mapStateToProps,{sendNewMessage:sendNewMessage,getDialogs:getDialogs,startDialog:startDialog,getMessages:getMessages,setActiveDialog:setActiveDialog,setMessageViewed:setMessageViewed,sendMessageInSpam:sendMessageInSpam,deleteMessageForMe:deleteMessageForMe,restoreMessage:restoreMessage})(AuthRedirectComponent);","map":{"version":3,"sources":["D:/react/net/project1/src/components/Dialogs/DialogsContainer.jsx"],"names":["React","connect","deleteMessageForMe","getDialogs","getMessages","restoreMessage","sendMessageInSpam","sendNewMessage","setActiveDialog","setMessageViewed","startDialog","Dialogs","withAuthRedirect","DialogsContainer","props","dialogsPage","isAuth","authUserId","dialogs","messages","activeDialogId","messageItems","numberOfPage","messagePageSize","spamMessagesId","deleteMessagesId","Component","mapStateToProps","state","auth","id","AuthRedirectComponent"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    deleteMessageForMe,\r\n    getDialogs,\r\n    getMessages, restoreMessage, sendMessageInSpam,\r\n    sendNewMessage,\r\n    setActiveDialog,\r\n    setMessageViewed,\r\n    startDialog\r\n} from \"../../Redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport withAuthRedirect from \"../../HOC/withAuthRedirect\";\r\n\r\nclass DialogsContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getDialogs()\r\n    }\r\n\r\n    render() {\r\n        return <Dialogs sendNewMessage={this.props.sendNewMessage} getDialogs={this.props.getDialogs}\r\n                        startDialog={this.props.startDialog}\r\n                        dialogsPage={this.props.dialogsPage} isAuth={this.props.isAuth}\r\n                        authUserId={this.props.authUserId} dialogs={this.props.dialogs}\r\n                        getMessages={this.props.getMessages} messages={this.props.messages}\r\n                        sendNewMessage={this.props.sendNewMessage}\r\n                        activeDialogId={this.props.activeDialogId} messageItems={this.props.messageItems}\r\n                        numberOfPage={this.props.numberOfPage} messagePageSize={this.props.messagePageSize}\r\n                        setActiveDialog={this.props.setActiveDialog} setMessageViewed={this.props.setMessageViewed}\r\n                        sendMessageInSpam={this.props.sendMessageInSpam} spamMessagesId={this.props.spamMessagesId}\r\n                        deleteMessagesId={this.props.deleteMessagesId} deleteMessageForMe={this.props.deleteMessageForMe}\r\n                        restoreMessage={this.props.restoreMessage}/>\r\n    }\r\n\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth,\r\n        authUserId: state.auth.id,\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        activeDialogId: state.dialogsPage.activeDialogId,\r\n        messageItems: state.dialogsPage.messageItems,\r\n        messagePageSize: state.dialogsPage.messagePageSize,\r\n        numberOfPage: state.dialogsPage.numberOfPage,\r\n        spamMessagesId: state.dialogsPage.spamMessagesId,\r\n        deleteMessagesId: state.dialogsPage.deleteMessagesId,\r\n    }\r\n}\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(DialogsContainer)\r\n\r\nexport default connect(mapStateToProps, {sendNewMessage, getDialogs,\r\n    startDialog, getMessages, setActiveDialog, setMessageViewed, sendMessageInSpam,\r\n    deleteMessageForMe, restoreMessage})(AuthRedirectComponent)"]},"metadata":{},"sourceType":"module"}