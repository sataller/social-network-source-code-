{"ast":null,"code":"import _defineProperty from\"D:\\\\react\\\\net\\\\project1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import React from\"react\";import NewMessage from\"./NewMessage/NewMessage\";import User from\"./Dialog/User/User\";import style from\"./Dialogs.module.css\";import MessagesContainer from\"./Dialog/Message/MessagesContainer\";var Dialogs=function Dialogs(props){debugger;var usersElement=null;if(props.dialogs){usersElement=props.dialogs.map(function(u){return React.createElement(User,{id:u.id,avatar:u.photos.small,name:u.userName,key:u.id,dialogs:props.dialogs,newMessagesCount:u.newMessagesCount,lastUserActivityDate:u.lastUserActivityDate,lastDialogActivityDate:u.lastDialogActivityDate,hasNewMessages:u.hasNewMessages,getMessages:props.getMessages,numberOfPage:props.numberOfPage,messagePageSize:props.messagePageSize,setActiveDialog:props.setActiveDialog});});}return React.createElement(\"div\",{className:style.dialogs},React.createElement(\"div\",{className:style.users},usersElement),React.createElement(\"div\",{className:style.messages},React.createElement(MessagesContainer,{activeDialogId:props.activeDialogId,dialogsPage:props.dialogsPage,getMessages:props.getMessages,numberOfPage:props.numberOfPage,messagePageSize:props.messagePageSize,authUserId:props.authUserId,setMessageViewed:props.setMessageViewed,spamMessagesId:props.spamMessagesId,deleteMessagesId:props.deleteMessagesId,deleteMessageForMe:props.deleteMessageForMe,restoreMessage:props.restoreMessage})),React.createElement(\"div\",{className:style.newMessage},props.activeDialogId?React.createElement(NewMessage,_defineProperty({dialogsPage:props.dialogsPage,sendNewMessage:props.sendNewMessage,activeDialogId:props.activeDialogId},\"sendNewMessage\",props.sendNewMessage)):null));};export default Dialogs;","map":{"version":3,"sources":["D:/react/net/project1/src/components/Dialogs/Dialogs.jsx"],"names":["React","NewMessage","User","style","MessagesContainer","Dialogs","props","usersElement","dialogs","map","u","id","photos","small","userName","newMessagesCount","lastUserActivityDate","lastDialogActivityDate","hasNewMessages","getMessages","numberOfPage","messagePageSize","setActiveDialog","users","messages","activeDialogId","dialogsPage","authUserId","setMessageViewed","spamMessagesId","deleteMessagesId","deleteMessageForMe","restoreMessage","newMessage","sendNewMessage"],"mappings":"gHAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,MAAOC,CAAAA,KAAP,KAAkB,sBAAlB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,oCAA9B,CAGA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,CACvB,SACA,GAAIC,CAAAA,YAAY,CAAG,IAAnB,CAEA,GAAID,KAAK,CAACE,OAAV,CAAmB,CACfD,YAAY,CAAGD,KAAK,CAACE,OAAN,CAAcC,GAAd,CAAkB,SAAAC,CAAC,QAAI,qBAAC,IAAD,EAAM,EAAE,CAAEA,CAAC,CAACC,EAAZ,CACM,MAAM,CAAED,CAAC,CAACE,MAAF,CAASC,KADvB,CAEM,IAAI,CAAEH,CAAC,CAACI,QAFd,CAGM,GAAG,CAAEJ,CAAC,CAACC,EAHb,CAIM,OAAO,CAAEL,KAAK,CAACE,OAJrB,CAKM,gBAAgB,CAAEE,CAAC,CAACK,gBAL1B,CAMM,oBAAoB,CAAEL,CAAC,CAACM,oBAN9B,CAOM,sBAAsB,CAAEN,CAAC,CAACO,sBAPhC,CAQM,cAAc,CAAEP,CAAC,CAACQ,cARxB,CASM,WAAW,CAAEZ,KAAK,CAACa,WATzB,CAUM,YAAY,CAAEb,KAAK,CAACc,YAV1B,CAWM,eAAe,CAAEd,KAAK,CAACe,eAX7B,CAYM,eAAe,CAAEf,KAAK,CAACgB,eAZ7B,EAAJ,EAAnB,CAAf,CAcH,CAED,MAEI,4BAAK,SAAS,CAAEnB,KAAK,CAACK,OAAtB,EAEI,2BAAK,SAAS,CAAEL,KAAK,CAACoB,KAAtB,EACKhB,YADL,CAFJ,CAKI,2BAAK,SAAS,CAAEJ,KAAK,CAACqB,QAAtB,EACI,oBAAC,iBAAD,EAAmB,cAAc,CAAElB,KAAK,CAACmB,cAAzC,CAAyD,WAAW,CAAEnB,KAAK,CAACoB,WAA5E,CACmB,WAAW,CAAEpB,KAAK,CAACa,WADtC,CACmD,YAAY,CAAEb,KAAK,CAACc,YADvE,CAEmB,eAAe,CAAEd,KAAK,CAACe,eAF1C,CAE2D,UAAU,CAAEf,KAAK,CAACqB,UAF7E,CAGmB,gBAAgB,CAAErB,KAAK,CAACsB,gBAH3C,CAImB,cAAc,CAAEtB,KAAK,CAACuB,cAJzC,CAKmB,gBAAgB,CAAEvB,KAAK,CAACwB,gBAL3C,CAMmB,kBAAkB,CAAExB,KAAK,CAACyB,kBAN7C,CAOmB,cAAc,CAAEzB,KAAK,CAAC0B,cAPzC,EADJ,CALJ,CAgBI,2BAAK,SAAS,CAAE7B,KAAK,CAAC8B,UAAtB,EACK3B,KAAK,CAACmB,cAAN,CAAuB,oBAAC,UAAD,kBAAY,WAAW,CAAEnB,KAAK,CAACoB,WAA/B,CACY,cAAc,CAAEpB,KAAK,CAAC4B,cADlC,CAEY,cAAc,CAAE5B,KAAK,CAACmB,cAFlC,mBAG4BnB,KAAK,CAAC4B,cAHlC,EAAvB,CAG6E,IAJlF,CAhBJ,CAFJ,CA0BH,CA/CD,CAiDA,cAAe7B,CAAAA,OAAf","sourcesContent":["import React from \"react\"\r\nimport NewMessage from \"./NewMessage/NewMessage\";\r\nimport User from \"./Dialog/User/User\";\r\nimport style from \"./Dialogs.module.css\"\r\nimport MessagesContainer from \"./Dialog/Message/MessagesContainer\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    debugger\r\n    let usersElement = null;\r\n\r\n    if (props.dialogs) {\r\n        usersElement = props.dialogs.map(u => <User id={u.id}\r\n                                                    avatar={u.photos.small}\r\n                                                    name={u.userName}\r\n                                                    key={u.id}\r\n                                                    dialogs={props.dialogs}\r\n                                                    newMessagesCount={u.newMessagesCount}\r\n                                                    lastUserActivityDate={u.lastUserActivityDate}\r\n                                                    lastDialogActivityDate={u.lastDialogActivityDate}\r\n                                                    hasNewMessages={u.hasNewMessages}\r\n                                                    getMessages={props.getMessages}\r\n                                                    numberOfPage={props.numberOfPage}\r\n                                                    messagePageSize={props.messagePageSize}\r\n                                                    setActiveDialog={props.setActiveDialog}\r\n        />)\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={style.dialogs}>\r\n\r\n            <div className={style.users}>\r\n                {usersElement}\r\n            </div>\r\n            <div className={style.messages}>\r\n                <MessagesContainer activeDialogId={props.activeDialogId} dialogsPage={props.dialogsPage}\r\n                                   getMessages={props.getMessages} numberOfPage={props.numberOfPage}\r\n                                   messagePageSize={props.messagePageSize} authUserId={props.authUserId}\r\n                                   setMessageViewed={props.setMessageViewed}\r\n                                   spamMessagesId={props.spamMessagesId}\r\n                                   deleteMessagesId={props.deleteMessagesId}\r\n                                   deleteMessageForMe={props.deleteMessageForMe}\r\n                                   restoreMessage={props.restoreMessage}/>\r\n            </div>\r\n\r\n            <div className={style.newMessage}>\r\n                {props.activeDialogId ? <NewMessage dialogsPage={props.dialogsPage}\r\n                                                    sendNewMessage={props.sendNewMessage}\r\n                                                    activeDialogId={props.activeDialogId}\r\n                                                    sendNewMessage={props.sendNewMessage}/> : null}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs"]},"metadata":{},"sourceType":"module"}