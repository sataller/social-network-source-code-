{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\react\\\\net\\\\project1\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\react\\\\net\\\\project1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"D:\\\\react\\\\net\\\\project1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import React from\"react\";import{authAPI,securityAPI}from\"../API/api\";import{stopSubmit}from\"redux-form\";var SET_USER_DATA=\"network/auth/SET_USER_DATA\";var GET_CAPTCHA_URL_SUCCESS=\"network/auth/GET_CAPTCHA_URL_SUCCESS\";var initialization={userId:null,email:null,login:null,isFetching:false,isAuth:false,captchaURL:null};var authReducer=function authReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialization;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case SET_USER_DATA:case GET_CAPTCHA_URL_SUCCESS:return _objectSpread({},state,{},action.payload);default:return state;}};export var setAuthUserData=function setAuthUserData(id,email,login,isAuth){return{type:SET_USER_DATA,payload:{id:id,email:email,login:login,isAuth:isAuth}};};export var getAuthUserData=function getAuthUserData(){return function(dispatch){return authAPI.me().then(function(response){console.log(response);if(response.resultCode===0){var _response$data=response.data,id=_response$data.id,email=_response$data.email,login=_response$data.login,isAuth=_response$data.isAuth;dispatch(setAuthUserData(id,email,login,true));}});};};export var getCaptchaURLSuccess=function getCaptchaURLSuccess(captchaURL){return{type:GET_CAPTCHA_URL_SUCCESS,payload:{captchaURL:captchaURL}};};export var LogIn=function LogIn(email,password,rememberMe,captcha){return function(dispatch){authAPI.login(email,password,rememberMe,captcha).then(function(response){if(response.resultCode===0){dispatch(getAuthUserData());}else{if(response.resultCode===10){dispatch(getCaptchaURL());}var message=response.messages.length>0?response.messages[0]:\"some error\";dispatch(stopSubmit(\"login\",{_error:message}));}});};};export var getCaptchaURL=function getCaptchaURL(){return(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response,captchaURL;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return securityAPI.getCaptchaURL();case 2:response=_context.sent;captchaURL=response.data.url;dispatch(getCaptchaURLSuccess(captchaURL));case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());};export var Logout=function Logout(){return function(dispatch){authAPI.logout().then(function(response){if(response.resultCode===0){dispatch(setAuthUserData(null,null,null,false));}});};};export default authReducer;","map":{"version":3,"sources":["D:/react/net/project1/src/Redux/authReducer.js"],"names":["React","authAPI","securityAPI","stopSubmit","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","initialization","userId","email","login","isFetching","isAuth","captchaURL","authReducer","state","action","type","payload","setAuthUserData","id","getAuthUserData","dispatch","me","then","response","console","log","resultCode","data","getCaptchaURLSuccess","LogIn","password","rememberMe","captcha","getCaptchaURL","message","messages","length","_error","url","Logout","logout"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport {authAPI, securityAPI} from \"../API/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = \"network/auth/SET_USER_DATA\";\r\nconst GET_CAPTCHA_URL_SUCCESS = \"network/auth/GET_CAPTCHA_URL_SUCCESS\";\r\n\r\nlet initialization = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isFetching: false,\r\n    isAuth: false,\r\n    captchaURL: null,\r\n}\r\n\r\nconst authReducer = (state = initialization, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload: {\r\n        id, email, login, isAuth\r\n    }\r\n})\r\n\r\nexport const getAuthUserData = () => {\r\n    return (dispatch) => {\r\n        return authAPI.me().then(response => {\r\n            console.log(response)\r\n            if (response.resultCode === 0) {\r\n                let {id, email, login, isAuth} = response.data\r\n                dispatch(setAuthUserData(id, email, login, true))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const getCaptchaURLSuccess = (captchaURL) => ({type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaURL}})\r\n\r\n\r\nexport const LogIn = (email, password, rememberMe, captcha) => {\r\n    return (dispatch) => {\r\n        authAPI.login(email, password, rememberMe, captcha).then(response => {\r\n            if (response.resultCode === 0) {\r\n                dispatch(getAuthUserData())\r\n            } else {\r\n                if (response.resultCode === 10) {\r\n                    dispatch(getCaptchaURL())\r\n                }\r\n                let message = response.messages.length > 0 ? response.messages[0] : \"some error\";\r\n                dispatch(stopSubmit(\"login\", {_error: message}));\r\n            }\r\n        })\r\n    }\r\n}\r\nexport const getCaptchaURL = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaURL()\r\n    const captchaURL = response.data.url;\r\n    dispatch(getCaptchaURLSuccess(captchaURL));\r\n}\r\n\r\n\r\nexport const Logout = () => {\r\n    return (dispatch) => {\r\n        authAPI.logout().then(response => {\r\n            if (response.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default authReducer;"]},"metadata":{},"sourceType":"module"}