{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\net\\\\project1\\\\src\\\\components\\\\Dialogs\\\\DialogsContainer.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { sendMessageAC, updateMessageTextAC } from \"../../Redux/dialogsReducer\";\nimport Dialogs from \"./Dialogs\";\nimport { Redirect } from \"react-router-dom\";\n\nlet mapStateToProps = state => {\n  return {\n    dialogsPage: state.dialogsPage,\n    isAuth: state.auth.isAuth\n  };\n};\n\nlet AuthRedirectComponent = props => {\n  if (!props.isAuth) {\n    return React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(Dialogs, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }));\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    onAddMessage: userId => {\n      dispatch(sendMessageAC(userId));\n    },\n    onUpdateTextMessage: text => {\n      dispatch(updateMessageTextAC(text));\n    }\n  };\n};\n\nlet DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\nexport default DialogsContainer;","map":{"version":3,"sources":["D:/react/net/project1/src/components/Dialogs/DialogsContainer.jsx"],"names":["React","connect","sendMessageAC","updateMessageTextAC","Dialogs","Redirect","mapStateToProps","state","dialogsPage","isAuth","auth","AuthRedirectComponent","props","mapDispatchToProps","dispatch","onAddMessage","userId","onUpdateTextMessage","text","DialogsContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,aAAR,EAAuBC,mBAAvB,QAAiD,4BAAjD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;;AAGA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACC,WADhB;AAEHC,IAAAA,MAAM,EAAEF,KAAK,CAACG,IAAN,CAAWD;AAFhB,GAAP;AAIH,CALD;;AAOA,IAAIE,qBAAqB,GAAIC,KAAD,IAAW;AACnC,MAAI,CAACA,KAAK,CAACH,MAAX,EAAmB;AACf,WAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AACD,SAAO,oBAAC,OAAD,oBAAaG,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH,CALD;;AAOA,IAAIC,kBAAkB,GAAIC,QAAD,IAAc;AACnC,SAAO;AACHC,IAAAA,YAAY,EAAGC,MAAD,IAAY;AACtBF,MAAAA,QAAQ,CAACZ,aAAa,CAACc,MAAD,CAAd,CAAR;AACH,KAHE;AAIHC,IAAAA,mBAAmB,EAAGC,IAAD,IAAU;AAC3BJ,MAAAA,QAAQ,CAACX,mBAAmB,CAACe,IAAD,CAApB,CAAR;AACH;AANE,GAAP;AAQH,CATD;;AAWA,IAAIC,gBAAgB,GAAGlB,OAAO,CAACK,eAAD,EAAkBO,kBAAlB,CAAP,CAA6CF,qBAA7C,CAAvB;AAEA,eAAeQ,gBAAf","sourcesContent":["import React from \"react\"\r\nimport {connect} from \"react-redux\";\r\nimport {sendMessageAC, updateMessageTextAC} from \"../../Redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nlet AuthRedirectComponent = (props) => {\r\n    if (!props.isAuth) {\r\n        return <Redirect to=\"/login\"/>\r\n    }\r\n    return <Dialogs {...props}/>\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onAddMessage: (userId) => {\r\n            dispatch(sendMessageAC(userId))\r\n        },\r\n        onUpdateTextMessage: (text) => {\r\n            dispatch(updateMessageTextAC(text))\r\n        },\r\n    }\r\n}\r\n\r\nlet DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent)\r\n\r\nexport default DialogsContainer"]},"metadata":{},"sourceType":"module"}