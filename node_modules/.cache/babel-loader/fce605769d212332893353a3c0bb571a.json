{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\react\\\\net\\\\project1\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\react\\\\net\\\\project1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _toConsumableArray from\"D:\\\\react\\\\net\\\\project1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"D:\\\\react\\\\net\\\\project1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{toDoListAPI}from\"../API/api\";import{updateObjectInArray}from\"../utils/objectHelpers\";var GET_LISTS=\"network/toDoLists/GET_LISTS\";var ADD_NEW_LIST=\"network/toDoLists/ADD_NEW_LIST\";var DELETE_LIST=\"network/toDoLists/DELETE_LIST\";var UPDATE_LIST_TITLE=\"network/toDoLists/UPDATE_LIST_TITLE\";var GET_TASKS=\"network/toDoLists/GET_TASKS\";var CREATE_TASK=\"network/toDoLists/CREATE_TASKS\";var UPDATE_TASK=\"network/toDoLists/UPDATE_TASKS\";var DELETE_TASK=\"network/toDoLists/DELETE_TASK\";var REORDER_TASK=\"network/toDoLists/REORDER_TASK\";var initialisation={toDoLists:[],tasksLists:[]};var todoListReducer=function todoListReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialisation;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case GET_LISTS:{return _objectSpread({},state,{toDoLists:action.lists});}case ADD_NEW_LIST:{return _objectSpread({},state,{toDoLists:[].concat(_toConsumableArray(state.toDoLists),[action.newList])});}case DELETE_LIST:{return _objectSpread({},state,{toDoLists:state.toDoLists.filter(function(l){return l.id!==action.listId;})});}case UPDATE_LIST_TITLE:{return _objectSpread({},state,{toDoLists:updateObjectInArray(state.toDoLists,\"id\",action.listId,{title:action.title})});}case GET_TASKS:{return _objectSpread({},state,{// toDoLists: updateObjectInArray(state.toDoLists, \"id\", action.listId, {tasks: action.tasksList})\ntasksLists:[].concat(_toConsumableArray(state.tasksLists),[{listId:action.listId,tasks:action.tasksList}])});}case CREATE_TASK:{return _objectSpread({},state,{tasksLists:state.tasksLists.map(function(u){if(u.id===action.listId){return _objectSpread({},u,{tasks:[].concat(_toConsumableArray(u.tasks),[action.newTask])});}return u;})});}case UPDATE_TASK:{return _objectSpread({},state,{tasksLists:state.tasksLists.map(function(u){if(u.id===action.listId){return _objectSpread({},u,{tasks:u.tasks.map(function(t){if(t.id===action.taskId){return _objectSpread({},t,{item:[action.newProperty]});}})});}return u;})});}case DELETE_TASK:{return _objectSpread({},state,{tasksLists:state.tasksLists.map(function(u){if(u.id===action.listId){return _objectSpread({},u,{tasks:u.tasks.filter(function(t){return t.id!==action.taskId;})});}return u;})});}case REORDER_TASK:{return _objectSpread({},state);}default:return state;}};export var getLists=function getLists(lists){return{type:GET_LISTS,lists:lists};};export var addNewList=function addNewList(newList){return{type:ADD_NEW_LIST,newList:newList};};export var removeList=function removeList(listId){return{type:DELETE_LIST,listId:listId};};export var updateListTitle=function updateListTitle(listId,title){return{type:UPDATE_LIST_TITLE,listId:listId,title:title};};export var getTasks=function getTasks(listId,tasksList){return{type:GET_TASKS,listId:listId,tasksList:tasksList};};export var createTask=function createTask(listId,newTask){return{type:CREATE_TASK,listId:listId,newTask:newTask};};export var updateTask=function updateTask(listId,taskId,newProperty){return{type:UPDATE_TASK,listId:listId,taskId:taskId,newProperty:newProperty};};export var deleteTask=function deleteTask(listId,taskId){return{type:DELETE_TASK,listId:listId,taskId:taskId};};export var reorderTask=function reorderTask(listId,taskId,putAfterItemId){return{type:REORDER_TASK,listId:listId,taskId:taskId,putAfterItemId:putAfterItemId};};export var getToDoLists=function getToDoLists(){return(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return toDoListAPI.getAllLists();case 2:response=_context.sent;dispatch(getLists(response.data));case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());};export var createNewList=function createNewList(title){return(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return toDoListAPI.createNewList(title);case 2:response=_context2.sent;dispatch(addNewList(response.data));case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}());};export var deleteList=function deleteList(listId){return(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return toDoListAPI.deleteList(listId);case 2:response=_context3.sent;if(response.resultCode===0){dispatch(removeList(listId));}case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}());};export var updateList=function updateList(listId,title){return(/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var response;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return toDoListAPI.updateList(listId,title);case 2:response=_context4.sent;dispatch(updateListTitle(listId,title));case 4:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x4){return _ref4.apply(this,arguments);};}());};export var reorderLists=function reorderLists(listId,purAfterItemId){return(/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch){var response;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return toDoListAPI.reorderList(listId,purAfterItemId);case 2:response=_context5.sent;if(response.resultCode===0){// dispatch(stId,\n}case 4:case\"end\":return _context5.stop();}}},_callee5);}));return function(_x5){return _ref5.apply(this,arguments);};}());};export var getTasksForList=function getTasksForList(listId,count,page){return(/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch){var response;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return toDoListAPI.getPortionTasksForList(listId,count,page);case 2:response=_context6.sent;dispatch(getTasks(listId,response.data));case 4:case\"end\":return _context6.stop();}}},_callee6);}));return function(_x6){return _ref6.apply(this,arguments);};}());};export var createTasksForList=function createTasksForList(listId){return(/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch){var response;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return toDoListAPI.createNewTaskForList(listId);case 2:response=_context7.sent;dispatch(createTask(listId,response.data));case 4:case\"end\":return _context7.stop();}}},_callee7);}));return function(_x7){return _ref7.apply(this,arguments);};}());};export var updateTasksForList=function updateTasksForList(listId,taskId,title,description,completed,status,priority,startDate,deadline){return(/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(dispatch){var response;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.next=2;return toDoListAPI.updateTasksForList(listId,taskId,title,description,completed,status,priority,startDate,deadline);case 2:response=_context8.sent;if(response.resultCode===0){dispatch(updateTask(listId,taskId,response.data));}case 4:case\"end\":return _context8.stop();}}},_callee8);}));return function(_x8){return _ref8.apply(this,arguments);};}());};export var deleteTasksForList=function deleteTasksForList(listId,taskId){return(/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee9(dispatch){var response;return _regeneratorRuntime.wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:_context9.next=2;return toDoListAPI.deleteTaskForList(listId,taskId);case 2:response=_context9.sent;if(response.resultCode===0){dispatch(deleteTask(listId,taskId));}case 4:case\"end\":return _context9.stop();}}},_callee9);}));return function(_x9){return _ref9.apply(this,arguments);};}());};export var changeTaskOrder=function changeTaskOrder(listId,taskId,putAfterItemId){return(/*#__PURE__*/function(){var _ref10=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee10(dispatch){var response;return _regeneratorRuntime.wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:_context10.next=2;return toDoListAPI.changeTaskOrder(listId,taskId);case 2:response=_context10.sent;if(response.resultCode===0){dispatch(reorderTask(listId,taskId,putAfterItemId));}case 4:case\"end\":return _context10.stop();}}},_callee10);}));return function(_x10){return _ref10.apply(this,arguments);};}());};export default todoListReducer;","map":{"version":3,"sources":["D:/react/net/project1/src/Redux/todoListReducer.js"],"names":["toDoListAPI","updateObjectInArray","GET_LISTS","ADD_NEW_LIST","DELETE_LIST","UPDATE_LIST_TITLE","GET_TASKS","CREATE_TASK","UPDATE_TASK","DELETE_TASK","REORDER_TASK","initialisation","toDoLists","tasksLists","todoListReducer","state","action","type","lists","newList","filter","l","id","listId","title","tasks","tasksList","map","u","newTask","t","taskId","item","newProperty","getLists","addNewList","removeList","updateListTitle","getTasks","createTask","updateTask","deleteTask","reorderTask","putAfterItemId","getToDoLists","dispatch","getAllLists","response","data","createNewList","deleteList","resultCode","updateList","reorderLists","purAfterItemId","reorderList","getTasksForList","count","page","getPortionTasksForList","createTasksForList","createNewTaskForList","updateTasksForList","description","completed","status","priority","startDate","deadline","deleteTasksForList","deleteTaskForList","changeTaskOrder"],"mappings":"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","sourcesContent":["import {toDoListAPI} from \"../API/api\";\r\nimport {updateObjectInArray} from \"../utils/objectHelpers\";\r\n\r\nconst GET_LISTS = \"network/toDoLists/GET_LISTS\"\r\nconst ADD_NEW_LIST = \"network/toDoLists/ADD_NEW_LIST\"\r\nconst DELETE_LIST = \"network/toDoLists/DELETE_LIST\"\r\nconst UPDATE_LIST_TITLE = \"network/toDoLists/UPDATE_LIST_TITLE\"\r\nconst GET_TASKS = \"network/toDoLists/GET_TASKS\"\r\nconst CREATE_TASK = \"network/toDoLists/CREATE_TASKS\"\r\nconst UPDATE_TASK = \"network/toDoLists/UPDATE_TASKS\"\r\nconst DELETE_TASK = \"network/toDoLists/DELETE_TASK\"\r\nconst REORDER_TASK = \"network/toDoLists/REORDER_TASK\"\r\n\r\nlet initialisation = {\r\n    toDoLists: [],\r\n    tasksLists: [],\r\n}\r\n\r\nconst todoListReducer = (state = initialisation, action) => {\r\n    switch (action.type) {\r\n        case GET_LISTS: {\r\n            return {\r\n                ...state,\r\n                toDoLists: action.lists,\r\n            }\r\n        }\r\n        case ADD_NEW_LIST: {\r\n            return {\r\n                ...state,\r\n                toDoLists: [...state.toDoLists, action.newList]\r\n            }\r\n        }\r\n        case DELETE_LIST: {\r\n            return {\r\n                ...state,\r\n                toDoLists: state.toDoLists.filter(l => l.id !== action.listId)\r\n            }\r\n        }\r\n        case UPDATE_LIST_TITLE: {\r\n            return {\r\n                ...state,\r\n                toDoLists: updateObjectInArray(state.toDoLists, \"id\", action.listId, {title: action.title})\r\n            }\r\n        }\r\n        case GET_TASKS: {\r\n            return {\r\n                ...state,\r\n                // toDoLists: updateObjectInArray(state.toDoLists, \"id\", action.listId, {tasks: action.tasksList})\r\n                tasksLists: [...state.tasksLists, {listId: action.listId, tasks: action.tasksList}],\r\n            }\r\n        }\r\n        case CREATE_TASK: {\r\n            return {\r\n                ...state,\r\n                tasksLists: state.tasksLists.map(u => {\r\n                    if (u.id === action.listId) {\r\n                        return {...u, tasks: [...u.tasks, action.newTask]}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        }\r\n        case UPDATE_TASK: {\r\n            return {\r\n                ...state,\r\n                tasksLists: state.tasksLists.map(u => {\r\n                    if (u.id === action.listId) {\r\n                        return {\r\n                            ...u, tasks: u.tasks.map(t => {\r\n                                if (t.id === action.taskId) {\r\n                                    return {...t, item: [action.newProperty]}\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        }\r\n        case DELETE_TASK: {\r\n            return {\r\n                ...state,\r\n                tasksLists: state.tasksLists.map(u => {\r\n                    if (u.id === action.listId) {\r\n                        return {\r\n                            ...u, tasks: u.tasks.filter(t => t.id !== action.taskId)\r\n                        }\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        }\r\n        case REORDER_TASK:{\r\n            return{\r\n                ...state,\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const getLists = (lists) => ({type: GET_LISTS, lists})\r\n\r\nexport const addNewList = (newList) => ({type: ADD_NEW_LIST, newList})\r\n\r\nexport const removeList = (listId) => ({type: DELETE_LIST, listId})\r\n\r\nexport const updateListTitle = (listId, title) => ({type: UPDATE_LIST_TITLE, listId, title})\r\n\r\nexport const getTasks = (listId, tasksList) => ({type: GET_TASKS, listId, tasksList})\r\n\r\nexport const createTask = (listId, newTask) => ({type: CREATE_TASK, listId, newTask})\r\n\r\nexport const updateTask = (listId, taskId, newProperty) => ({type: UPDATE_TASK, listId, taskId, newProperty})\r\n\r\nexport const deleteTask = (listId, taskId) => ({type: DELETE_TASK, listId, taskId})\r\n\r\nexport const reorderTask = (listId, taskId, putAfterItemId) => ({type: REORDER_TASK, listId, taskId, putAfterItemId})\r\n\r\nexport const getToDoLists = () => async (dispatch) => {\r\n    const response = await toDoListAPI.getAllLists();\r\n    dispatch(getLists(response.data))\r\n}\r\nexport const createNewList = (title) => async (dispatch) => {\r\n    const response = await toDoListAPI.createNewList(title);\r\n    dispatch(addNewList(response.data))\r\n}\r\nexport const deleteList = (listId) => async (dispatch) => {\r\n    const response = await toDoListAPI.deleteList(listId);\r\n    if (response.resultCode === 0) {\r\n        dispatch(removeList(listId))\r\n    }\r\n}\r\nexport const updateList = (listId, title) => async (dispatch) => {\r\n    const response = await toDoListAPI.updateList(listId, title);\r\n    dispatch(updateListTitle(listId, title))\r\n}\r\n\r\nexport const reorderLists = (listId, purAfterItemId) => async (dispatch) => {\r\n    const response = await toDoListAPI.reorderList(listId, purAfterItemId);\r\n    if (response.resultCode === 0) {\r\n        // dispatch(stId,\r\n    }\r\n}\r\n\r\nexport const getTasksForList = (listId, count, page) => async (dispatch) => {\r\n    const response = await toDoListAPI.getPortionTasksForList(listId, count, page);\r\n    dispatch(getTasks(listId, response.data))\r\n}\r\nexport const createTasksForList = (listId) => async (dispatch) => {\r\n    const response = await toDoListAPI.createNewTaskForList(listId);\r\n    dispatch(createTask(listId, response.data))\r\n}\r\nexport const updateTasksForList = (listId, taskId, title, description, completed, status,\r\n                                   priority, startDate, deadline) => async (dispatch) => {\r\n    const response = await toDoListAPI.updateTasksForList(listId, taskId, title, description, completed, status,\r\n        priority, startDate, deadline);\r\n    if (response.resultCode === 0) {\r\n        dispatch(updateTask(listId, taskId, response.data))\r\n    }\r\n}\r\nexport const deleteTasksForList = (listId, taskId) => async (dispatch) => {\r\n    const response = await toDoListAPI.deleteTaskForList(listId, taskId);\r\n    if (response.resultCode === 0) {\r\n        dispatch(deleteTask(listId, taskId))\r\n    }\r\n}\r\nexport const changeTaskOrder = (listId, taskId, putAfterItemId) => async (dispatch) => {\r\n    const response = await toDoListAPI.changeTaskOrder(listId, taskId);\r\n    if (response.resultCode === 0) {\r\n        dispatch(reorderTask(listId, taskId, putAfterItemId))\r\n    }\r\n}\r\n\r\n\r\nexport default todoListReducer\r\n"]},"metadata":{},"sourceType":"module"}