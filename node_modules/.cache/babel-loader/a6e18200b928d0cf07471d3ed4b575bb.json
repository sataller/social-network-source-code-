{"ast":null,"code":"import { usersAPI } from \"../API/api\";\nconst ADD_POST = \"ADD_POST\";\nconst UPDATE_NEW_TEXT = \"UPDATE_NEW_TEXT\";\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\nlet initialisation = {\n  posts: [{\n    id: 1,\n    text: \"My first post!\",\n    lickCount: 12,\n    avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\"\n  }, {\n    id: 2,\n    text: \"My first post!\",\n    lickCount: 12,\n    avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\"\n  }, {\n    id: 3,\n    text: \"My first post!\",\n    lickCount: 12,\n    avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\"\n  }],\n  newText: \"\",\n  profile: null\n};\n\nconst profileReducer = (state = initialisation, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      let newPost = {\n        id: 4,\n        text: state.newText,\n        lickCount: 0,\n        avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\"\n      };\n      return { ...state,\n        posts: [...state.posts, newPost],\n        newText: \"\"\n      };\n\n    case UPDATE_NEW_TEXT:\n      return { ...state,\n        newText: action.text\n      };\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostAC = () => {\n  return {\n    type: ADD_POST\n  };\n};\nexport const updateNewTextAC = newText => {\n  return {\n    type: UPDATE_NEW_TEXT,\n    text: newText\n  };\n};\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setUsers = userId => {\n  return dispatch => {\n    if (!userId) {\n      userId = 2;\n    }\n\n    usersAPI.setUsers(userId).then(data => {\n      dispatch(setUserProfile(data.data));\n    });\n  };\n};\nexport default profileReducer;","map":{"version":3,"sources":["D:/react/net/project1/src/Redux/profileReducer.js"],"names":["usersAPI","ADD_POST","UPDATE_NEW_TEXT","SET_USER_PROFILE","initialisation","posts","id","text","lickCount","avatar","newText","profile","profileReducer","state","action","type","newPost","addPostAC","updateNewTextAC","setUserProfile","setUsers","userId","dispatch","then","data"],"mappings":"AAAA,SAAQA,QAAR,QAAuB,YAAvB;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,eAAe,GAAG,iBAAxB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AAGA,IAAIC,cAAc,GAAG;AACjBC,EAAAA,KAAK,EAAE,CACH;AACIC,IAAAA,EAAE,EAAE,CADR;AACWC,IAAAA,IAAI,EAAE,gBADjB;AACmCC,IAAAA,SAAS,EAAE,EAD9C;AAEIC,IAAAA,MAAM,EAAE;AAFZ,GADG,EAKH;AACIH,IAAAA,EAAE,EAAE,CADR;AACWC,IAAAA,IAAI,EAAE,gBADjB;AACmCC,IAAAA,SAAS,EAAE,EAD9C;AAEIC,IAAAA,MAAM,EAAE;AAFZ,GALG,EASH;AACIH,IAAAA,EAAE,EAAE,CADR;AACWC,IAAAA,IAAI,EAAE,gBADjB;AACmCC,IAAAA,SAAS,EAAE,EAD9C;AAEIC,IAAAA,MAAM,EAAE;AAFZ,GATG,CADU;AAejBC,EAAAA,OAAO,EAAE,EAfQ;AAgBjBC,EAAAA,OAAO,EAAE;AAhBQ,CAArB;;AAmBA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGT,cAAT,EAAyBU,MAAzB,KAAoC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKd,QAAL;AACI,UAAIe,OAAO,GAAG;AACVV,QAAAA,EAAE,EAAE,CADM;AAEVC,QAAAA,IAAI,EAAEM,KAAK,CAACH,OAFF;AAGVF,QAAAA,SAAS,EAAE,CAHD;AAIVC,QAAAA,MAAM,EAAE;AAJE,OAAd;AAMA,aAAO,EACH,GAAGI,KADA;AAEHR,QAAAA,KAAK,EAAE,CAAC,GAAGQ,KAAK,CAACR,KAAV,EAAiBW,OAAjB,CAFJ;AAGHN,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKR,eAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHH,QAAAA,OAAO,EAAEI,MAAM,CAACP;AAFb,OAAP;;AAIJ,SAAKJ,gBAAL;AAAuB;AACnB,eAAO,EACH,GAAGU,KADA;AACOF,UAAAA,OAAO,EAAEG,MAAM,CAACH;AADvB,SAAP;AAGH;;AAED;AACI,aAAOE,KAAP;AAzBR;AA2BH,CA5BD;;AA8BA,OAAO,MAAMI,SAAS,GAAG,MAAM;AAC3B,SAAQ;AAACF,IAAAA,IAAI,EAAEd;AAAP,GAAR;AACH,CAFM;AAIP,OAAO,MAAMiB,eAAe,GAAIR,OAAD,IAAa;AACxC,SAAQ;AAACK,IAAAA,IAAI,EAAEb,eAAP;AAAwBK,IAAAA,IAAI,EAAEG;AAA9B,GAAR;AACH,CAFM;AAIP,OAAO,MAAMS,cAAc,GAAIR,OAAD,KAAc;AAACI,EAAAA,IAAI,EAAEZ,gBAAP;AAAyBQ,EAAAA;AAAzB,CAAd,CAAvB;AAEP,OAAO,MAAMS,QAAQ,GAAIC,MAAD,IAAY;AAChC,SAAQC,QAAD,IAAY;AACf,QAAI,CAACD,MAAL,EAAY;AACRA,MAAAA,MAAM,GAAG,CAAT;AACH;;AACDrB,IAAAA,QAAQ,CAACoB,QAAT,CAAkBC,MAAlB,EAA0BE,IAA1B,CAA+BC,IAAI,IAAI;AACnCF,MAAAA,QAAQ,CAACH,cAAc,CAACK,IAAI,CAACA,IAAN,CAAf,CAAR;AACH,KAFD;AAGH,GAPD;AAQH,CATM;AAYP,eAAeZ,cAAf","sourcesContent":["import {usersAPI} from \"../API/api\";\r\n\r\nconst ADD_POST = \"ADD_POST\";\r\nconst UPDATE_NEW_TEXT = \"UPDATE_NEW_TEXT\"\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\n\r\n\r\nlet initialisation = {\r\n    posts: [\r\n        {\r\n            id: 1, text: \"My first post!\", lickCount: 12,\r\n            avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\"\r\n        },\r\n        {\r\n            id: 2, text: \"My first post!\", lickCount: 12,\r\n            avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\"\r\n        },\r\n        {\r\n            id: 3, text: \"My first post!\", lickCount: 12,\r\n            avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\"\r\n        },\r\n    ],\r\n    newText: \"\",\r\n    profile: null,\r\n}\r\n\r\nconst profileReducer = (state = initialisation, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 4,\r\n                text: state.newText,\r\n                lickCount: 0,\r\n                avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\"\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newText: \"\"\r\n            }\r\n        case UPDATE_NEW_TEXT:\r\n            return {\r\n                ...state,\r\n                newText: action.text\r\n            }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state, profile: action.profile\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostAC = () => {\r\n    return ({type: ADD_POST})\r\n};\r\n\r\nexport const updateNewTextAC = (newText) => {\r\n    return ({type: UPDATE_NEW_TEXT, text: newText})\r\n};\r\n\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\n\r\nexport const setUsers = (userId) => {\r\n    return (dispatch)=>{\r\n        if (!userId){\r\n            userId = 2;\r\n        }\r\n        usersAPI.setUsers(userId).then(data => {\r\n            dispatch(setUserProfile(data.data))\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer"]},"metadata":{},"sourceType":"module"}