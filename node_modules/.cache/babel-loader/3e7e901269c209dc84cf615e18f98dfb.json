{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\net\\\\project1\\\\src\\\\components\\\\Dialogs\\\\Dialog\\\\Message\\\\Messages.jsx\";\nimport React, { useState } from \"react\";\nimport Message from \"./Message\";\nimport { reversedCopy } from \"../../../../utils/arrayHalper\";\n\nconst Messages = props => {\n  return React.createElement(Message, {\n    id: props.id,\n    messageText: props.body,\n    recipientId: props.recipientId,\n    senderId: props.senderId,\n    senderName: props.senderName,\n    translatedBody: props.translatedBody,\n    viewed: props.viewed,\n    totalCount: props.totalCount,\n    addedAt: props.addedAt,\n    authUserId: props.authUserId,\n    setMessageViewed: props.setMessageViewed,\n    sendMessageInSpam: props.sendMessageInSpam,\n    deleteMessageForMe: props.deleteMessageForMe,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  });\n};\n\nexport default Messages; // let [numberOfPage, setNumberOfPage] = useState(1)\n//\n// let loadNextMessagesPage = React.lazy(() => {\n//         let pageCount = Math.ceil(props.dialogsPage.messages.totalCount / props.pageSize)\n//         if (numberOfPage >= pageCount) {\n//             return <div> It's all </div>\n//         }\n//         props.getMessages(props.activeDialogId, props.messagePageSize, (numberOfPage + 1))\n//         let startItem = numberOfPage * props.pageSize;\n//         let endItem = startItem + props.pageSize;\n//         let element = props.dialogsPage.messagesItems.slice(startItem, endItem);\n//\n//         setNumberOfPage(numberOfPage + 1);\n//\n//         let reversElement = reversedCopy(element).map(m => <Message id={m.id} key={m.id} messageText={m.body}\n//                                                                     recipientId={m.recipientId}\n//                                                                     senderId={m.senderId}\n//                                                                     senderName={m.senderName}\n//                                                                     translatedBody={m.translatedBody}\n//                                                                     viewed={m.viewed}\n//                                                                     totalCount={m.totalCount}\n//                                                                     addedAt={m.addedAt}/>)\n//         return reversElement\n//         // const DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"))\n//         //     <Route path=\"/dialogs\" render={() => withSuspense(DialogsContainer)}/>\n//\n//\n//     }\n// )","map":{"version":3,"sources":["D:/react/net/project1/src/components/Dialogs/Dialog/Message/Messages.jsx"],"names":["React","useState","Message","reversedCopy","Messages","props","id","body","recipientId","senderId","senderName","translatedBody","viewed","totalCount","addedAt","authUserId","setMessageViewed","sendMessageInSpam","deleteMessageForMe"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,YAAR,QAA2B,+BAA3B;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAExB,SACQ,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAEA,KAAK,CAACC,EAAnB;AAAuB,IAAA,WAAW,EAAED,KAAK,CAACE,IAA1C;AACS,IAAA,WAAW,EAAEF,KAAK,CAACG,WAD5B;AAES,IAAA,QAAQ,EAAEH,KAAK,CAACI,QAFzB;AAGS,IAAA,UAAU,EAAEJ,KAAK,CAACK,UAH3B;AAIS,IAAA,cAAc,EAAEL,KAAK,CAACM,cAJ/B;AAKS,IAAA,MAAM,EAAEN,KAAK,CAACO,MALvB;AAMS,IAAA,UAAU,EAAEP,KAAK,CAACQ,UAN3B;AAOS,IAAA,OAAO,EAAER,KAAK,CAACS,OAPxB;AAQS,IAAA,UAAU,EAAET,KAAK,CAACU,UAR3B;AASS,IAAA,gBAAgB,EAAEV,KAAK,CAACW,gBATjC;AAUS,IAAA,iBAAiB,EAAEX,KAAK,CAACY,iBAVlC;AAWS,IAAA,kBAAkB,EAAEZ,KAAK,CAACa,kBAXnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR;AAcH,CAhBD;;AAkBA,eAAed,QAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {useState} from \"react\"\r\nimport Message from \"./Message\";\r\nimport {reversedCopy} from \"../../../../utils/arrayHalper\";\r\n\r\nconst Messages = (props) => {\r\n\r\n    return (\r\n            <Message id={props.id} messageText={props.body}\r\n                     recipientId={props.recipientId}\r\n                     senderId={props.senderId}\r\n                     senderName={props.senderName}\r\n                     translatedBody={props.translatedBody}\r\n                     viewed={props.viewed}\r\n                     totalCount={props.totalCount}\r\n                     addedAt={props.addedAt}\r\n                     authUserId={props.authUserId}\r\n                     setMessageViewed={props.setMessageViewed}\r\n                     sendMessageInSpam={props.sendMessageInSpam}\r\n                     deleteMessageForMe={props.deleteMessageForMe}/>\r\n    )\r\n}\r\n\r\nexport default Messages\r\n\r\n\r\n// let [numberOfPage, setNumberOfPage] = useState(1)\r\n//\r\n// let loadNextMessagesPage = React.lazy(() => {\r\n//         let pageCount = Math.ceil(props.dialogsPage.messages.totalCount / props.pageSize)\r\n//         if (numberOfPage >= pageCount) {\r\n//             return <div> It's all </div>\r\n//         }\r\n//         props.getMessages(props.activeDialogId, props.messagePageSize, (numberOfPage + 1))\r\n//         let startItem = numberOfPage * props.pageSize;\r\n//         let endItem = startItem + props.pageSize;\r\n//         let element = props.dialogsPage.messagesItems.slice(startItem, endItem);\r\n//\r\n//         setNumberOfPage(numberOfPage + 1);\r\n//\r\n//         let reversElement = reversedCopy(element).map(m => <Message id={m.id} key={m.id} messageText={m.body}\r\n//                                                                     recipientId={m.recipientId}\r\n//                                                                     senderId={m.senderId}\r\n//                                                                     senderName={m.senderName}\r\n//                                                                     translatedBody={m.translatedBody}\r\n//                                                                     viewed={m.viewed}\r\n//                                                                     totalCount={m.totalCount}\r\n//                                                                     addedAt={m.addedAt}/>)\r\n//         return reversElement\r\n//         // const DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"))\r\n//         //     <Route path=\"/dialogs\" render={() => withSuspense(DialogsContainer)}/>\r\n//\r\n//\r\n//     }\r\n// )\r\n"]},"metadata":{},"sourceType":"module"}