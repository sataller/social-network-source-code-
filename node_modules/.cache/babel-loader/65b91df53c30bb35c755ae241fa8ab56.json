{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\net\\\\project1\\\\src\\\\components\\\\Users\\\\UsersContainer.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { follow, setPage, setTotalUsersCount, setUsers, toggleIsFetching, unfollow } from \"../../Redux/usersReducer\";\nimport * as axios from \"axios\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/preloader/preloader\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setPage(pageNumber);\n      this.props.toggleIsFetching(true);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(response.data.items);\n        this.props.setTotalUsersCount(response.data.totalCount);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.props.isFetching ? React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }) : null, React.createElement(Users, {\n      totalCount: this.props.totalCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      users: this.props.users,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      onPageChanged: this.onPageChanged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalCount: state.usersPage.totalCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setPage,\n  setTotalUsersCount,\n  toggleIsFetching\n})(UsersContainer);","map":{"version":3,"sources":["D:/react/net/project1/src/components/Users/UsersContainer.jsx"],"names":["React","connect","follow","setPage","setTotalUsersCount","setUsers","toggleIsFetching","unfollow","axios","Users","Preloader","UsersContainer","Component","onPageChanged","pageNumber","props","get","pageSize","then","response","data","items","totalCount","componentDidMount","currentPage","render","isFetching","users","mapStateToProps","state","usersPage"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    setPage,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    toggleIsFetching,\r\n    unfollow,\r\n\r\n} from \"../../Redux/usersReducer\";\r\nimport * as axios from \"axios\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/preloader/preloader\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\r\n            this.props.toggleIsFetching(false)\r\n\r\n            this.props.setUsers(response.data.items)\r\n            this.props.setTotalUsersCount(response.data.totalCount)\r\n        });\r\n\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setPage(pageNumber)\r\n        this.props.toggleIsFetching(true)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\r\n            this.props.toggleIsFetching(false)\r\n\r\n            this.props.setUsers(response.data.items)\r\n            this.props.setTotalUsersCount(response.data.totalCount)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Users totalCount={this.props.totalCount} pageSize={this.props.pageSize}\r\n                       currentPage={this.props.currentPage} users={this.props.users}\r\n                       follow={this.props.follow} unfollow={this.props.unfollow}\r\n                       onPageChanged={this.onPageChanged}/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalCount: state.usersPage.totalCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n\r\n\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    follow, unfollow, setUsers, setPage, setTotalUsersCount,\r\n    toggleIsFetching,\r\n})(UsersContainer)\r\n"]},"metadata":{},"sourceType":"module"}