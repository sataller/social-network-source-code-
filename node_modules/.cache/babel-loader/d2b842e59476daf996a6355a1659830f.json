{"ast":null,"code":"import { toDoListAPI } from \"../API/api\";\nconst GET_LISTS = \"network/toDoLists/GET_LISTS\";\nconst ADD_NEW_LISTS = \"network/toDoLists/ADD_NEW_LISTS\";\nlet initialisation = {\n  toDoLists: []\n};\n\nconst todoListReducer = (state = initialisation, action) => {\n  switch (action.type) {\n    case GET_LISTS:\n      {\n        return { ...state,\n          toDoLists: action.lists\n        };\n      }\n\n    case ADD_NEW_LISTS:\n      {\n        return { ...state,\n          toDoLists: [...state.toDoLists, action.newList]\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const getLists = lists => ({\n  type: GET_LISTS,\n  lists\n});\nexport const addNewList = newList => ({\n  type: ADD_NEW_LISTS,\n  newList\n});\nexport const getToDoLists = () => async dispatch => {\n  const response = await toDoListAPI.getAllLists();\n  dispatch(getLists(response.data));\n};\nexport const createNewLists = title => async dispatch => {\n  const response = await toDoListAPI.createNewList(title);\n  dispatch(addNewList(response.data));\n};\nexport const deleteLists = listId => async dispatch => {\n  const response = await toDoListAPI.deleteList(listId);\n  dispatch(List(response.data));\n};\nexport default todoListReducer;","map":{"version":3,"sources":["D:/react/net/project1/src/Redux/todoListReducer.js"],"names":["toDoListAPI","GET_LISTS","ADD_NEW_LISTS","initialisation","toDoLists","todoListReducer","state","action","type","lists","newList","getLists","addNewList","getToDoLists","dispatch","response","getAllLists","data","createNewLists","title","createNewList","deleteLists","listId","deleteList","List"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,YAA1B;AAEA,MAAMC,SAAS,GAAG,6BAAlB;AACA,MAAMC,aAAa,GAAG,iCAAtB;AAEA,IAAIC,cAAc,GAAG;AACjBC,EAAAA,SAAS,EAAE;AADM,CAArB;;AAIA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGH,cAAT,EAAyBI,MAAzB,KAAoC;AACxD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,SAAL;AAAgB;AACZ,eAAO,EACH,GAAGK,KADA;AAEHF,UAAAA,SAAS,EAAEG,MAAM,CAACE;AAFf,SAAP;AAIH;;AACD,SAAKP,aAAL;AAAoB;AAChB,eAAO,EACH,GAAGI,KADA;AAEHF,UAAAA,SAAS,EAAE,CAAC,GAAGE,KAAK,CAACF,SAAV,EAAqBG,MAAM,CAACG,OAA5B;AAFR,SAAP;AAIH;;AAED;AACI,aAAOJ,KAAP;AAfR;AAiBH,CAlBD;;AAoBA,OAAO,MAAMK,QAAQ,GAAIF,KAAD,KAAY;AAACD,EAAAA,IAAI,EAAEP,SAAP;AAAkBQ,EAAAA;AAAlB,CAAZ,CAAjB;AAEP,OAAO,MAAMG,UAAU,GAAIF,OAAD,KAAc;AAACF,EAAAA,IAAI,EAAEN,aAAP;AAAsBQ,EAAAA;AAAtB,CAAd,CAAnB;AAEP,OAAO,MAAMG,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAClD,QAAMC,QAAQ,GAAG,MAAMf,WAAW,CAACgB,WAAZ,EAAvB;AACAF,EAAAA,QAAQ,CAACH,QAAQ,CAACI,QAAQ,CAACE,IAAV,CAAT,CAAR;AACH,CAHM;AAIP,OAAO,MAAMC,cAAc,GAAIC,KAAD,IAAW,MAAOL,QAAP,IAAoB;AACzD,QAAMC,QAAQ,GAAG,MAAMf,WAAW,CAACoB,aAAZ,CAA0BD,KAA1B,CAAvB;AACAL,EAAAA,QAAQ,CAACF,UAAU,CAACG,QAAQ,CAACE,IAAV,CAAX,CAAR;AACH,CAHM;AAIP,OAAO,MAAMI,WAAW,GAAIC,MAAD,IAAY,MAAOR,QAAP,IAAoB;AACvD,QAAMC,QAAQ,GAAG,MAAMf,WAAW,CAACuB,UAAZ,CAAuBD,MAAvB,CAAvB;AACAR,EAAAA,QAAQ,CAACU,IAAI,CAACT,QAAQ,CAACE,IAAV,CAAL,CAAR;AACH,CAHM;AAKP,eAAeZ,eAAf","sourcesContent":["import {toDoListAPI} from \"../API/api\";\r\n\r\nconst GET_LISTS = \"network/toDoLists/GET_LISTS\"\r\nconst ADD_NEW_LISTS = \"network/toDoLists/ADD_NEW_LISTS\"\r\n\r\nlet initialisation = {\r\n    toDoLists: [],\r\n}\r\n\r\nconst todoListReducer = (state = initialisation, action) => {\r\n    switch (action.type) {\r\n        case GET_LISTS: {\r\n            return {\r\n                ...state,\r\n                toDoLists: action.lists,\r\n            }\r\n        }\r\n        case ADD_NEW_LISTS: {\r\n            return {\r\n                ...state,\r\n                toDoLists: [...state.toDoLists, action.newList]\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const getLists = (lists) => ({type: GET_LISTS, lists})\r\n\r\nexport const addNewList = (newList) => ({type: ADD_NEW_LISTS, newList})\r\n\r\nexport const getToDoLists = () => async (dispatch) => {\r\n    const response = await toDoListAPI.getAllLists();\r\n    dispatch(getLists(response.data))\r\n}\r\nexport const createNewLists = (title) => async (dispatch) => {\r\n    const response = await toDoListAPI.createNewList(title);\r\n    dispatch(addNewList(response.data))\r\n}\r\nexport const deleteLists = (listId) => async (dispatch) => {\r\n    const response = await toDoListAPI.deleteList(listId);\r\n    dispatch(List(response.data))\r\n}\r\n\r\nexport default todoListReducer\r\n"]},"metadata":{},"sourceType":"module"}