{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\net\\\\project1\\\\src\\\\components\\\\Dialogs\\\\Dialogs.jsx\";\nimport React from \"react\";\nimport NewMessage from \"./NewMessage/NewMessage\";\nimport User from \"./Dialog/User/User\";\nimport style from \"./Dialogs.module.css\";\nimport MessagesContainer from \"./Dialog/Message/MessagesContainer\";\nimport Spam from \"./Dialog/User/spam/Spam\";\nimport DeletedMessages from \"./Dialog/User/deleteMessages/DeleteMessages\";\n\nconst Dialogs = props => {\n  let usersElement = null;\n\n  if (props.dialogs) {\n    usersElement = props.dialogs.map(u => React.createElement(User, {\n      id: u.id,\n      avatar: u.photos.small,\n      name: u.userName,\n      key: u.id,\n      dialogs: props.dialogs,\n      newMessagesCount: u.newMessagesCount,\n      lastUserActivityDate: u.lastUserActivityDate,\n      lastDialogActivityDate: u.lastDialogActivityDate,\n      hasNewMessages: u.hasNewMessages,\n      getMessages: props.getMessages,\n      numberOfPage: props.numberOfPage,\n      messagePageSize: props.messagePageSize,\n      setActiveDialog: props.setActiveDialog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    className: style.dialogs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: style.users,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, usersElement, React.createElement(Spam, {\n    spam: props.spam,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(DeletedMessages, {\n    deletedMessages: props.deletedMessages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: style.messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(MessagesContainer, {\n    activeDialogId: props.activeDialogId,\n    dialogsPage: props.dialogsPage,\n    getMessages: props.getMessages,\n    numberOfPage: props.numberOfPage,\n    messagePageSize: props.messagePageSize,\n    authUserId: props.authUserId,\n    setMessageViewed: props.setMessageViewed,\n    sendMessageInSpam: props.sendMessageInSpam,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: style.newMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, props.activeDialogId ? React.createElement(NewMessage, {\n    dialogsPage: props.dialogsPage,\n    sendNewMessage: props.sendNewMessage,\n    activeDialogId: props.activeDialogId,\n    sendNewMessage: props.sendNewMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }) : null));\n};\n\nexport default Dialogs;","map":{"version":3,"sources":["D:/react/net/project1/src/components/Dialogs/Dialogs.jsx"],"names":["React","NewMessage","User","style","MessagesContainer","Spam","DeletedMessages","Dialogs","props","usersElement","dialogs","map","u","id","photos","small","userName","newMessagesCount","lastUserActivityDate","lastDialogActivityDate","hasNewMessages","getMessages","numberOfPage","messagePageSize","setActiveDialog","users","spam","deletedMessages","messages","activeDialogId","dialogsPage","authUserId","setMessageViewed","sendMessageInSpam","newMessage","sendNewMessage"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport NewMessage from \"./NewMessage/NewMessage\";\r\nimport User from \"./Dialog/User/User\";\r\nimport style from \"./Dialogs.module.css\"\r\nimport MessagesContainer from \"./Dialog/Message/MessagesContainer\";\r\nimport Spam from \"./Dialog/User/spam/Spam\";\r\nimport DeletedMessages from \"./Dialog/User/deleteMessages/DeleteMessages\";\r\n\r\nconst Dialogs = (props) => {\r\n    let usersElement = null;\r\n\r\n    if (props.dialogs) {\r\n        usersElement = props.dialogs.map(u => <User id={u.id}\r\n                                                    avatar={u.photos.small}\r\n                                                    name={u.userName}\r\n                                                    key={u.id}\r\n                                                    dialogs={props.dialogs}\r\n                                                    newMessagesCount={u.newMessagesCount}\r\n                                                    lastUserActivityDate={u.lastUserActivityDate}\r\n                                                    lastDialogActivityDate={u.lastDialogActivityDate}\r\n                                                    hasNewMessages={u.hasNewMessages}\r\n                                                    getMessages={props.getMessages}\r\n                                                    numberOfPage={props.numberOfPage}\r\n                                                    messagePageSize={props.messagePageSize}\r\n                                                    setActiveDialog={props.setActiveDialog}\r\n        />)\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={style.dialogs}>\r\n\r\n            <div className={style.users}>\r\n                {usersElement}\r\n                <Spam spam={props.spam}/>\r\n                <DeletedMessages deletedMessages={props.deletedMessages} />\r\n            </div>\r\n            <div className={style.messages}>\r\n                <MessagesContainer activeDialogId={props.activeDialogId} dialogsPage={props.dialogsPage}\r\n                                   getMessages={props.getMessages} numberOfPage={props.numberOfPage}\r\n                                   messagePageSize={props.messagePageSize} authUserId={props.authUserId}\r\n                                   setMessageViewed={props.setMessageViewed}\r\n                                   sendMessageInSpam={props.sendMessageInSpam}/>\r\n            </div>\r\n\r\n            <div className={style.newMessage}>\r\n                {props.activeDialogId ? <NewMessage dialogsPage={props.dialogsPage}\r\n                                                    sendNewMessage={props.sendNewMessage}\r\n                                                    activeDialogId={props.activeDialogId}\r\n                                                    sendNewMessage={props.sendNewMessage}/> : null}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs"]},"metadata":{},"sourceType":"module"}