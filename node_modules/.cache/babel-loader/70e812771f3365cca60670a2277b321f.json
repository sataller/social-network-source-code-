{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\net\\\\project1\\\\src\\\\components\\\\Profile\\\\ProfileContainer.jsx\";\nimport React from \"react\";\nimport Profile from \"./Profile\";\nimport { getStatus, savePhoto, setUsersProfile, updateStatus, userFollowingStatus } from \"../../Redux/profileReducer\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { getFollowingInProgress, getIsFetching } from \"../../Redux/userSelectors\";\nimport { follow, toggleFollowingProgress, unfollow } from \"../../Redux/usersReducer\";\n\nclass ProfileContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.refreshProfile = () => {\n      let userId = this.props.match.params.userId;\n\n      if (!userId) {\n        userId = this.props.authUserId;\n\n        if (!userId) {\n          this.props.history.push(\"/login\");\n        }\n      }\n\n      this.props.setUsersProfile(userId);\n      this.props.userFollowingStatus(userId);\n      this.props.getStatus(userId);\n    };\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\n      this.refreshProfile();\n    }\n\n    debugger;\n\n    if (this.props.followed != prevProps.followed) {\n      this.refreshProfile();\n    }\n  }\n\n  render() {\n    return React.createElement(Profile, Object.assign({}, this.props, {\n      profile: this.props.profile,\n      status: this.props.status,\n      updateStatus: this.props.updateStatus,\n      isOwner: !this.props.match.params.userId,\n      savePhoto: this.props.savePhoto,\n      isFetching: this.props.isFetching,\n      followingInProgress: this.props.followingInProgress,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      followingProgress: this.props.followingProgress,\n      isAuth: this.props.isAuth,\n      authUserId: this.props.authUserId,\n      followed: this.props.followed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n} // followed={props.followed}\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer)\n\n\nlet mapStateToProps = state => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authUserId: state.auth.id,\n  isAuth: state.auth.isAuth,\n  isFetching: getIsFetching(state),\n  followingInProgress: getFollowingInProgress(state),\n  followed: state.profilePage.followed\n});\n\nlet WithRouterProfileContainer = withRouter(ProfileContainer);\nexport default connect(mapStateToProps, {\n  setUsersProfile,\n  getStatus,\n  updateStatus,\n  follow,\n  unfollow,\n  toggleFollowingProgress,\n  savePhoto,\n  userFollowingStatus\n})(WithRouterProfileContainer);","map":{"version":3,"sources":["D:/react/net/project1/src/components/Profile/ProfileContainer.jsx"],"names":["React","Profile","getStatus","savePhoto","setUsersProfile","updateStatus","userFollowingStatus","connect","withRouter","getFollowingInProgress","getIsFetching","follow","toggleFollowingProgress","unfollow","ProfileContainer","Component","refreshProfile","userId","props","match","params","authUserId","history","push","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","followed","render","profile","status","isFetching","followingInProgress","followingProgress","isAuth","mapStateToProps","state","profilePage","auth","id","WithRouterProfileContainer"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {getStatus, savePhoto, setUsersProfile, updateStatus, userFollowingStatus} from \"../../Redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {getFollowingInProgress, getIsFetching} from \"../../Redux/userSelectors\";\r\nimport {follow, toggleFollowingProgress, unfollow} from \"../../Redux/usersReducer\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile = () => {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.setUsersProfile(userId)\r\n        this.props.userFollowingStatus(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n        debugger\r\n        if (this.props.followed != prevProps.followed) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile}\r\n                     status={this.props.status} updateStatus={this.props.updateStatus}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     savePhoto={this.props.savePhoto} isFetching={this.props.isFetching}\r\n                     followingInProgress={this.props.followingInProgress}\r\n                     follow={this.props.follow} unfollow={this.props.unfollow}\r\n                     followingProgress={this.props.followingProgress} isAuth={this.props.isAuth}\r\n                     authUserId={this.props.authUserId}\r\n                    followed={this.props.followed}/>\r\n        )\r\n    }\r\n}\r\n// followed={props.followed}\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state),\r\n    followed:state.profilePage.followed,\r\n\r\n})\r\n\r\nlet WithRouterProfileContainer = withRouter(ProfileContainer)\r\n\r\nexport default connect(mapStateToProps, {setUsersProfile, getStatus, updateStatus,\r\n    follow, unfollow, toggleFollowingProgress, savePhoto, userFollowingStatus})(WithRouterProfileContainer)"]},"metadata":{},"sourceType":"module"}