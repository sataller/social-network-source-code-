{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\net\\\\project1\\\\src\\\\components\\\\Dialogs\\\\Dialog\\\\Message\\\\Messages.jsx\";\nimport React, { useState } from \"react\";\nimport Message from \"./Message\";\nimport { reversedCopy } from \"../../../../utils/arrayHalper\";\nimport { Route, Switch } from \"react-router-dom\";\nimport withSuspense from \"../../../../HOC/withSuspens\"; // recipientId={m.recipientId} senderId={m.senderId}\n// senderName={m.senderName}\n// translatedBody={m.translatedBody}\n//  totalCount={m.totalCount}\n\nconst Messages = props => {\n  let [numberOfPage, setNumberOfPage] = useState(1); // let loadNextMessagesPage = () => {\n  //     let pageCount = Math.ceil(props.dialogsPage.messages.totalCount / props.pageSize)\n  //     if (numberOfPage >= pageCount) {\n  //         return <div> It's all </div>\n  //     }\n  //     props.getMessages(props.activeDialogId, props.messagePageSize, (numberOfPage+1))\n  //     let startItem = numberOfPage * props.pageSize;\n  //     let endItem = startItem + props.pageSize;\n  //     let element = props.dialogsPage.messagesItems.slice(startItem, endItem);\n  //\n  //     setNumberOfPage(numberOfPage + 1);\n  //\n  //     let reversElement = reversedCopy(element).map(m => <Message id={m.id} key={m.id} messageText={m.body}\n  //                                                                 recipientId={m.recipientId}\n  //                                                                 senderId={m.senderId}\n  //                                                                 senderName={m.senderName}\n  //                                                                 translatedBody={m.translatedBody}\n  //                                                                 viewed={m.viewed}\n  //                                                                 totalCount={m.totalCount}\n  //                                                                 addedAt={m.addedAt}/>)\n  //     return <React.Suspense fallback={<div>Loading...</div>}>{reversElement}</React.Suspense>\n  //     // const DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"))\n  //     //     <Route path=\"/dialogs\" render={() => withSuspense(DialogsContainer)}/>\n  //\n  //\n  // }\n\n  let reversMessageElement = null;\n\n  if (props.activeDialogId) {\n    let messageElement = props.dialogsPage.messagesItems[numberOfPage - 1];\n    debugger;\n    reversMessageElement = reversedCopy(messageElement).map(m => React.createElement(Message, {\n      id: m.id,\n      key: m.id,\n      messageText: m.body,\n      recipientId: m.recipientId,\n      senderId: m.senderId,\n      senderName: m.senderName,\n      translatedBody: m.translatedBody,\n      viewed: m.viewed,\n      totalCount: m.totalCount,\n      addedAt: m.addedAt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, reversMessageElement));\n};\n\nexport default Messages;","map":{"version":3,"sources":["D:/react/net/project1/src/components/Dialogs/Dialog/Message/Messages.jsx"],"names":["React","useState","Message","reversedCopy","Route","Switch","withSuspense","Messages","props","numberOfPage","setNumberOfPage","reversMessageElement","activeDialogId","messageElement","dialogsPage","messagesItems","map","m","id","body","recipientId","senderId","senderName","translatedBody","viewed","totalCount","addedAt"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,YAAR,QAA2B,+BAA3B;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,kBAA5B;AACA,OAAOC,YAAP,MAAyB,6BAAzB,C,CAEA;AACA;AACA;AACA;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAExB,MAAI,CAACC,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,CAAD,CAA9C,CAFwB,CAKxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIU,oBAAoB,GAAG,IAA3B;;AAGA,MAAIH,KAAK,CAACI,cAAV,EAA0B;AACtB,QAAIC,cAAc,GAAGL,KAAK,CAACM,WAAN,CAAkBC,aAAlB,CAAgCN,YAAY,GAAC,CAA7C,CAArB;AACA;AACAE,IAAAA,oBAAoB,GAAGR,YAAY,CAACU,cAAD,CAAZ,CAA6BG,GAA7B,CAAiCC,CAAC,IAAI,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAEA,CAAC,CAACC,EAAf;AAAmB,MAAA,GAAG,EAAED,CAAC,CAACC,EAA1B;AAA8B,MAAA,WAAW,EAAED,CAAC,CAACE,IAA7C;AACS,MAAA,WAAW,EAAEF,CAAC,CAACG,WADxB;AAES,MAAA,QAAQ,EAAEH,CAAC,CAACI,QAFrB;AAGS,MAAA,UAAU,EAAEJ,CAAC,CAACK,UAHvB;AAIS,MAAA,cAAc,EAAEL,CAAC,CAACM,cAJ3B;AAKS,MAAA,MAAM,EAAEN,CAAC,CAACO,MALnB;AAMS,MAAA,UAAU,EAAEP,CAAC,CAACQ,UANvB;AAOS,MAAA,OAAO,EAAER,CAAC,CAACS,OAPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtC,CAAvB;AAQH;;AAED,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMf,oBAAN,CADJ,CADJ;AAMH,CAtDD;;AAwDA,eAAeJ,QAAf","sourcesContent":["import React, {useState} from \"react\"\r\nimport Message from \"./Message\";\r\nimport {reversedCopy} from \"../../../../utils/arrayHalper\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport withSuspense from \"../../../../HOC/withSuspens\";\r\n\r\n// recipientId={m.recipientId} senderId={m.senderId}\r\n// senderName={m.senderName}\r\n// translatedBody={m.translatedBody}\r\n//  totalCount={m.totalCount}\r\n\r\nconst Messages = (props) => {\r\n\r\n    let [numberOfPage, setNumberOfPage] = useState(1)\r\n\r\n\r\n    // let loadNextMessagesPage = () => {\r\n    //     let pageCount = Math.ceil(props.dialogsPage.messages.totalCount / props.pageSize)\r\n    //     if (numberOfPage >= pageCount) {\r\n    //         return <div> It's all </div>\r\n    //     }\r\n    //     props.getMessages(props.activeDialogId, props.messagePageSize, (numberOfPage+1))\r\n    //     let startItem = numberOfPage * props.pageSize;\r\n    //     let endItem = startItem + props.pageSize;\r\n    //     let element = props.dialogsPage.messagesItems.slice(startItem, endItem);\r\n    //\r\n    //     setNumberOfPage(numberOfPage + 1);\r\n    //\r\n    //     let reversElement = reversedCopy(element).map(m => <Message id={m.id} key={m.id} messageText={m.body}\r\n    //                                                                 recipientId={m.recipientId}\r\n    //                                                                 senderId={m.senderId}\r\n    //                                                                 senderName={m.senderName}\r\n    //                                                                 translatedBody={m.translatedBody}\r\n    //                                                                 viewed={m.viewed}\r\n    //                                                                 totalCount={m.totalCount}\r\n    //                                                                 addedAt={m.addedAt}/>)\r\n    //     return <React.Suspense fallback={<div>Loading...</div>}>{reversElement}</React.Suspense>\r\n    //     // const DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"))\r\n    //     //     <Route path=\"/dialogs\" render={() => withSuspense(DialogsContainer)}/>\r\n    //\r\n    //\r\n    // }\r\n\r\n    let reversMessageElement = null;\r\n\r\n\r\n    if (props.activeDialogId) {\r\n        let messageElement = props.dialogsPage.messagesItems[numberOfPage-1];\r\n        debugger\r\n        reversMessageElement = reversedCopy(messageElement).map(m => <Message id={m.id} key={m.id} messageText={m.body}\r\n                                                                              recipientId={m.recipientId}\r\n                                                                              senderId={m.senderId}\r\n                                                                              senderName={m.senderName}\r\n                                                                              translatedBody={m.translatedBody}\r\n                                                                              viewed={m.viewed}\r\n                                                                              totalCount={m.totalCount}\r\n                                                                              addedAt={m.addedAt}/>)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>{reversMessageElement}</div>\r\n           {/*<button onClick={loadNextMessagesPage}>Load more messages</button>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messages"]},"metadata":{},"sourceType":"module"}