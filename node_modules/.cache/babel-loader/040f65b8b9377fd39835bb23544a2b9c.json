{"ast":null,"code":"import { profileAPI, usersAPI } from \"../API/api\";\nconst ADD_POST = \"network/profile/ADD_POST\";\nconst SET_USER_PROFILE = \"network/profile/SET_USER_PROFILE\";\nconst SET_USER_STATUS = \"network/profile/SET_USER_STATUS\";\nconst DELETE_POST = \"network/profile/DELETE_POST\";\nlet initialisation = {\n  posts: [{\n    id: 1,\n    text: \"My first post!\",\n    lickCount: 12,\n    avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\"\n  }, {\n    id: 2,\n    text: \"My first post!\",\n    lickCount: 12,\n    avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\"\n  }, {\n    id: 3,\n    text: \"My first post!\",\n    lickCount: 12,\n    avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\"\n  }],\n  profile: null,\n  status: \"\"\n};\n\nconst profileReducer = (state = initialisation, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      let newPost = {\n        id: 4,\n        text: action.newText,\n        lickCount: 0,\n        avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\"\n      };\n      return { ...state,\n        posts: [...state.posts, newPost],\n        newText: \"\"\n      };\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    case SET_USER_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    case DELETE_POST:\n      {\n        return { ...state,\n          posts: state.posts.filter(p => p.id != action.postId)\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostAC = newText => {\n  return {\n    type: ADD_POST,\n    newText\n  };\n};\nexport const setProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setStatus = status => ({\n  type: SET_USER_STATUS,\n  status\n});\nexport const setUsersProfile = async userId => {\n  let response = await usersAPI.setUsers(userId);\n  dispatch(setProfile(response.data));\n};\nexport const getStatus = async userId => {\n  let response = await profileAPI.getStatus(userId);\n  dispatch(setStatus(response.data));\n};\nexport const updateStatus = async status => {\n  let response = await profileAPI.updateStatus(status);\n\n  if (response.data.resultCode === 0) {\n    dispatch(setStatus(status));\n  }\n};\nexport const deletePost = postId => ({\n  type: DELETE_POST,\n  postId\n});\nexport default profileReducer;","map":{"version":3,"sources":["D:/react/net/project1/src/Redux/profileReducer.js"],"names":["profileAPI","usersAPI","ADD_POST","SET_USER_PROFILE","SET_USER_STATUS","DELETE_POST","initialisation","posts","id","text","lickCount","avatar","profile","status","profileReducer","state","action","type","newPost","newText","filter","p","postId","addPostAC","setProfile","setStatus","setUsersProfile","userId","response","setUsers","dispatch","data","getStatus","updateStatus","resultCode","deletePost"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,QAApB,QAAmC,YAAnC;AAEA,MAAMC,QAAQ,GAAG,0BAAjB;AACA,MAAMC,gBAAgB,GAAG,kCAAzB;AACA,MAAMC,eAAe,GAAG,iCAAxB;AACA,MAAMC,WAAW,GAAG,6BAApB;AAGA,IAAIC,cAAc,GAAG;AACjBC,EAAAA,KAAK,EAAE,CACH;AACIC,IAAAA,EAAE,EAAE,CADR;AACWC,IAAAA,IAAI,EAAE,gBADjB;AACmCC,IAAAA,SAAS,EAAE,EAD9C;AAEIC,IAAAA,MAAM,EAAE;AAFZ,GADG,EAKH;AACIH,IAAAA,EAAE,EAAE,CADR;AACWC,IAAAA,IAAI,EAAE,gBADjB;AACmCC,IAAAA,SAAS,EAAE,EAD9C;AAEIC,IAAAA,MAAM,EAAE;AAFZ,GALG,EASH;AACIH,IAAAA,EAAE,EAAE,CADR;AACWC,IAAAA,IAAI,EAAE,gBADjB;AACmCC,IAAAA,SAAS,EAAE,EAD9C;AAEIC,IAAAA,MAAM,EAAE;AAFZ,GATG,CADU;AAejBC,EAAAA,OAAO,EAAE,IAfQ;AAgBjBC,EAAAA,MAAM,EAAE;AAhBS,CAArB;;AAmBA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGT,cAAT,EAAyBU,MAAzB,KAAoC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKf,QAAL;AACI,UAAIgB,OAAO,GAAG;AACVV,QAAAA,EAAE,EAAE,CADM;AAEVC,QAAAA,IAAI,EAAEO,MAAM,CAACG,OAFH;AAGVT,QAAAA,SAAS,EAAE,CAHD;AAIVC,QAAAA,MAAM,EAAE;AAJE,OAAd;AAMA,aAAO,EACH,GAAGI,KADA;AAEHR,QAAAA,KAAK,EAAE,CAAC,GAAGQ,KAAK,CAACR,KAAV,EAAiBW,OAAjB,CAFJ;AAGHC,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKhB,gBAAL;AAAuB;AACnB,eAAO,EACH,GAAGY,KADA;AACOH,UAAAA,OAAO,EAAEI,MAAM,CAACJ;AADvB,SAAP;AAGH;;AACD,SAAKR,eAAL;AAAsB;AAClB,eAAO,EAAC,GAAGW,KAAJ;AAAWF,UAAAA,MAAM,EAAEG,MAAM,CAACH;AAA1B,SAAP;AACH;;AACD,SAAKR,WAAL;AAAkB;AACd,eAAO,EAAC,GAAGU,KAAJ;AAAWR,UAAAA,KAAK,EAAEQ,KAAK,CAACR,KAAN,CAAYa,MAAZ,CAAmBC,CAAC,IAAIA,CAAC,CAACb,EAAF,IAAQQ,MAAM,CAACM,MAAvC;AAAlB,SAAP;AACH;;AACD;AACI,aAAOP,KAAP;AAzBR;AA2BH,CA5BD;;AA8BA,OAAO,MAAMQ,SAAS,GAAIJ,OAAD,IAAa;AAClC,SAAQ;AAACF,IAAAA,IAAI,EAAEf,QAAP;AAAiBiB,IAAAA;AAAjB,GAAR;AACH,CAFM;AAIP,OAAO,MAAMK,UAAU,GAAIZ,OAAD,KAAc;AAACK,EAAAA,IAAI,EAAEd,gBAAP;AAAyBS,EAAAA;AAAzB,CAAd,CAAnB;AAEP,OAAO,MAAMa,SAAS,GAAIZ,MAAD,KAAa;AAACI,EAAAA,IAAI,EAAEb,eAAP;AAAwBS,EAAAA;AAAxB,CAAb,CAAlB;AAEP,OAAO,MAAMa,eAAe,GAAG,MAAOC,MAAP,IAAkB;AAC7C,MAAIC,QAAQ,GAAG,MAAM3B,QAAQ,CAAC4B,QAAT,CAAkBF,MAAlB,CAArB;AACAG,EAAAA,QAAQ,CAACN,UAAU,CAACI,QAAQ,CAACG,IAAV,CAAX,CAAR;AACH,CAHM;AAKP,OAAO,MAAMC,SAAS,GAAG,MAAOL,MAAP,IAAkB;AACvC,MAAIC,QAAQ,GAAG,MAAM5B,UAAU,CAACgC,SAAX,CAAqBL,MAArB,CAArB;AACAG,EAAAA,QAAQ,CAACL,SAAS,CAACG,QAAQ,CAACG,IAAV,CAAV,CAAR;AACH,CAHM;AAKP,OAAO,MAAME,YAAY,GAAG,MAAOpB,MAAP,IAAkB;AAC1C,MAAIe,QAAQ,GAAG,MAAM5B,UAAU,CAACiC,YAAX,CAAwBpB,MAAxB,CAArB;;AACA,MAAIe,QAAQ,CAACG,IAAT,CAAcG,UAAd,KAA6B,CAAjC,EAAoC;AAChCJ,IAAAA,QAAQ,CAACL,SAAS,CAACZ,MAAD,CAAV,CAAR;AACH;AACJ,CALM;AAOP,OAAO,MAAMsB,UAAU,GAAIb,MAAD,KAAa;AAACL,EAAAA,IAAI,EAAEZ,WAAP;AAAoBiB,EAAAA;AAApB,CAAb,CAAnB;AAEP,eAAeR,cAAf","sourcesContent":["import {profileAPI, usersAPI} from \"../API/api\";\r\n\r\nconst ADD_POST = \"network/profile/ADD_POST\";\r\nconst SET_USER_PROFILE = \"network/profile/SET_USER_PROFILE\";\r\nconst SET_USER_STATUS = \"network/profile/SET_USER_STATUS\";\r\nconst DELETE_POST = \"network/profile/DELETE_POST\";\r\n\r\n\r\nlet initialisation = {\r\n    posts: [\r\n        {\r\n            id: 1, text: \"My first post!\", lickCount: 12,\r\n            avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\"\r\n        },\r\n        {\r\n            id: 2, text: \"My first post!\", lickCount: 12,\r\n            avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\"\r\n        },\r\n        {\r\n            id: 3, text: \"My first post!\", lickCount: 12,\r\n            avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\"\r\n        },\r\n    ],\r\n    profile: null,\r\n    status: \"\",\r\n}\r\n\r\nconst profileReducer = (state = initialisation, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 4,\r\n                text: action.newText,\r\n                lickCount: 0,\r\n                avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\"\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newText: \"\"\r\n            }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state, profile: action.profile\r\n            }\r\n        }\r\n        case SET_USER_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostAC = (newText) => {\r\n    return ({type: ADD_POST, newText})\r\n};\r\n\r\nexport const setProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\n\r\nexport const setStatus = (status) => ({type: SET_USER_STATUS, status});\r\n\r\nexport const setUsersProfile = async (userId) => {\r\n    let response = await usersAPI.setUsers(userId)\r\n    dispatch(setProfile(response.data))\r\n}\r\n\r\nexport const getStatus = async (userId) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data))\r\n}\r\n\r\nexport const updateStatus = async (status) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\n\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\n\r\nexport default profileReducer"]},"metadata":{},"sourceType":"module"}