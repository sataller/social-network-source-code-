{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\net\\\\project1\\\\src\\\\components\\\\common\\\\Pagination\\\\Pagenation.jsx\";\nimport React, { useState } from \"react\";\nimport style from \"./Pagination.module.css\";\n\nconst Pagination = ({\n  totalCount,\n  pageSize,\n  currentPage,\n  paginationSize,\n  ...props\n}) => {\n  let pagesCount = Math.ceil(totalCount / pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let [page, setPage] = useState(currentPage);\n  let leftBorder = page - Math.ceil((paginationSize - 1) / 2);\n  let rightBorder = page + Math.ceil((paginationSize - 1) / 2);\n  let pagination = pages.filter(p => p >= leftBorder).filter(p => p <= rightBorder);\n  console.log(pages[pages.length - 1]);\n  console.log(pagesCount);\n  console.log(pagination);\n  return React.createElement(\"div\", {\n    className: style.pagination,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, page <= 5 ? React.createElement(\"button\", {\n    className: style.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"\") : React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => {\n      setPage(page - 1);\n    },\n    className: style.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \" \", \"<\", \" \"), pagination.map(p => {\n    return React.createElement(\"span\", {\n      className: style.pageNumber + \" \" + (currentPage === p && style.selected),\n      onClick: e => {\n        props.onPageChanged(p);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, p, \" \");\n  }), page >= pagesCount ? React.createElement(\"button\", {\n    className: style.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"\") : React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => {\n      setPage(page + 1);\n    },\n    className: style.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \" \", \">\", \" \"));\n};\n\nexport default Pagination;","map":{"version":3,"sources":["D:/react/net/project1/src/components/common/Pagination/Pagenation.jsx"],"names":["React","useState","style","Pagination","totalCount","pageSize","currentPage","paginationSize","props","pagesCount","Math","ceil","pages","i","push","page","setPage","leftBorder","rightBorder","pagination","filter","p","console","log","length","button","map","pageNumber","selected","e","onPageChanged"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,UAAD;AAAaC,EAAAA,QAAb;AAAuBC,EAAAA,WAAvB;AAAoCC,EAAAA,cAApC;AAAoD,KAAGC;AAAvD,CAAD,KAAmE;AAClF,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUP,UAAU,GAAGC,QAAvB,CAAjB;AACA,MAAIO,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,UAArB,EAAiCI,CAAC,EAAlC,EAAsC;AAClCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AAED,MAAI,CAACE,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAACK,WAAD,CAA9B;AAEA,MAAIW,UAAU,GAAGF,IAAI,GAAGL,IAAI,CAACC,IAAL,CAAU,CAACJ,cAAc,GAAG,CAAlB,IAAuB,CAAjC,CAAxB;AAEA,MAAIW,WAAW,GAAGH,IAAI,GAAGL,IAAI,CAACC,IAAL,CAAU,CAACJ,cAAc,GAAG,CAAlB,IAAuB,CAAjC,CAAzB;AACA,MAAIY,UAAU,GAAGP,KAAK,CAACQ,MAAN,CAAaC,CAAC,IAAIA,CAAC,IAAIJ,UAAvB,EAAmCG,MAAnC,CAA0CC,CAAC,IAAIA,CAAC,IAAIH,WAApD,CAAjB;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACA,KAAK,CAACY,MAAN,GAAa,CAAd,CAAjB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYd,UAAZ;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AAEA,SACI;AAAK,IAAA,SAAS,EAAEjB,KAAK,CAACiB,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,IAAI,IAAI,CAAR,GAAY;AAAQ,IAAA,SAAS,EAAEb,KAAK,CAACuB,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkC,EAAlC,CAAZ,GACG;AAAQ,IAAA,IAAI,EAAE,QAAd;AAAwB,IAAA,OAAO,EAAE,MAAM;AACnCT,MAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACH,KAFD;AAEG,IAAA,SAAS,EAAEb,KAAK,CAACuB,MAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAE8B,GAF9B,MAFR,EAOKN,UAAU,CAACO,GAAX,CAAeL,CAAC,IAAI;AACjB,WAAO;AAAM,MAAA,SAAS,EAAEnB,KAAK,CAACyB,UAAN,GAAkB,GAAlB,IAAwBrB,WAAW,KAAKe,CAAhB,IAAqBnB,KAAK,CAAC0B,QAAnD,CAAjB;AACM,MAAA,OAAO,EAAGC,CAAD,IAAO;AACZrB,QAAAA,KAAK,CAACsB,aAAN,CAAoBT,CAApB;AACH,OAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGUA,CAHV,MAAP;AAIH,GALA,CAPL,EAcKN,IAAI,IAAKN,UAAT,GAAuB;AAAQ,IAAA,SAAS,EAAEP,KAAK,CAACuB,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkC,EAAlC,CAAvB,GACG;AAAQ,IAAA,IAAI,EAAE,QAAd;AAAwB,IAAA,OAAO,EAAE,MAAM;AACnCT,MAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACH,KAFD;AAEG,IAAA,SAAS,EAAEb,KAAK,CAACuB,MAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAE8B,GAF9B,MAfR,CADJ;AAuBH,CAzCD;;AA2CA,eAAetB,UAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport style from \"./Pagination.module.css\";\r\n\r\nconst Pagination = ({totalCount, pageSize, currentPage, paginationSize, ...props}) => {\r\n    let pagesCount = Math.ceil(totalCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let [page, setPage] = useState(currentPage)\r\n\r\n    let leftBorder = page - Math.ceil((paginationSize - 1) / 2);\r\n\r\n    let rightBorder = page + Math.ceil((paginationSize - 1) / 2);\r\n    let pagination = pages.filter(p => p >= leftBorder).filter(p => p <= rightBorder)\r\n\r\n    console.log(pages[pages.length-1])\r\n    console.log(pagesCount)\r\n    console.log(pagination)\r\n\r\n    return (\r\n        <div className={style.pagination}>\r\n            {page <= 5 ? <button className={style.button}>{\"\"}</button> :\r\n                <button type={\"button\"} onClick={() => {\r\n                    setPage(page - 1)\r\n                }} className={style.button}> {\"<\"} </button>\r\n            }\r\n\r\n            {pagination.map(p => {\r\n                return <span className={style.pageNumber +\" \"+ (currentPage === p && style.selected)}\r\n                             onClick={(e) => {\r\n                                 props.onPageChanged(p)\r\n                             }}>{p} </span>\r\n            })}\r\n\r\n            {page >= (pagesCount) ? <button className={style.button}>{\"\"}</button> :\r\n                <button type={\"button\"} onClick={() => {\r\n                    setPage(page + 1)\r\n                }} className={style.button}> {\">\"} </button>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination"]},"metadata":{},"sourceType":"module"}