{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\net\\\\project1\\\\src\\\\components\\\\Dialogs\\\\Dialog\\\\Message\\\\Messages.jsx\";\nimport React, { useState } from \"react\";\nimport Message from \"./Message\";\nimport { reversedCopy } from \"../../../../utils/arrayHalper\";\nimport { Route, Switch } from \"react-router-dom\";\nimport withSuspense from \"../../../../HOC/withSuspens\"; // recipientId={m.recipientId} senderId={m.senderId}\n// senderName={m.senderName}\n// translatedBody={m.translatedBody}\n//  totalCount={m.totalCount}\n\nconst Messages = props => {\n  let [numberOfPage, setNumberOfPage] = useState(1);\n\n  let loadNextMessagesPage = () => {\n    let pageCount = Math.ceil(props.dialogsPage.messages.totalCount / props.pageSize);\n\n    if (numberOfPage >= pageCount) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \" It's all \");\n    }\n\n    props.getMessages(props.activeDialogId, props.messagePageSize, numberOfPage + 1);\n    let startItem = numberOfPage * props.pageSize;\n    let endItem = startItem + props.pageSize;\n    let element = props.dialogsPage.messagesItems.slice(startItem, endItem);\n    setNumberOfPage(numberOfPage + 1);\n    let reversElement = reversedCopy(element).map(m => React.createElement(Message, {\n      id: m.id,\n      key: m.id,\n      messageText: m.body,\n      recipientId: m.recipientId,\n      senderId: m.senderId,\n      senderName: m.senderName,\n      translatedBody: m.translatedBody,\n      viewed: m.viewed,\n      totalCount: m.totalCount,\n      addedAt: m.addedAt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }));\n    return React.createElement(React.Suspense, {\n      fallback: React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Loading...\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, reversElement); // const DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"))\n    //     <Route path=\"/dialogs\" render={() => withSuspense(DialogsContainer)}/>\n  };\n\n  let reversMessageElement = null;\n\n  if (props.activeDialogId && props.dialogsPage.messagesItems) {\n    let messageElement = props.dialogsPage.messagesItems;\n    reversMessageElement = reversedCopy(messageElement).map(m => React.createElement(Message, {\n      id: m.id,\n      key: m.id,\n      messageText: m.body,\n      recipientId: m.recipientId,\n      senderId: m.senderId,\n      senderName: m.senderName,\n      translatedBody: m.translatedBody,\n      viewed: m.viewed,\n      totalCount: m.totalCount,\n      addedAt: m.addedAt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, reversMessageElement, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, loadElements), React.createElement(\"button\", {\n    onClick: loadNextMessagesPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Load more messages\"));\n};\n\nexport default Messages;","map":{"version":3,"sources":["D:/react/net/project1/src/components/Dialogs/Dialog/Message/Messages.jsx"],"names":["React","useState","Message","reversedCopy","Route","Switch","withSuspense","Messages","props","numberOfPage","setNumberOfPage","loadNextMessagesPage","pageCount","Math","ceil","dialogsPage","messages","totalCount","pageSize","getMessages","activeDialogId","messagePageSize","startItem","endItem","element","messagesItems","slice","reversElement","map","m","id","body","recipientId","senderId","senderName","translatedBody","viewed","addedAt","reversMessageElement","messageElement","loadElements"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\"\r\nimport Message from \"./Message\";\r\nimport {reversedCopy} from \"../../../../utils/arrayHalper\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport withSuspense from \"../../../../HOC/withSuspens\";\r\n\r\n// recipientId={m.recipientId} senderId={m.senderId}\r\n// senderName={m.senderName}\r\n// translatedBody={m.translatedBody}\r\n//  totalCount={m.totalCount}\r\n\r\nconst Messages = (props) => {\r\n\r\n\r\n    let [numberOfPage, setNumberOfPage] = useState(1)\r\n\r\n\r\nlet loadNextMessagesPage = () => {\r\n    let pageCount = Math.ceil(props.dialogsPage.messages.totalCount / props.pageSize)\r\n    if (numberOfPage >= pageCount) {\r\n        return <div> It's all </div>\r\n    }\r\n    props.getMessages(props.activeDialogId, props.messagePageSize, (numberOfPage+1))\r\n    let startItem = numberOfPage * props.pageSize;\r\n    let endItem = startItem + props.pageSize;\r\n    let element = props.dialogsPage.messagesItems.slice(startItem, endItem);\r\n\r\n    setNumberOfPage(numberOfPage + 1);\r\n\r\n    let reversElement = reversedCopy(element).map(m => <Message id={m.id} key={m.id} messageText={m.body}\r\n                                                                recipientId={m.recipientId}\r\n                                                                senderId={m.senderId}\r\n                                                                senderName={m.senderName}\r\n                                                                translatedBody={m.translatedBody}\r\n                                                                viewed={m.viewed}\r\n                                                                totalCount={m.totalCount}\r\n                                                                addedAt={m.addedAt}/>)\r\n    return <React.Suspense fallback={<div>Loading...</div>}>{reversElement}</React.Suspense>\r\n    // const DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"))\r\n    //     <Route path=\"/dialogs\" render={() => withSuspense(DialogsContainer)}/>\r\n\r\n\r\n}\r\n\r\n\r\n    let reversMessageElement = null;\r\n\r\n    if (props.activeDialogId && props.dialogsPage.messagesItems) {\r\n        let messageElement = props.dialogsPage.messagesItems;\r\n        reversMessageElement = reversedCopy(messageElement).map(m => <Message id={m.id} key={m.id} messageText={m.body}\r\n                                                                              recipientId={m.recipientId}\r\n                                                                              senderId={m.senderId}\r\n                                                                              senderName={m.senderName}\r\n                                                                              translatedBody={m.translatedBody}\r\n                                                                              viewed={m.viewed}\r\n                                                                              totalCount={m.totalCount}\r\n                                                                              addedAt={m.addedAt}/>)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {reversMessageElement}\r\n            <div>{loadElements}</div>\r\n            <button onClick={loadNextMessagesPage}>Load more messages</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messages\r\n"]},"metadata":{},"sourceType":"module"}