{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\net\\\\project1\\\\src\\\\components\\\\Profile\\\\ProfileContainer.jsx\";\nimport React from \"react\";\nimport Profile from \"./Profile\";\nimport { getStatus, setUsersProfile, updateStatus } from \"../../Redux/profileReducer\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n    }\n\n    this.props.setUsersProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  render() {\n    return React.createElement(Profile, Object.assign({}, this.props, {\n      profile: this.props.profile,\n      status: this.props.status,\n      updateStatus: this.props.updateStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }));\n  }\n\n} // let AuthRedirectComponent = withAuthRedirect(ProfileContainer)\n\n\nconsole.log(state);\n\nlet mapStateToProps = state => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth\n});\n\nlet WithRouterProfileContainer = withRouter(ProfileContainer);\nexport default connect(mapStateToProps, {\n  setUsersProfile,\n  getStatus,\n  updateStatus\n})(WithRouterProfileContainer);","map":{"version":3,"sources":["D:/react/net/project1/src/components/Profile/ProfileContainer.jsx"],"names":["React","Profile","getStatus","setUsersProfile","updateStatus","connect","withRouter","ProfileContainer","Component","componentDidMount","userId","props","match","params","authorizedUserId","render","profile","status","console","log","state","mapStateToProps","profilePage","auth","isAuth","WithRouterProfileContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,SAAR,EAAmBC,eAAnB,EAAoCC,YAApC,QAAuD,4BAAvD;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;;AAEA,MAAMC,gBAAN,SAA+BP,KAAK,CAACQ,SAArC,CAA+C;AAE3CC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,QAAI,CAACA,MAAL,EAAa;AACTA,MAAAA,MAAM,GAAG,KAAKC,KAAL,CAAWG,gBAApB;AACH;;AACD,SAAKH,KAAL,CAAWR,eAAX,CAA2BO,MAA3B;AACA,SAAKC,KAAL,CAAWT,SAAX,CAAqBQ,MAArB;AACH;;AAEDK,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,OAAD,oBAAa,KAAKJ,KAAlB;AAAyB,MAAA,OAAO,EAAE,KAAKA,KAAL,CAAWK,OAA7C;AACS,MAAA,MAAM,EAAE,KAAKL,KAAL,CAAWM,MAD5B;AACoC,MAAA,YAAY,EAAE,KAAKN,KAAL,CAAWP,YAD7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AAKH;;AAjB0C,C,CAoB/C;;;AAEAc,OAAO,CAACC,GAAR,CAAYC,KAAZ;;AACA,IAAIC,eAAe,GAAID,KAAD,KAAY;AAC9BJ,EAAAA,OAAO,EAAEI,KAAK,CAACE,WAAN,CAAkBN,OADG;AAE9BC,EAAAA,MAAM,EAAEG,KAAK,CAACE,WAAN,CAAkBL,MAFI;AAG9BH,EAAAA,gBAAgB,EAAEM,KAAK,CAACG,IAAN,CAAWb,MAHC;AAI9Bc,EAAAA,MAAM,EAAEJ,KAAK,CAACG,IAAN,CAAWC;AAJW,CAAZ,CAAtB;;AAOA,IAAIC,0BAA0B,GAAGnB,UAAU,CAACC,gBAAD,CAA3C;AAEA,eAAeF,OAAO,CAACgB,eAAD,EAAkB;AAAClB,EAAAA,eAAD;AAAkBD,EAAAA,SAAlB;AAA6BE,EAAAA;AAA7B,CAAlB,CAAP,CAAqEqB,0BAArE,CAAf","sourcesContent":["import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {getStatus, setUsersProfile, updateStatus} from \"../../Redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.setUsersProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile}\r\n                     status={this.props.status} updateStatus={this.props.updateStatus}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n\r\nconsole.log(state)\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nlet WithRouterProfileContainer = withRouter(ProfileContainer)\r\n\r\nexport default connect(mapStateToProps, {setUsersProfile, getStatus, updateStatus})(WithRouterProfileContainer)"]},"metadata":{},"sourceType":"module"}