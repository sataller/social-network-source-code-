{"ast":null,"code":"import { profileAPI, usersAPI } from \"../API/api\";\nconst ADD_POST = \"network/profile/ADD_POST\";\nconst SET_USER_PROFILE = \"network/profile/SET_USER_PROFILE\";\nconst SET_USER_STATUS = \"network/profile/SET_USER_STATUS\";\nconst DELETE_POST = \"network/profile/DELETE_POST\";\nconst SAVE_PHOTO_SUCCESS = \"network/profile/SAVE_PHOTO_SUCCESS\";\nlet initialisation = {\n  posts: [{\n    id: 1,\n    text: \"My first post!\",\n    lickCount: 12,\n    avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\"\n  }, {\n    id: 2,\n    text: \"My first post!\",\n    lickCount: 12,\n    avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\"\n  }, {\n    id: 3,\n    text: \"My first post!\",\n    lickCount: 12,\n    avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\"\n  }],\n  profile: null,\n  status: \"\"\n};\n\nconst profileReducer = (state = initialisation, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      let newPost = {\n        id: 4,\n        text: action.newText,\n        lickCount: 0,\n        avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\"\n      };\n      return { ...state,\n        posts: [...state.posts, newPost],\n        newText: \"\"\n      };\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    case SET_USER_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    case DELETE_POST:\n      {\n        return { ...state,\n          posts: state.posts.filter(p => p.id != action.postId)\n        };\n      }\n\n    case SAVE_PHOTO_SUCCESS:\n      {\n        return { ...state,\n          profile: { ...state.profile,\n            photos: action.photos\n          }\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostAC = newText => {\n  return {\n    type: ADD_POST,\n    newText\n  };\n};\nexport const deletePost = postId => ({\n  type: DELETE_POST,\n  postId\n});\nexport const setProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setStatus = status => ({\n  type: SET_USER_STATUS,\n  status\n});\nexport const savePhotoSuccess = photos => ({\n  type: SAVE_PHOTO_SUCCESS,\n  photos\n});\nexport const setUsersProfile = userId => async dispatch => {\n  debugger;\n  const response = await usersAPI.setUsers(userId);\n  dispatch(setProfile(response.data));\n};\nexport const getStatus = userId => async dispatch => {\n  const response = await profileAPI.getStatus(userId);\n  dispatch(setStatus(response.data));\n};\nexport const updateStatus = status => async dispatch => {\n  const response = await profileAPI.updateStatus(status);\n\n  if (response.data.resultCode === 0) {\n    dispatch(setStatus(status));\n  }\n};\nexport const savePhoto = file => async dispatch => {\n  const response = await profileAPI.savePhoto(file);\n\n  if (response.data.resultCode === 0) {\n    dispatch(savePhotoSuccess(response.data.data.photos));\n  }\n};\nexport default profileReducer;","map":{"version":3,"sources":["D:/react/net/project1/src/Redux/profileReducer.js"],"names":["profileAPI","usersAPI","ADD_POST","SET_USER_PROFILE","SET_USER_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","initialisation","posts","id","text","lickCount","avatar","profile","status","profileReducer","state","action","type","newPost","newText","filter","p","postId","photos","addPostAC","deletePost","setProfile","setStatus","savePhotoSuccess","setUsersProfile","userId","dispatch","response","setUsers","data","getStatus","updateStatus","resultCode","savePhoto","file"],"mappings":"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","sourcesContent":["import {profileAPI, usersAPI} from \"../API/api\";\r\n\r\nconst ADD_POST = \"network/profile/ADD_POST\";\r\nconst SET_USER_PROFILE = \"network/profile/SET_USER_PROFILE\";\r\nconst SET_USER_STATUS = \"network/profile/SET_USER_STATUS\";\r\nconst DELETE_POST = \"network/profile/DELETE_POST\";\r\nconst SAVE_PHOTO_SUCCESS = \"network/profile/SAVE_PHOTO_SUCCESS\";\r\n\r\n\r\nlet initialisation = {\r\n    posts: [\r\n        {\r\n            id: 1, text: \"My first post!\", lickCount: 12,\r\n            avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\"\r\n        },\r\n        {\r\n            id: 2, text: \"My first post!\", lickCount: 12,\r\n            avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\"\r\n        },\r\n        {\r\n            id: 3, text: \"My first post!\", lickCount: 12,\r\n            avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\"\r\n        },\r\n    ],\r\n    profile: null,\r\n    status: \"\",\r\n}\r\n\r\nconst profileReducer = (state = initialisation, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 4,\r\n                text: action.newText,\r\n                lickCount: 0,\r\n                avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\"\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newText: \"\"\r\n            }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state, profile: action.profile\r\n            }\r\n        }\r\n        case SET_USER_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n        }\r\n        case SAVE_PHOTO_SUCCESS:{\r\n            return { ...state, profile: {...state.profile, photos: action.photos}}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostAC = (newText) => {\r\n    return ({type: ADD_POST, newText})\r\n};\r\n\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\n\r\nexport const setProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\n\r\nexport const setStatus = (status) => ({type: SET_USER_STATUS, status});\r\n\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos});\r\n\r\nexport const setUsersProfile = (userId) => async (dispatch) => {\r\n    debugger\r\n      const response = await usersAPI.setUsers(userId)\r\n            dispatch(setProfile(response.data))\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n       const response = await profileAPI.getStatus(userId)\r\n            dispatch(setStatus(response.data))\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n        const response = await profileAPI.updateStatus(status)\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatus(status))\r\n            }\r\n}\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n        const response = await profileAPI.savePhoto(file)\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(savePhotoSuccess(response.data.data.photos))\r\n            }\r\n}\r\n\r\n\r\nexport default profileReducer"]},"metadata":{},"sourceType":"module"}