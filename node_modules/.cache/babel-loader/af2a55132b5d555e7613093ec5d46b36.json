{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\net\\\\project1\\\\src\\\\components\\\\Users\\\\UsersContainer.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { follow, requestUsers, setPage, toggleFollowingProgress, unfollow } from \"../../Redux/usersReducer\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport { getAuthUserId, getCurrentPage, getFollowingInProgress, getIsAuth, getIsFetching, getPageSize, getPaginationSize, getTotalCount, getUsers } from \"../../Redux/userSelectors\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.getUsers(pageNumber, this.props.pageSize);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUsers(this.props.currentPage, this.props.pageSize);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.props.isFetching ? React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }) : null, React.createElement(Users, {\n      totalCount: this.props.totalCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      users: this.props.users,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      onPageChanged: this.onPageChanged,\n      followingInProgress: this.props.followingInProgress,\n      toggleFollowingProgress: this.props.toggleFollowingProgress,\n      paginationSize: this.props.paginationSize,\n      isAuth: this.props.isAuth,\n      authUserId: this.props.authUserId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: getUsers(state),\n    pageSize: getPageSize(state),\n    totalCount: getTotalCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state),\n    followingInProgress: getFollowingInProgress(state),\n    paginationSize: getPaginationSize(state),\n    isAuth: getIsAuth(state),\n    authUserId: getAuthUserId(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setPage,\n  toggleFollowingProgress,\n  getUsers: requestUsers\n})(UsersContainer);","map":{"version":3,"sources":["D:/react/net/project1/src/components/Users/UsersContainer.jsx"],"names":["React","connect","follow","requestUsers","setPage","toggleFollowingProgress","unfollow","Users","Preloader","getAuthUserId","getCurrentPage","getFollowingInProgress","getIsAuth","getIsFetching","getPageSize","getPaginationSize","getTotalCount","getUsers","UsersContainer","Component","onPageChanged","pageNumber","props","pageSize","componentDidMount","currentPage","render","isFetching","totalCount","users","followingInProgress","paginationSize","isAuth","authUserId","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SACIC,MADJ,EACYC,YADZ,EAEIC,OAFJ,EAGIC,uBAHJ,EAIIC,QAJJ,QAKO,0BALP;AAMA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SACIC,aADJ,EAEIC,cAFJ,EAGIC,sBAHJ,EAG4BC,SAH5B,EAIIC,aAJJ,EAKIC,WALJ,EAKiBC,iBALjB,EAMIC,aANJ,EAOIC,QAPJ,QAQO,2BARP;;AAUA,MAAMC,cAAN,SAA6BlB,KAAK,CAACmB,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAMzCC,aANyC,GAMxBC,UAAD,IAAgB;AAC5B,WAAKC,KAAL,CAAWL,QAAX,CAAoBI,UAApB,EAAgC,KAAKC,KAAL,CAAWC,QAA3C;AACH,KARwC;AAAA;;AAEzCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKF,KAAL,CAAWL,QAAX,CAAoB,KAAKK,KAAL,CAAWG,WAA/B,EAA4C,KAAKH,KAAL,CAAWC,QAAvD;AACH;;AAMDG,EAAAA,MAAM,GAAG;AACL,WACI,0CACK,KAAKJ,KAAL,CAAWK,UAAX,GAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GAAuC,IAD5C,EAEI,oBAAC,KAAD;AAAO,MAAA,UAAU,EAAE,KAAKL,KAAL,CAAWM,UAA9B;AAA0C,MAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWC,QAA/D;AACO,MAAA,WAAW,EAAE,KAAKD,KAAL,CAAWG,WAD/B;AAC4C,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWO,KAD9D;AAEO,MAAA,MAAM,EAAE,KAAKP,KAAL,CAAWpB,MAF1B;AAEkC,MAAA,QAAQ,EAAE,KAAKoB,KAAL,CAAWhB,QAFvD;AAGO,MAAA,aAAa,EAAE,KAAKc,aAH3B;AAIO,MAAA,mBAAmB,EAAE,KAAKE,KAAL,CAAWQ,mBAJvC;AAKO,MAAA,uBAAuB,EAAE,KAAKR,KAAL,CAAWjB,uBAL3C;AAMO,MAAA,cAAc,EAAE,KAAKiB,KAAL,CAAWS,cANlC;AAOO,MAAA,MAAM,EAAE,KAAKT,KAAL,CAAWU,MAP1B;AAQO,MAAA,UAAU,EAAE,KAAKV,KAAL,CAAWW,UAR9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAcH;;AAzBwC;;AA4B7C,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAQ;AACJN,IAAAA,KAAK,EAACZ,QAAQ,CAACkB,KAAD,CADV;AAEJZ,IAAAA,QAAQ,EAAET,WAAW,CAACqB,KAAD,CAFjB;AAGJP,IAAAA,UAAU,EAAEZ,aAAa,CAACmB,KAAD,CAHrB;AAIJV,IAAAA,WAAW,EAAEf,cAAc,CAACyB,KAAD,CAJvB;AAKJR,IAAAA,UAAU,EAAEd,aAAa,CAACsB,KAAD,CALrB;AAMJL,IAAAA,mBAAmB,EAAEnB,sBAAsB,CAACwB,KAAD,CANvC;AAOJJ,IAAAA,cAAc,EAAEhB,iBAAiB,CAACoB,KAAD,CAP7B;AAQJH,IAAAA,MAAM,EAAEpB,SAAS,CAACuB,KAAD,CARb;AASJF,IAAAA,UAAU,EAACxB,aAAa,CAAC0B,KAAD;AATpB,GAAR;AAYH,CAbD;;AAeA,eAAelC,OAAO,CAACiC,eAAD,EAAkB;AACpChC,EAAAA,MADoC;AAC5BI,EAAAA,QAD4B;AAClBF,EAAAA,OADkB;AACTC,EAAAA,uBADS;AACgBY,EAAAA,QAAQ,EAAEd;AAD1B,CAAlB,CAAP,CAEZe,cAFY,CAAf","sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow, requestUsers,\r\n    setPage,\r\n    toggleFollowingProgress,\r\n    unfollow\r\n} from \"../../Redux/usersReducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {\r\n    getAuthUserId,\r\n    getCurrentPage,\r\n    getFollowingInProgress, getIsAuth,\r\n    getIsFetching,\r\n    getPageSize, getPaginationSize,\r\n    getTotalCount,\r\n    getUsers\r\n} from \"../../Redux/userSelectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Users totalCount={this.props.totalCount} pageSize={this.props.pageSize}\r\n                       currentPage={this.props.currentPage} users={this.props.users}\r\n                       follow={this.props.follow} unfollow={this.props.unfollow}\r\n                       onPageChanged={this.onPageChanged}\r\n                       followingInProgress={this.props.followingInProgress}\r\n                       toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                       paginationSize={this.props.paginationSize}\r\n                       isAuth={this.props.isAuth}\r\n                       authUserId={this.props.authUserId}/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        users:getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalCount: getTotalCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        paginationSize: getPaginationSize(state),\r\n        isAuth: getIsAuth(state),\r\n        authUserId:getAuthUserId(state),\r\n\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    follow, unfollow, setPage, toggleFollowingProgress, getUsers: requestUsers\r\n})(UsersContainer)\r\n"]},"metadata":{},"sourceType":"module"}