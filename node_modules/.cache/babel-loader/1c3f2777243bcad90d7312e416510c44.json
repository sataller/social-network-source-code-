{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\net\\\\project1\\\\src\\\\components\\\\Dialogs\\\\DialogsContainer.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getDialogs, getMessages, sendNewMessage, setActiveDialogId, startDialog } from \"../../Redux/dialogsReducer\";\nimport Dialogs from \"./Dialogs\";\nimport withAuthRedirect from \"../../HOC/withAuthRedirect\";\n\nclass DialogsContainer extends React.Component {\n  componentDidMount() {\n    this.props.getDialogs();\n  }\n\n  render() {\n    return React.createElement(Dialogs, {\n      sendNewMessage: this.props.sendNewMessage,\n      getDialogs: this.props.getDialogs,\n      startDialog: this.props.startDialog,\n      getMessages: this.props.getMessages,\n      dialogsPage: this.props.dialogsPage,\n      isAuth: this.props.isAuth,\n      userId: this.props.userId,\n      dialogs: this.props.dialogs,\n      getMessages: this.props.getMessages,\n      messages: this.props.messages,\n      sendNewMessage: this.props.sendNewMessage,\n      setActivDialogId: this.props.setActiveDialogId,\n      activeDialogId: this.props.activeDialogId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    });\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    dialogsPage: state.dialogsPage,\n    isAuth: state.auth.isAuth,\n    userId: state.dialogsPage.userId,\n    dialogs: state.dialogsPage.dialogs,\n    messages: state.dialogsPage.messages,\n    activeDialogId: state.dialogsPage.activeDialogId\n  };\n};\n\nlet AuthRedirectComponent = withAuthRedirect(DialogsContainer);\nexport default connect(mapStateToProps, {\n  sendNewMessage,\n  getDialogs,\n  startDialog,\n  getMessages,\n  setActiveDialogId\n})(AuthRedirectComponent);","map":{"version":3,"sources":["D:/react/net/project1/src/components/Dialogs/DialogsContainer.jsx"],"names":["React","connect","getDialogs","getMessages","sendNewMessage","setActiveDialogId","startDialog","Dialogs","withAuthRedirect","DialogsContainer","Component","componentDidMount","props","render","dialogsPage","isAuth","userId","dialogs","messages","activeDialogId","mapStateToProps","state","auth","AuthRedirectComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,EAAoBC,WAApB,EAAiCC,cAAjC,EAAiDC,iBAAjD,EAAoEC,WAApE,QAAsF,4BAAtF;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;;AAEA,MAAMC,gBAAN,SAA+BT,KAAK,CAACU,SAArC,CAA8C;AAE1CC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWV,UAAX;AAEH;;AAEDW,EAAAA,MAAM,GAAE;AACJ,WAAO,oBAAC,OAAD;AAAS,MAAA,cAAc,EAAE,KAAKD,KAAL,CAAWR,cAApC;AAAoD,MAAA,UAAU,EAAE,KAAKQ,KAAL,CAAWV,UAA3E;AACS,MAAA,WAAW,EAAE,KAAKU,KAAL,CAAWN,WADjC;AAC8C,MAAA,WAAW,EAAE,KAAKM,KAAL,CAAWT,WADtE;AAES,MAAA,WAAW,EAAE,KAAKS,KAAL,CAAWE,WAFjC;AAE8C,MAAA,MAAM,EAAE,KAAKF,KAAL,CAAWG,MAFjE;AAGS,MAAA,MAAM,EAAE,KAAKH,KAAL,CAAWI,MAH5B;AAGoC,MAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWK,OAHxD;AAIS,MAAA,WAAW,EAAE,KAAKL,KAAL,CAAWT,WAJjC;AAI8C,MAAA,QAAQ,EAAE,KAAKS,KAAL,CAAWM,QAJnE;AAKS,MAAA,cAAc,EAAE,KAAKN,KAAL,CAAWR,cALpC;AAKoD,MAAA,gBAAgB,EAAE,KAAKQ,KAAL,CAAWP,iBALjF;AAMS,MAAA,cAAc,EAAE,KAAKO,KAAL,CAAWO,cANpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAOH;;AAfyC;;AAoB9C,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHP,IAAAA,WAAW,EAAEO,KAAK,CAACP,WADhB;AAEHC,IAAAA,MAAM,EAAEM,KAAK,CAACC,IAAN,CAAWP,MAFhB;AAGHC,IAAAA,MAAM,EAACK,KAAK,CAACP,WAAN,CAAkBE,MAHtB;AAIHC,IAAAA,OAAO,EAAEI,KAAK,CAACP,WAAN,CAAkBG,OAJxB;AAKHC,IAAAA,QAAQ,EAAEG,KAAK,CAACP,WAAN,CAAkBI,QALzB;AAMHC,IAAAA,cAAc,EAAEE,KAAK,CAACP,WAAN,CAAkBK;AAN/B,GAAP;AAQH,CATD;;AAWA,IAAII,qBAAqB,GAAGf,gBAAgB,CAACC,gBAAD,CAA5C;AAEA,eAAeR,OAAO,CAACmB,eAAD,EAAkB;AAAChB,EAAAA,cAAD;AAAiBF,EAAAA,UAAjB;AAA6BI,EAAAA,WAA7B;AAA0CH,EAAAA,WAA1C;AAAuDE,EAAAA;AAAvD,CAAlB,CAAP,CAAoGkB,qBAApG,CAAf","sourcesContent":["import React from \"react\"\r\nimport {connect} from \"react-redux\";\r\nimport {getDialogs, getMessages, sendNewMessage, setActiveDialogId, startDialog} from \"../../Redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport withAuthRedirect from \"../../HOC/withAuthRedirect\";\r\n\r\nclass DialogsContainer extends React.Component{\r\n\r\n    componentDidMount() {\r\n        this.props.getDialogs()\r\n\r\n    }\r\n\r\n    render(){\r\n        return <Dialogs sendNewMessage={this.props.sendNewMessage} getDialogs={this.props.getDialogs}\r\n                        startDialog={this.props.startDialog} getMessages={this.props.getMessages}\r\n                        dialogsPage={this.props.dialogsPage} isAuth={this.props.isAuth}\r\n                        userId={this.props.userId} dialogs={this.props.dialogs}\r\n                        getMessages={this.props.getMessages} messages={this.props.messages}\r\n                        sendNewMessage={this.props.sendNewMessage} setActivDialogId={this.props.setActiveDialogId}\r\n                        activeDialogId={this.props.activeDialogId}/>\r\n    }\r\n\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth,\r\n        userId:state.dialogsPage.userId,\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        activeDialogId: state.dialogsPage.activeDialogId,\r\n    }\r\n}\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(DialogsContainer)\r\n\r\nexport default connect(mapStateToProps, {sendNewMessage, getDialogs, startDialog, getMessages, setActiveDialogId})(AuthRedirectComponent)"]},"metadata":{},"sourceType":"module"}