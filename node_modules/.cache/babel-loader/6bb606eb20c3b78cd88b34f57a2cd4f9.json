{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\net\\\\project1\\\\src\\\\components\\\\common\\\\Pagination\\\\Pagenation.jsx\";\nimport React, { useState } from \"react\";\nimport style from \"./Pagination.module.css\";\n\nconst Pagination = ({\n  totalCount,\n  pageSize,\n  paginationSize,\n  ...props\n}) => {\n  let pagesCount = Math.ceil(totalCount / pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let [currentPage, setCurrentPage] = useState(1);\n  let leftBorder = currentPage - Math.ceil((paginationSize - 1) / 2);\n  let rightBorder = currentPage + Math.ceil((paginationSize - 1) / 2);\n  let pagination = pages.filter(p => p >= leftBorder).filter(p => p <= rightBorder);\n  console.log(pagination);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => {\n      setCurrentPage(currentPage - 1);\n    },\n    className: style.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \" \", \"<\", \" \"), pagination.map(p => {\n    return React.createElement(\"span\", {\n      className: currentPage === p && style.selected,\n      onClick: e => {\n        props.onPageChanged(p);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, p, \" \");\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => {\n      setCurrentPage(currentPage + 1);\n    },\n    className: style.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \">\"));\n};\n\nexport default Pagination;","map":{"version":3,"sources":["D:/react/net/project1/src/components/common/Pagination/Pagenation.jsx"],"names":["React","useState","style","Pagination","totalCount","pageSize","paginationSize","props","pagesCount","Math","ceil","pages","i","push","currentPage","setCurrentPage","leftBorder","rightBorder","pagination","filter","p","console","log","button","map","selected","e","onPageChanged"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,UAAD;AAAaC,EAAAA,QAAb;AAAuBC,EAAAA,cAAvB;AAAuC,KAAGC;AAA1C,CAAD,KAAsD;AACrE,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUN,UAAU,GAAGC,QAAvB,CAAjB;AACA,MAAIM,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,UAArB,EAAiCI,CAAC,EAAlC,EAAsC;AAClCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AAED,MAAI,CAACE,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,CAAD,CAA5C;AAEA,MAAIe,UAAU,GAAGF,WAAW,GAAGL,IAAI,CAACC,IAAL,CAAU,CAACJ,cAAc,GAAG,CAAlB,IAAqB,CAA/B,CAA/B;AAEA,MAAIW,WAAW,GAAGH,WAAW,GAAGL,IAAI,CAACC,IAAL,CAAU,CAACJ,cAAc,GAAG,CAAlB,IAAqB,CAA/B,CAAhC;AAEA,MAAIY,UAAU,GAAGP,KAAK,CAACQ,MAAN,CAAcC,CAAC,IAAKA,CAAC,IAAIJ,UAAzB,EAAqCG,MAArC,CAA6CC,CAAC,IAAIA,CAAC,IAAGH,WAAtD,CAAjB;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAaJ,UAAb;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,IAAI,EAAE,QAAd;AAAwB,IAAA,OAAO,EAAE,MAAM;AAAEH,MAAAA,cAAc,CAAED,WAAW,GAAG,CAAhB,CAAd;AAAiC,KAA1E;AAA4E,IAAA,SAAS,EAAEZ,KAAK,CAACqB,MAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAuG,GAAvG,MADJ,EAEKL,UAAU,CAACM,GAAX,CAAeJ,CAAC,IAAI;AACjB,WAAO;AAAM,MAAA,SAAS,EAAEN,WAAW,KAAKM,CAAhB,IAAqBlB,KAAK,CAACuB,QAA5C;AACM,MAAA,OAAO,EAAGC,CAAD,IAAO;AACZnB,QAAAA,KAAK,CAACoB,aAAN,CAAoBP,CAApB;AACH,OAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGUA,CAHV,MAAP;AAIH,GALA,CAFL,EAQI;AAAQ,IAAA,IAAI,EAAE,QAAd;AAAwB,IAAA,OAAO,EAAE,MAAM;AAAEL,MAAAA,cAAc,CAAED,WAAW,GAAG,CAAhB,CAAd;AAAiC,KAA1E;AAA6E,IAAA,SAAS,EAAEZ,KAAK,CAACqB,MAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuG,GAAvG,CARJ,CADJ;AAYH,CA7BD;;AA+BA,eAAepB,UAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport style from \"./Pagination.module.css\";\r\n\r\nconst Pagination = ({totalCount, pageSize, paginationSize, ...props}) => {\r\n    let pagesCount = Math.ceil(totalCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let [currentPage, setCurrentPage] = useState(1)\r\n\r\n    let leftBorder = currentPage - Math.ceil((paginationSize - 1)/2);\r\n\r\n    let rightBorder = currentPage + Math.ceil((paginationSize - 1)/2);\r\n\r\n    let pagination = pages.filter( p =>  p >= leftBorder).filter( p => p<= rightBorder)\r\n\r\n    console.log( pagination)\r\n\r\n    return (\r\n        <div>\r\n            <button type={\"button\"} onClick={() => { setCurrentPage (currentPage - 1)}} className={style.button}> {\"<\"} </button>\r\n            {pagination.map(p => {\r\n                return <span className={currentPage === p && style.selected}\r\n                             onClick={(e) => {\r\n                                 props.onPageChanged(p)\r\n                             }}>{p} </span>\r\n            })}\r\n            <button type={\"button\"} onClick={() => { setCurrentPage (currentPage + 1)}}  className={style.button}>{\">\"}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination"]},"metadata":{},"sourceType":"module"}