{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\net\\\\project1\\\\src\\\\components\\\\Dialogs\\\\Dialog\\\\Message\\\\Messages.jsx\";\nimport React, { useState } from \"react\";\nimport Message from \"./Message\";\nimport { reversedCopy } from \"../../../../utils/arrayHalper\";\n\nconst Messages = props => {\n  let reversMessageElement = null;\n\n  if (props.activeDialogId && props.dialogsPage.messagesItems) {\n    let messageElement = props.dialogsPage.messagesItems;\n    reversMessageElement = reversedCopy(messageElement).map(m => React.createElement(Message, {\n      id: m.id,\n      key: m.id,\n      messageText: m.body,\n      recipientId: m.recipientId,\n      senderId: m.senderId,\n      senderName: m.senderName,\n      translatedBody: m.translatedBody,\n      viewed: m.viewed,\n      totalCount: m.totalCount,\n      addedAt: m.addedAt,\n      authUserId: props.authUserId,\n      setMessageViewed: props.setMessageViewed,\n      sendMessageInSpam: props.sendMessageInSpam,\n      deleteMessageForMe: props.deleteMessageForMe,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, reversMessageElement);\n}; //\n\n\nexport default Messages; //\n// import React, {useState} from \"react\"\n// import Message from \"./Message\";\n// import {reversedCopy} from \"../../../../utils/arrayHalper\";\n// import style from \"./Message.module.css\";\n// import {NavLink} from \"react-router-dom\";\n// import spamIcon from \"../../../../assets/spamIcon.png\";\n// import Dialogs from \"../../Dialogs\";\n//\n// const Messages = (props) => {\n//\n//     let addToSpam = () => {\n//         props.sendMessageInSpam(props.id)\n//     }\n//\n//     let deleteMessage = () => {\n//         props.deleteMessageForMe(props.id)\n//     }\n//\n//     let \n//----------------------------------------------------------------\n//\n//      if (props.senderId !== props.authUserId) {\n//         props.setMessageViewed(props.id);\n//          spamMessagesId={props.spamMessagesId}\n//          props.spamMessagesId.map(s => {\n//              if( s == props.id){\n//              return (\n//              <Message />\n//              )\n//          }\n//        return (\n//     //         <div className={style.message}>\n//     //             <div>\n//     //                 <NavLink to={`/profile/${props.senderId}`}>\n//     //                     <span className={style.name}>{props.senderName}</span>\n//     //                 </NavLink>\n//     //                 <span className={style.date}>{props.addedAt}</span>\n//     //                 <img className={style.spamButton} src={spamIcon}\n//     //                      onClick={() =>{addToSpam()}}/>\n//     //             </div>\n//     //             <div className={style.text}>{props.messageText}</div>\n//     //         </div>\n//     //     )\n//     // }\n//\n//     // spamMessagesId={this.props.spamMessagesId}\n//     // deleteMessagesId={this.props.deleteMessagesId}\n//     debugger\n//     if (props.senderId !== props.authUserId) {\n//\n//     }\n//\n//\n//     return (\n//         <Message id={props.id} messageText={props.body}\n//                  recipientId={props.recipientId}\n//                  senderId={props.senderId}\n//                  senderName={props.senderName}\n//                  translatedBody={props.translatedBody}\n//                  viewed={props.viewed}\n//                  totalCount={props.totalCount}\n//                  addedAt={props.addedAt}\n//                  authUserId={props.authUserId}\n//                  setMessageViewed={props.setMessageViewed}\n//                  sendMessageInSpam={addToSpam}\n//                  deleteMessageForMe={deleteMessage}/>\n//     )\n// }\n//\n// export default Messages\n//","map":{"version":3,"sources":["D:/react/net/project1/src/components/Dialogs/Dialog/Message/Messages.jsx"],"names":["React","useState","Message","reversedCopy","Messages","props","reversMessageElement","activeDialogId","dialogsPage","messagesItems","messageElement","map","m","id","body","recipientId","senderId","senderName","translatedBody","viewed","totalCount","addedAt","authUserId","setMessageViewed","sendMessageInSpam","deleteMessageForMe"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,YAAR,QAA2B,+BAA3B;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAExB,MAAIC,oBAAoB,GAAG,IAA3B;;AAEA,MAAID,KAAK,CAACE,cAAN,IAAwBF,KAAK,CAACG,WAAN,CAAkBC,aAA9C,EAA6D;AACzD,QAAIC,cAAc,GAAGL,KAAK,CAACG,WAAN,CAAkBC,aAAvC;AACAH,IAAAA,oBAAoB,GAAGH,YAAY,CAACO,cAAD,CAAZ,CAA6BC,GAA7B,CAAiCC,CAAC,IAAI,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAEA,CAAC,CAACC,EAAf;AAAmB,MAAA,GAAG,EAAED,CAAC,CAACC,EAA1B;AAA8B,MAAA,WAAW,EAAED,CAAC,CAACE,IAA7C;AACS,MAAA,WAAW,EAAEF,CAAC,CAACG,WADxB;AAES,MAAA,QAAQ,EAAEH,CAAC,CAACI,QAFrB;AAGS,MAAA,UAAU,EAAEJ,CAAC,CAACK,UAHvB;AAIS,MAAA,cAAc,EAAEL,CAAC,CAACM,cAJ3B;AAKS,MAAA,MAAM,EAAEN,CAAC,CAACO,MALnB;AAMS,MAAA,UAAU,EAAEP,CAAC,CAACQ,UANvB;AAOS,MAAA,OAAO,EAAER,CAAC,CAACS,OAPpB;AAQS,MAAA,UAAU,EAAEhB,KAAK,CAACiB,UAR3B;AASS,MAAA,gBAAgB,EAAEjB,KAAK,CAACkB,gBATjC;AAUS,MAAA,iBAAiB,EAAElB,KAAK,CAACmB,iBAVlC;AAWS,MAAA,kBAAkB,EAAEnB,KAAK,CAACoB,kBAXnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtC,CAAvB;AAYH;;AAED,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKnB,oBADL,CADJ;AAKH,CAzBD,C,CA0BA;;;AACA,eAAeF,QAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {useState} from \"react\"\r\nimport Message from \"./Message\";\r\nimport {reversedCopy} from \"../../../../utils/arrayHalper\";\r\n\r\nconst Messages = (props) => {\r\n\r\n    let reversMessageElement = null;\r\n\r\n    if (props.activeDialogId && props.dialogsPage.messagesItems) {\r\n        let messageElement = props.dialogsPage.messagesItems;\r\n        reversMessageElement = reversedCopy(messageElement).map(m => <Message id={m.id} key={m.id} messageText={m.body}\r\n                                                                              recipientId={m.recipientId}\r\n                                                                              senderId={m.senderId}\r\n                                                                              senderName={m.senderName}\r\n                                                                              translatedBody={m.translatedBody}\r\n                                                                              viewed={m.viewed}\r\n                                                                              totalCount={m.totalCount}\r\n                                                                              addedAt={m.addedAt}\r\n                                                                              authUserId={props.authUserId}\r\n                                                                              setMessageViewed={props.setMessageViewed}\r\n                                                                              sendMessageInSpam={props.sendMessageInSpam}\r\n                                                                              deleteMessageForMe={props.deleteMessageForMe}/>)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {reversMessageElement}\r\n        </div>\r\n    )\r\n}\r\n//\r\nexport default Messages\r\n//\r\n// import React, {useState} from \"react\"\r\n// import Message from \"./Message\";\r\n// import {reversedCopy} from \"../../../../utils/arrayHalper\";\r\n// import style from \"./Message.module.css\";\r\n// import {NavLink} from \"react-router-dom\";\r\n// import spamIcon from \"../../../../assets/spamIcon.png\";\r\n// import Dialogs from \"../../Dialogs\";\r\n//\r\n// const Messages = (props) => {\r\n//\r\n//     let addToSpam = () => {\r\n//         props.sendMessageInSpam(props.id)\r\n//     }\r\n//\r\n//     let deleteMessage = () => {\r\n//         props.deleteMessageForMe(props.id)\r\n//     }\r\n//\r\n//     let \r\n//----------------------------------------------------------------\r\n//\r\n//      if (props.senderId !== props.authUserId) {\r\n//         props.setMessageViewed(props.id);\r\n//          spamMessagesId={props.spamMessagesId}\r\n//          props.spamMessagesId.map(s => {\r\n//              if( s == props.id){\r\n//              return (\r\n//              <Message />\r\n//              )\r\n//          }\r\n//        return (\r\n\r\n\r\n//     //         <div className={style.message}>\r\n//     //             <div>\r\n//     //                 <NavLink to={`/profile/${props.senderId}`}>\r\n//     //                     <span className={style.name}>{props.senderName}</span>\r\n//     //                 </NavLink>\r\n//     //                 <span className={style.date}>{props.addedAt}</span>\r\n//     //                 <img className={style.spamButton} src={spamIcon}\r\n//     //                      onClick={() =>{addToSpam()}}/>\r\n//     //             </div>\r\n//     //             <div className={style.text}>{props.messageText}</div>\r\n//     //         </div>\r\n//     //     )\r\n//     // }\r\n//\r\n//     // spamMessagesId={this.props.spamMessagesId}\r\n//     // deleteMessagesId={this.props.deleteMessagesId}\r\n//     debugger\r\n//     if (props.senderId !== props.authUserId) {\r\n//\r\n//     }\r\n//\r\n//\r\n//     return (\r\n//         <Message id={props.id} messageText={props.body}\r\n//                  recipientId={props.recipientId}\r\n//                  senderId={props.senderId}\r\n//                  senderName={props.senderName}\r\n//                  translatedBody={props.translatedBody}\r\n//                  viewed={props.viewed}\r\n//                  totalCount={props.totalCount}\r\n//                  addedAt={props.addedAt}\r\n//                  authUserId={props.authUserId}\r\n//                  setMessageViewed={props.setMessageViewed}\r\n//                  sendMessageInSpam={addToSpam}\r\n//                  deleteMessageForMe={deleteMessage}/>\r\n//     )\r\n// }\r\n//\r\n// export default Messages\r\n//\r\n"]},"metadata":{},"sourceType":"module"}