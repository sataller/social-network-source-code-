{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\net\\\\project1\\\\src\\\\components\\\\Dialogs\\\\DialogsContainer.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getDialogs, getMessages, sendNewMessage, startDialog } from \"../../Redux/dialogsReducer\";\nimport Dialogs from \"./Dialogs\";\nimport withAuthRedirect from \"../../HOC/withAuthRedirect\";\n\nclass DialogsContainer extends React.Component {\n  componentDidMount() {\n    this.props.getDialogs();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    debugger;\n\n    if (prevProps.messages.items.length !== this.props.messages.items.length) {\n      debugger;\n      this.props.getMessages(this.props.activeDialogId);\n    }\n  }\n\n  render() {\n    return React.createElement(Dialogs, {\n      sendNewMessage: this.props.sendNewMessage,\n      getDialogs: this.props.getDialogs,\n      startDialog: this.props.startDialog,\n      getMessages: this.props.getMessages,\n      dialogsPage: this.props.dialogsPage,\n      isAuth: this.props.isAuth,\n      userId: this.props.userId,\n      dialogs: this.props.dialogs,\n      getMessages: this.props.getMessages,\n      messages: this.props.messages,\n      sendNewMessage: this.props.sendNewMessage,\n      activeDialogId: this.props.activeDialogId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    });\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    dialogsPage: state.dialogsPage,\n    isAuth: state.auth.isAuth,\n    userId: state.dialogsPage.userId,\n    dialogs: state.dialogsPage.dialogs,\n    messages: state.dialogsPage.messages,\n    activeDialogId: state.dialogsPage.activeDialogId\n  };\n};\n\nlet AuthRedirectComponent = withAuthRedirect(DialogsContainer);\nexport default connect(mapStateToProps, {\n  sendNewMessage,\n  getDialogs,\n  startDialog,\n  getMessages\n})(AuthRedirectComponent);","map":{"version":3,"sources":["D:/react/net/project1/src/components/Dialogs/DialogsContainer.jsx"],"names":["React","connect","getDialogs","getMessages","sendNewMessage","startDialog","Dialogs","withAuthRedirect","DialogsContainer","Component","componentDidMount","props","componentDidUpdate","prevProps","prevState","snapshot","messages","items","length","activeDialogId","render","dialogsPage","isAuth","userId","dialogs","mapStateToProps","state","auth","AuthRedirectComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,EAAoBC,WAApB,EAAiCC,cAAjC,EAAiDC,WAAjD,QAAmE,4BAAnE;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;;AAEA,MAAMC,gBAAN,SAA+BR,KAAK,CAACS,SAArC,CAA8C;AAE1CC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWT,UAAX;AACH;;AACDU,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAC/C;;AACA,QAAIF,SAAS,CAACG,QAAV,CAAmBC,KAAnB,CAAyBC,MAAzB,KAAoC,KAAKP,KAAL,CAAWK,QAAX,CAAoBC,KAApB,CAA0BC,MAAlE,EAAyE;AACrE;AACA,WAAKP,KAAL,CAAWR,WAAX,CAAuB,KAAKQ,KAAL,CAAWQ,cAAlC;AAEH;AACJ;;AAEDC,EAAAA,MAAM,GAAE;AACJ,WAAO,oBAAC,OAAD;AAAS,MAAA,cAAc,EAAE,KAAKT,KAAL,CAAWP,cAApC;AAAoD,MAAA,UAAU,EAAE,KAAKO,KAAL,CAAWT,UAA3E;AACS,MAAA,WAAW,EAAE,KAAKS,KAAL,CAAWN,WADjC;AAC8C,MAAA,WAAW,EAAE,KAAKM,KAAL,CAAWR,WADtE;AAES,MAAA,WAAW,EAAE,KAAKQ,KAAL,CAAWU,WAFjC;AAE8C,MAAA,MAAM,EAAE,KAAKV,KAAL,CAAWW,MAFjE;AAGS,MAAA,MAAM,EAAE,KAAKX,KAAL,CAAWY,MAH5B;AAGoC,MAAA,OAAO,EAAE,KAAKZ,KAAL,CAAWa,OAHxD;AAIS,MAAA,WAAW,EAAE,KAAKb,KAAL,CAAWR,WAJjC;AAI8C,MAAA,QAAQ,EAAE,KAAKQ,KAAL,CAAWK,QAJnE;AAKS,MAAA,cAAc,EAAE,KAAKL,KAAL,CAAWP,cALpC;AAMS,MAAA,cAAc,EAAE,KAAKO,KAAL,CAAWQ,cANpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAOH;;AAtByC;;AA2B9C,IAAIM,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHL,IAAAA,WAAW,EAAEK,KAAK,CAACL,WADhB;AAEHC,IAAAA,MAAM,EAAEI,KAAK,CAACC,IAAN,CAAWL,MAFhB;AAGHC,IAAAA,MAAM,EAACG,KAAK,CAACL,WAAN,CAAkBE,MAHtB;AAIHC,IAAAA,OAAO,EAAEE,KAAK,CAACL,WAAN,CAAkBG,OAJxB;AAKHR,IAAAA,QAAQ,EAAEU,KAAK,CAACL,WAAN,CAAkBL,QALzB;AAMHG,IAAAA,cAAc,EAAEO,KAAK,CAACL,WAAN,CAAkBF;AAN/B,GAAP;AAQH,CATD;;AAWA,IAAIS,qBAAqB,GAAGrB,gBAAgB,CAACC,gBAAD,CAA5C;AAEA,eAAeP,OAAO,CAACwB,eAAD,EAAkB;AAACrB,EAAAA,cAAD;AAAiBF,EAAAA,UAAjB;AAA6BG,EAAAA,WAA7B;AAA0CF,EAAAA;AAA1C,CAAlB,CAAP,CAAiFyB,qBAAjF,CAAf","sourcesContent":["import React from \"react\"\r\nimport {connect} from \"react-redux\";\r\nimport {getDialogs, getMessages, sendNewMessage, startDialog} from \"../../Redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport withAuthRedirect from \"../../HOC/withAuthRedirect\";\r\n\r\nclass DialogsContainer extends React.Component{\r\n\r\n    componentDidMount() {\r\n        this.props.getDialogs()\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        debugger\r\n        if (prevProps.messages.items.length !== this.props.messages.items.length){\r\n            debugger\r\n            this.props.getMessages(this.props.activeDialogId)\r\n\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return <Dialogs sendNewMessage={this.props.sendNewMessage} getDialogs={this.props.getDialogs}\r\n                        startDialog={this.props.startDialog} getMessages={this.props.getMessages}\r\n                        dialogsPage={this.props.dialogsPage} isAuth={this.props.isAuth}\r\n                        userId={this.props.userId} dialogs={this.props.dialogs}\r\n                        getMessages={this.props.getMessages} messages={this.props.messages}\r\n                        sendNewMessage={this.props.sendNewMessage}\r\n                        activeDialogId={this.props.activeDialogId}/>\r\n    }\r\n\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth,\r\n        userId:state.dialogsPage.userId,\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        activeDialogId: state.dialogsPage.activeDialogId,\r\n    }\r\n}\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(DialogsContainer)\r\n\r\nexport default connect(mapStateToProps, {sendNewMessage, getDialogs, startDialog, getMessages})(AuthRedirectComponent)"]},"metadata":{},"sourceType":"module"}