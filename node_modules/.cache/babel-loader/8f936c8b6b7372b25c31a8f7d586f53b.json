{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\net\\\\project1\\\\src\\\\components\\\\common\\\\Pagination\\\\Pagenation.jsx\";\nimport React, { useState } from \"react\";\nimport style from \"./Pagination.module.css\";\n\nconst Pagination = ({\n  totalCount,\n  pageSize,\n  currentPage,\n  paginationSize,\n  ...props\n}) => {\n  let pagesCount = Math.ceil(totalCount / pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftBorder = (paginationSize - 1) * pageSize + 1;\n  let rightBorder = portionNumber * paginationSize;\n  let endPage = pages[pages.length - 1];\n  let pagination = pages.filter(p => p >= leftBorder).filter(p => p <= rightBorder);\n  pagination.push(endPage);\n  return React.createElement(\"div\", {\n    className: style.pagination,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: style.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, portionNumber <= 1 ? React.createElement(\"button\", {\n    className: style.pageButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }) : React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => {\n      setPortionNumber(portionNumber + 1);\n    },\n    className: style.pageButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \" \", \"<\", \" \")), pagination.map(p => {\n    return React.createElement(\"div\", {\n      className: style.pageNumber + \" \" + (currentPage === p && style.selected),\n      onClick: e => {\n        props.onPageChanged(p);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, p, \" \");\n  }), React.createElement(\"div\", {\n    className: style.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, portionNumber = pagesCount ? React.createElement(\"button\", {\n    className: style.pageButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }) : React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => {\n      setPortionNumber(portionNumber + 1);\n    },\n    className: style.pageButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \" \", \">\", \" \")));\n};\n\nexport default Pagination;","map":{"version":3,"sources":["D:/react/net/project1/src/components/common/Pagination/Pagenation.jsx"],"names":["React","useState","style","Pagination","totalCount","pageSize","currentPage","paginationSize","props","pagesCount","Math","ceil","pages","i","push","portionNumber","setPortionNumber","leftBorder","rightBorder","endPage","length","pagination","filter","p","button","pageButton","map","pageNumber","selected","e","onPageChanged"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,UAAD;AAAaC,EAAAA,QAAb;AAAuBC,EAAAA,WAAvB;AAAoCC,EAAAA,cAApC;AAAoD,KAAGC;AAAvD,CAAD,KAAmE;AAClF,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUP,UAAU,GAAGC,QAAvB,CAAjB;AACA,MAAIO,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,UAArB,EAAiCI,CAAC,EAAlC,EAAsC;AAClCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AAED,MAAI,CAACE,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,CAAD,CAAhD;AAEA,MAAIgB,UAAU,GAAG,CAACV,cAAc,GAAG,CAAlB,IAAqBF,QAArB,GAAgC,CAAjD;AAEA,MAAIa,WAAW,GAAGH,aAAa,GAAGR,cAAlC;AAEA,MAAIY,OAAO,GAAGP,KAAK,CAACA,KAAK,CAACQ,MAAN,GAAa,CAAd,CAAnB;AAEA,MAAIC,UAAU,GAAGT,KAAK,CAACU,MAAN,CAAaC,CAAC,IAAIA,CAAC,IAAIN,UAAvB,EAAmCK,MAAnC,CAA0CC,CAAC,IAAIA,CAAC,IAAIL,WAApD,CAAjB;AAEAG,EAAAA,UAAU,CAACP,IAAX,CAAgBK,OAAhB;AAEA,SACI;AAAK,IAAA,SAAS,EAAEjB,KAAK,CAACmB,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAEnB,KAAK,CAACsB,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BT,aAAa,IAAI,CAAjB,GAAqB;AAAQ,IAAA,SAAS,EAAEb,KAAK,CAACuB,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArB,GAC3B;AAAQ,IAAA,IAAI,EAAE,QAAd;AAAwB,IAAA,OAAO,EAAE,MAAM;AACnCT,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACH,KAFD;AAEG,IAAA,SAAS,EAAEb,KAAK,CAACuB,UAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAEkC,GAFlC,MADJ,CADJ,EAOKJ,UAAU,CAACK,GAAX,CAAeH,CAAC,IAAI;AACjB,WAAO;AAAK,MAAA,SAAS,EAAErB,KAAK,CAACyB,UAAN,GAAkB,GAAlB,IAAwBrB,WAAW,KAAKiB,CAAhB,IAAqBrB,KAAK,CAAC0B,QAAnD,CAAhB;AACM,MAAA,OAAO,EAAGC,CAAD,IAAO;AACZrB,QAAAA,KAAK,CAACsB,aAAN,CAAoBP,CAApB;AACH,OAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGUA,CAHV,MAAP;AAIH,GALA,CAPL,EAcI;AAAK,IAAA,SAAS,EAAErB,KAAK,CAACsB,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BT,aAAa,GAAIN,UAAD,GAAe;AAAQ,IAAA,SAAS,EAAEP,KAAK,CAACuB,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAf,GAC3C;AAAQ,IAAA,IAAI,EAAE,QAAd;AAAwB,IAAA,OAAO,EAAE,MAAM;AACnCT,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACH,KAFD;AAEG,IAAA,SAAS,EAAEb,KAAK,CAACuB,UAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAEkC,GAFlC,MADJ,CAdJ,CADJ;AAuBH,CA1CD;;AA4CA,eAAetB,UAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport style from \"./Pagination.module.css\";\r\n\r\nconst Pagination = ({totalCount, pageSize, currentPage, paginationSize, ...props}) => {\r\n    let pagesCount = Math.ceil(totalCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n\r\n    let leftBorder = (paginationSize - 1)*pageSize + 1;\r\n\r\n    let rightBorder = portionNumber * paginationSize\r\n\r\n    let endPage = pages[pages.length-1]\r\n\r\n    let pagination = pages.filter(p => p >= leftBorder).filter(p => p <= rightBorder)\r\n\r\n    pagination.push(endPage)\r\n\r\n    return (\r\n        <div className={style.pagination}>\r\n            <div className={style.button}>{portionNumber <= 1 ? <button className={style.pageButton}></button> :\r\n                <button type={\"button\"} onClick={() => {\r\n                    setPortionNumber(portionNumber + 1)\r\n                }} className={style.pageButton}> {\"<\"} </button>\r\n            }</div>\r\n\r\n            {pagination.map(p => {\r\n                return <div className={style.pageNumber +\" \"+ (currentPage === p && style.selected)}\r\n                             onClick={(e) => {\r\n                                 props.onPageChanged(p)\r\n                             }}>{p} </div>\r\n            })}\r\n\r\n            <div className={style.button}>{portionNumber = (pagesCount) ? <button className={style.pageButton}></button> :\r\n                <button type={\"button\"} onClick={() => {\r\n                    setPortionNumber(portionNumber + 1)\r\n                }} className={style.pageButton}> {\">\"} </button>\r\n            }</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination"]},"metadata":{},"sourceType":"module"}