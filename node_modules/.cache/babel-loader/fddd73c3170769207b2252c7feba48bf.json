{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\net\\\\project1\\\\src\\\\components\\\\Users\\\\UsersContainer.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { followAC, setPageAc, setTotalUsersCountAC, setUsersAC, toggleIsFetchingAC, unfollowAC } from \"../../Redux/usersReducer\";\nimport * as axios from \"axios\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/preloader/preloader\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      this.props.toggleIsFetching(true);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(response.data.items);\n        this.props.setTotalUsersCount(response.data.totalCount);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.props.isFetching ? React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }) : null, React.createElement(Users, {\n      totalCount: this.props.totalCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      users: this.props.users,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      onPageChanged: this.onPageChanged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalCount: state.usersPage.totalCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    follow: userId => {\n      dispatch(followAC(userId));\n    },\n    unfollow: userId => {\n      dispatch(unfollowAC(userId));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    },\n    setCurrentPage: pageNumber => {\n      dispatch(setPageAc(pageNumber));\n    },\n    setTotalUsersCount: totalCount => {\n      dispatch(setTotalUsersCountAC(totalCount));\n    },\n    toggleIsFetching: isFetching => {\n      dispatch(toggleIsFetchingAC(isFetching));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);","map":{"version":3,"sources":["D:/react/net/project1/src/components/Users/UsersContainer.jsx"],"names":["React","connect","followAC","setPageAc","setTotalUsersCountAC","setUsersAC","toggleIsFetchingAC","unfollowAC","axios","Users","Preloader","UsersContainer","Component","onPageChanged","pageNumber","props","setCurrentPage","toggleIsFetching","get","pageSize","then","response","setUsers","data","items","setTotalUsersCount","totalCount","componentDidMount","currentPage","render","isFetching","users","follow","unfollow","mapStateToProps","state","usersPage","mapDispatchToProps","dispatch","userId"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    followAC,\r\n    setPageAc,\r\n    setTotalUsersCountAC,\r\n    setUsersAC,\r\n    toggleIsFetchingAC,\r\n    unfollowAC\r\n} from \"../../Redux/usersReducer\";\r\nimport * as axios from \"axios\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/preloader/preloader\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\r\n            this.props.toggleIsFetching(false)\r\n\r\n            this.props.setUsers(response.data.items)\r\n            this.props.setTotalUsersCount(response.data.totalCount)\r\n        });\r\n\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber)\r\n        this.props.toggleIsFetching(true)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\r\n            this.props.toggleIsFetching(false)\r\n\r\n            this.props.setUsers(response.data.items)\r\n            this.props.setTotalUsersCount(response.data.totalCount)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Users totalCount={this.props.totalCount} pageSize={this.props.pageSize}\r\n                       currentPage={this.props.currentPage} users={this.props.users}\r\n                       follow={this.props.follow} unfollow={this.props.unfollow}\r\n                       onPageChanged={this.onPageChanged}/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalCount: state.usersPage.totalCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n\r\n\r\n    })\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId))\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId))\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users))\r\n        },\r\n\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setPageAc(pageNumber))\r\n        },\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(setTotalUsersCountAC(totalCount))\r\n        },\r\n        toggleIsFetching: (isFetching) => {\r\n            dispatch(toggleIsFetchingAC(isFetching))\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer)\r\n"]},"metadata":{},"sourceType":"module"}