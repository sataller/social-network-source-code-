{"ast":null,"code":"import React from \"react\";\nimport { usersAPI } from \"../API/api\";\nconst SET_USER_DATA = \"SET_USER_DATA\";\nlet initialization = {\n  userId: null,\n  email: null,\n  login: null,\n  isFetching: false,\n  isAuth: false\n};\n\nconst authReducer = (state = initialization, action) => {\n  switch (action.type) {\n    case SET_USER_DATA:\n      return { ...state,\n        ...action.data,\n        isAuth: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setAuthUserData = (id, email, login) => ({\n  type: SET_USER_DATA,\n  data: {\n    id,\n    email,\n    login\n  }\n});\nexport let logIn = () => {\n  return dispatch => {\n    usersAPI.logIn().then(response => {\n      debugger;\n\n      if (response.resultCode === 0) {\n        let {\n          id,\n          email,\n          login\n        } = response.data;\n        dispatch(setAuthUserData(id, email, login));\n      }\n    });\n  };\n};\nexport default authReducer;","map":{"version":3,"sources":["D:/react/net/project1/src/Redux/authReducer.js"],"names":["React","usersAPI","SET_USER_DATA","initialization","userId","email","login","isFetching","isAuth","authReducer","state","action","type","data","setAuthUserData","id","logIn","dispatch","then","response","resultCode"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,YAAvB;AAEA,MAAMC,aAAa,GAAG,eAAtB;AAGA,IAAIC,cAAc,GAAG;AACjBC,EAAAA,MAAM,EAAE,IADS;AAEjBC,EAAAA,KAAK,EAAE,IAFU;AAGjBC,EAAAA,KAAK,EAAE,IAHU;AAIjBC,EAAAA,UAAU,EAAE,KAJK;AAKjBC,EAAAA,MAAM,EAAE;AALS,CAArB;;AAQA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGP,cAAT,EAAyBQ,MAAzB,KAAoC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,aAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEH,WAAGC,MAAM,CAACE,IAFP;AAGHL,QAAAA,MAAM,EAAE;AAHL,OAAP;;AAMJ;AACI,aAAOE,KAAP;AATR;AAWH,CAZD;;AAcA,OAAO,MAAMI,eAAe,GAAG,CAACC,EAAD,EAAKV,KAAL,EAAYC,KAAZ,MAAuB;AAClDM,EAAAA,IAAI,EAAEV,aAD4C;AAC7BW,EAAAA,IAAI,EAAE;AACvBE,IAAAA,EADuB;AACnBV,IAAAA,KADmB;AACZC,IAAAA;AADY;AADuB,CAAvB,CAAxB;AAMP,OAAO,IAAIU,KAAK,GAAG,MAAM;AACrB,SAAQC,QAAD,IAAc;AACjBhB,IAAAA,QAAQ,CAACe,KAAT,GAAiBE,IAAjB,CAAsBC,QAAQ,IAAI;AAC9B;;AACA,UAAIA,QAAQ,CAACC,UAAT,KAAwB,CAA5B,EAA+B;AAC3B,YAAI;AAACL,UAAAA,EAAD;AAAKV,UAAAA,KAAL;AAAYC,UAAAA;AAAZ,YAAqBa,QAAQ,CAACN,IAAlC;AACAI,QAAAA,QAAQ,CAACH,eAAe,CAACC,EAAD,EAAKV,KAAL,EAAYC,KAAZ,CAAhB,CAAR;AACH;AACJ,KAND;AAOH,GARD;AASH,CAVM;AAYP,eAAeG,WAAf","sourcesContent":["import React from \"react\"\r\nimport {usersAPI} from \"../API/api\";\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\";\r\n\r\n\r\nlet initialization = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isFetching: false,\r\n    isAuth: false,\r\n}\r\n\r\nconst authReducer = (state = initialization, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true,\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (id, email, login) => ({\r\n    type: SET_USER_DATA, data: {\r\n        id, email, login\r\n    }\r\n})\r\n\r\nexport let logIn = () => {\r\n    return (dispatch) => {\r\n        usersAPI.logIn().then(response => {\r\n            debugger\r\n            if (response.resultCode === 0) {\r\n                let {id, email, login} = response.data\r\n                dispatch(setAuthUserData(id, email, login))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default authReducer;"]},"metadata":{},"sourceType":"module"}