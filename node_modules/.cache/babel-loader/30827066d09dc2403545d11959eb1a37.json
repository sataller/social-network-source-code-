{"ast":null,"code":"import { profileAPI, usersAPI } from \"../API/api\";\nconst ADD_POST = \"network/profile/ADD_POST\";\nconst SET_USER_PROFILE = \"network/profile/SET_USER_PROFILE\";\nconst SET_USER_STATUS = \"network/profile/SET_USER_STATUS\";\nconst DELETE_POST = \"network/profile/DELETE_POST\";\nconst SAVE_PHOTO_SUCCESS = \"network/profile/SAVE_PHOTO_SUCCESS\";\nconst LIKE_VALUE_SWITCHING = \"network/profile/LIKE_VALUE_SWITCHING\";\nlet initialisation = {\n  posts: [{\n    id: 1,\n    text: \"My first post!\",\n    likeCount: 12,\n    avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\",\n    likeValue: false\n  }, {\n    id: 2,\n    text: \"My first post!\",\n    likeCount: 12,\n    avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\",\n    likeValue: false\n  }, {\n    id: 3,\n    text: \"My first post!\",\n    likeCount: 12,\n    avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\",\n    likeValue: false\n  }],\n  profile: null,\n  status: \"\"\n};\n\nconst profileReducer = (state = initialisation, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      let newPost = {\n        id: 4,\n        text: action.newText,\n        likeCount: 0,\n        avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\"\n      };\n      return { ...state,\n        posts: [...state.posts, newPost],\n        newText: \"\"\n      };\n\n    case LIKE_VALUE_SWITCHING:\n      {\n        return { ...state,\n          posts\n        };\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    case SET_USER_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    case DELETE_POST:\n      {\n        return { ...state,\n          posts: state.posts.filter(p => p.id != action.postId)\n        };\n      }\n\n    case SAVE_PHOTO_SUCCESS:\n      {\n        return { ...state,\n          profile: { ...state.profile,\n            photos: action.photos\n          }\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostAC = newText => {\n  return {\n    type: ADD_POST,\n    newText\n  };\n};\nexport const deletePost = postId => ({\n  type: DELETE_POST,\n  postId\n});\nexport const setProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setStatus = status => ({\n  type: SET_USER_STATUS,\n  status\n});\nexport const savePhotoSuccess = photos => ({\n  type: SAVE_PHOTO_SUCCESS,\n  photos\n});\nexport const likeValueSwitching = likeValue => ({\n  type: LIKE_VALUE_SWITCHING,\n  likeValue\n});\nexport const setLikeValue = likeValue => dispatch => {\n  dispatch(likeValueSwitching(likeValue));\n};\nexport const setUsersProfile = userId => async dispatch => {\n  const response = await usersAPI.setUsers(userId);\n  dispatch(setProfile(response.data));\n};\nexport const getStatus = userId => async dispatch => {\n  const response = await profileAPI.getStatus(userId);\n  dispatch(setStatus(response.data));\n};\nexport const updateStatus = status => async dispatch => {\n  const response = await profileAPI.updateStatus(status);\n\n  if (response.data.resultCode === 0) {\n    dispatch(setStatus(status));\n  }\n};\nexport const savePhoto = file => async dispatch => {\n  const response = await profileAPI.savePhoto(file);\n\n  if (response.data.resultCode === 0) {\n    dispatch(savePhotoSuccess(response.data.data.photos));\n  }\n};\nexport default profileReducer;","map":{"version":3,"sources":["D:/react/net/project1/src/Redux/profileReducer.js"],"names":["profileAPI","usersAPI","ADD_POST","SET_USER_PROFILE","SET_USER_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","LIKE_VALUE_SWITCHING","initialisation","posts","id","text","likeCount","avatar","likeValue","profile","status","profileReducer","state","action","type","newPost","newText","filter","p","postId","photos","addPostAC","deletePost","setProfile","setStatus","savePhotoSuccess","likeValueSwitching","setLikeValue","dispatch","setUsersProfile","userId","response","setUsers","data","getStatus","updateStatus","resultCode","savePhoto","file"],"mappings":"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","sourcesContent":["import {profileAPI, usersAPI} from \"../API/api\";\r\n\r\n\r\nconst ADD_POST = \"network/profile/ADD_POST\";\r\nconst SET_USER_PROFILE = \"network/profile/SET_USER_PROFILE\";\r\nconst SET_USER_STATUS = \"network/profile/SET_USER_STATUS\";\r\nconst DELETE_POST = \"network/profile/DELETE_POST\";\r\nconst SAVE_PHOTO_SUCCESS = \"network/profile/SAVE_PHOTO_SUCCESS\";\r\nconst LIKE_VALUE_SWITCHING = \"network/profile/LIKE_VALUE_SWITCHING\";\r\n\r\n\r\nlet initialisation = {\r\n    posts: [\r\n        {\r\n            id: 1, text: \"My first post!\", likeCount: 12,\r\n            avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\",\r\n            likeValue:false,\r\n\r\n        },\r\n        {\r\n            id: 2, text: \"My first post!\", likeCount: 12,\r\n            avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\",\r\n            likeValue:false,\r\n\r\n        },\r\n        {\r\n            id: 3, text: \"My first post!\", likeCount: 12,\r\n            avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\",\r\n            likeValue:false,\r\n\r\n        },\r\n    ],\r\n    profile: null,\r\n    status: \"\",\r\n}\r\n\r\nconst profileReducer = (state = initialisation, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 4,\r\n                text: action.newText,\r\n                likeCount: 0,\r\n                avatar: \"https://upload.wikimedia.org/wikipedia/en/thumb/3/3b/SpongeBob_SquarePants_character.svg/1200px-SpongeBob_SquarePants_character.svg.png\"\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newText: \"\"\r\n            }\r\n        case LIKE_VALUE_SWITCHING:{\r\n            return {\r\n                ...state,\r\n              posts\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_USER_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {...state, profile: {...state.profile, photos: action.photos}}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostAC = (newText) => {\r\n    return ({type: ADD_POST, newText})\r\n};\r\n\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\n\r\nexport const setProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\n\r\nexport const setStatus = (status) => ({type: SET_USER_STATUS, status});\r\n\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos});\r\n\r\nexport const likeValueSwitching = (likeValue) => ({type: LIKE_VALUE_SWITCHING, likeValue});\r\n\r\nexport const setLikeValue = (likeValue) => (dispatch) => {\r\n    dispatch(likeValueSwitching(likeValue))\r\n}\r\n\r\nexport const setUsersProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.setUsers(userId)\r\n    dispatch(setProfile(response.data))\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data))\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    const response = await profileAPI.savePhoto(file)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos))\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer"]},"metadata":{},"sourceType":"module"}