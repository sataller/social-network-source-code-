{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\net\\\\project1\\\\src\\\\components\\\\Header\\\\HeaderContainer.jsx\";\nimport React from \"react\";\nimport Header from \"./Header\";\nimport { getAuthUserData, Logout } from \"../../Redux/authReducer\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { getAuthUserInform } from \"../../Redux/headerReducer\";\n\nclass HeaderContainer extends React.Component {\n  updateHeader() {\n    if (this.props.isAuth) {\n      let userId = this.props.authorizedUserId;\n      this.props.getAuthUserInform(userId);\n      console.log(this.props);\n    }\n  }\n\n  componentDidMount() {\n    this.updateHeader();\n  } // componentDidUpdate(prevProps, prevState, snapshot) {\n  //     if ( prevProps !== this.props || prevState !== this.state){\n  //         this.updateHeader()\n  //     }\n  // }\n\n\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    if (this.props.isAuth !== nextProps.isAuth) {\n      this.updateHeader();\n      console.log(this.props.isAuth);\n      console.log(nextProps.isAuth);\n    }\n  }\n\n  render() {\n    return React.createElement(Header, Object.assign({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isAuth: state.auth.isAuth,\n  login: state.auth.login,\n  authorizedUserId: state.auth.id,\n  authProfileData: state.header.authUserProfile\n});\n\nlet WithRouterHeaderComponent = withRouter(HeaderContainer);\nexport default connect(mapStateToProps, {\n  getAuthUserData,\n  Logout,\n  getAuthUserInform\n})(WithRouterHeaderComponent);","map":{"version":3,"sources":["D:/react/net/project1/src/components/Header/HeaderContainer.jsx"],"names":["React","Header","getAuthUserData","Logout","connect","withRouter","getAuthUserInform","HeaderContainer","Component","updateHeader","props","isAuth","userId","authorizedUserId","console","log","componentDidMount","shouldComponentUpdate","nextProps","nextState","nextContext","render","mapStateToProps","state","auth","login","id","authProfileData","header","authUserProfile","WithRouterHeaderComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,eAAR,EAAyBC,MAAzB,QAAsC,yBAAtC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,iBAAR,QAAgC,2BAAhC;;AAEA,MAAMC,eAAN,SAA8BP,KAAK,CAACQ,SAApC,CAA8C;AAE1CC,EAAAA,YAAY,GAAG;AACX,QAAI,KAAKC,KAAL,CAAWC,MAAf,EAAuB;AACnB,UAAIC,MAAM,GAAG,KAAKF,KAAL,CAAWG,gBAAxB;AACA,WAAKH,KAAL,CAAWJ,iBAAX,CAA6BM,MAA7B;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAjB;AAEH;AACJ;;AAEDM,EAAAA,iBAAiB,GAAG;AAChB,SAAKP,YAAL;AACH,GAbyC,CAe1C;AACA;AACA;AACA;AACA;;;AAEAQ,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,WAAvB,EAAoC;AACrD,QAAI,KAAKV,KAAL,CAAWC,MAAX,KAAsBO,SAAS,CAACP,MAApC,EAA4C;AACxC,WAAKF,YAAL;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWC,MAAvB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYG,SAAS,CAACP,MAAtB;AACH;AAEJ;;AAEDU,EAAAA,MAAM,GAAG;AACL,WAAO,oBAAC,MAAD,oBAAY,KAAKX,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AAEH;;AAjCyC;;AAqC9C,MAAMY,eAAe,GAAIC,KAAD,KAAY;AAChCZ,EAAAA,MAAM,EAAEY,KAAK,CAACC,IAAN,CAAWb,MADa;AAEhCc,EAAAA,KAAK,EAAEF,KAAK,CAACC,IAAN,CAAWC,KAFc;AAGhCZ,EAAAA,gBAAgB,EAAEU,KAAK,CAACC,IAAN,CAAWE,EAHG;AAIhCC,EAAAA,eAAe,EAAEJ,KAAK,CAACK,MAAN,CAAaC;AAJE,CAAZ,CAAxB;;AAQA,IAAIC,yBAAyB,GAAGzB,UAAU,CAACE,eAAD,CAA1C;AAEA,eAAeH,OAAO,CAACkB,eAAD,EAAkB;AAACpB,EAAAA,eAAD;AAAkBC,EAAAA,MAAlB;AAA0BG,EAAAA;AAA1B,CAAlB,CAAP,CAAuEwB,yBAAvE,CAAf","sourcesContent":["import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {getAuthUserData, Logout} from \"../../Redux/authReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {getAuthUserInform} from \"../../Redux/headerReducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    updateHeader() {\r\n        if (this.props.isAuth) {\r\n            let userId = this.props.authorizedUserId\r\n            this.props.getAuthUserInform(userId)\r\n            console.log(this.props)\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateHeader()\r\n    }\r\n\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     if ( prevProps !== this.props || prevState !== this.state){\r\n    //         this.updateHeader()\r\n    //     }\r\n    // }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (this.props.isAuth !== nextProps.isAuth) {\r\n            this.updateHeader()\r\n            console.log(this.props.isAuth)\r\n            console.log(nextProps.isAuth)\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    authorizedUserId: state.auth.id,\r\n    authProfileData: state.header.authUserProfile,\r\n\r\n});\r\n\r\nlet WithRouterHeaderComponent = withRouter(HeaderContainer)\r\n\r\nexport default connect(mapStateToProps, {getAuthUserData, Logout, getAuthUserInform})(WithRouterHeaderComponent)"]},"metadata":{},"sourceType":"module"}