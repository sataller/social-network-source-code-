{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\net\\\\project1\\\\src\\\\components\\\\Dialogs\\\\Dialog\\\\Message\\\\Messages.jsx\";\nimport React, { useState } from \"react\";\nimport Message from \"./Message\";\nimport { reversedCopy } from \"../../../../utils/arrayHalper\";\nimport style from \"./Message.module.css\";\nimport { NavLink } from \"react-router-dom\";\nimport spamIcon from \"../../../../assets/spamIcon.png\";\n\nconst Messages = props => {\n  let addToSpam = () => {\n    props.sendMessageInSpam(props.id);\n  };\n\n  let deleteMessage = () => {\n    props.deleteMessageForMe(props.id);\n  }; // if (props.senderId !== props.authUserId) {\n  //     props.setMessageViewed(props.id);\n  //     return (\n  //         <div className={style.message}>\n  //             <div>\n  //                 <NavLink to={`/profile/${props.senderId}`}>\n  //                     <span className={style.name}>{props.senderName}</span>\n  //                 </NavLink>\n  //                 <span className={style.date}>{props.addedAt}</span>\n  //                 <img className={style.spamButton} src={spamIcon}\n  //                      onClick={() =>{addToSpam()}}/>\n  //             </div>\n  //             <div className={style.text}>{props.messageText}</div>\n  //         </div>\n  //     )\n  // }\n\n\n  if (props.senderId !== props.authUserId) {}\n\n  return React.createElement(Message, {\n    id: props.id,\n    messageText: props.body,\n    recipientId: props.recipientId,\n    senderId: props.senderId,\n    senderName: props.senderName,\n    translatedBody: props.translatedBody,\n    viewed: props.viewed,\n    totalCount: props.totalCount,\n    addedAt: props.addedAt,\n    authUserId: props.authUserId,\n    setMessageViewed: props.setMessageViewed,\n    sendMessageInSpam: addToSpam,\n    deleteMessageForMe: deleteMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  });\n};\n\nexport default Messages; // let [numberOfPage, setNumberOfPage] = useState(1)\n//\n// let loadNextMessagesPage = React.lazy(() => {\n//         let pageCount = Math.ceil(props.dialogsPage.messages.totalCount / props.pageSize)\n//         if (numberOfPage >= pageCount) {\n//             return <div> It's all </div>\n//         }\n//         props.getMessages(props.activeDialogId, props.messagePageSize, (numberOfPage + 1))\n//         let startItem = numberOfPage * props.pageSize;\n//         let endItem = startItem + props.pageSize;\n//         let element = props.dialogsPage.messagesItems.slice(startItem, endItem);\n//\n//         setNumberOfPage(numberOfPage + 1);\n//\n//         let reversElement = reversedCopy(element).map(m => <Message id={m.id} key={m.id} messageText={m.body}\n//                                                                     recipientId={m.recipientId}\n//                                                                     senderId={m.senderId}\n//                                                                     senderName={m.senderName}\n//                                                                     translatedBody={m.translatedBody}\n//                                                                     viewed={m.viewed}\n//                                                                     totalCount={m.totalCount}\n//                                                                     addedAt={m.addedAt}/>)\n//         return reversElement\n//         // const DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"))\n//         //     <Route path=\"/dialogs\" render={() => withSuspense(DialogsContainer)}/>\n//\n//\n//     }\n// )","map":{"version":3,"sources":["D:/react/net/project1/src/components/Dialogs/Dialog/Message/Messages.jsx"],"names":["React","useState","Message","reversedCopy","style","NavLink","spamIcon","Messages","props","addToSpam","sendMessageInSpam","id","deleteMessage","deleteMessageForMe","senderId","authUserId","body","recipientId","senderName","translatedBody","viewed","totalCount","addedAt","setMessageViewed"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,YAAR,QAA2B,+BAA3B;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AACA,OAAOC,QAAP,MAAqB,iCAArB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAExB,MAAIC,SAAS,GAAG,MAAM;AAClBD,IAAAA,KAAK,CAACE,iBAAN,CAAwBF,KAAK,CAACG,EAA9B;AACH,GAFD;;AAIA,MAAIC,aAAa,GAAG,MAAM;AACtBJ,IAAAA,KAAK,CAACK,kBAAN,CAAyBL,KAAK,CAACG,EAA/B;AACH,GAFD,CANwB,CAUxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAIH,KAAK,CAACM,QAAN,KAAmBN,KAAK,CAACO,UAA7B,EAAyC,CAExC;;AAGD,SACQ,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAEP,KAAK,CAACG,EAAnB;AAAuB,IAAA,WAAW,EAAEH,KAAK,CAACQ,IAA1C;AACS,IAAA,WAAW,EAAER,KAAK,CAACS,WAD5B;AAES,IAAA,QAAQ,EAAET,KAAK,CAACM,QAFzB;AAGS,IAAA,UAAU,EAAEN,KAAK,CAACU,UAH3B;AAIS,IAAA,cAAc,EAAEV,KAAK,CAACW,cAJ/B;AAKS,IAAA,MAAM,EAAEX,KAAK,CAACY,MALvB;AAMS,IAAA,UAAU,EAAEZ,KAAK,CAACa,UAN3B;AAOS,IAAA,OAAO,EAAEb,KAAK,CAACc,OAPxB;AAQS,IAAA,UAAU,EAAEd,KAAK,CAACO,UAR3B;AASS,IAAA,gBAAgB,EAAEP,KAAK,CAACe,gBATjC;AAUS,IAAA,iBAAiB,EAAEd,SAV5B;AAWS,IAAA,kBAAkB,EAAEG,aAX7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR;AAcH,CA9CD;;AAgDA,eAAeL,QAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {useState} from \"react\"\r\nimport Message from \"./Message\";\r\nimport {reversedCopy} from \"../../../../utils/arrayHalper\";\r\nimport style from \"./Message.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport spamIcon from \"../../../../assets/spamIcon.png\";\r\n\r\nconst Messages = (props) => {\r\n\r\n    let addToSpam = () => {\r\n        props.sendMessageInSpam(props.id)\r\n    }\r\n\r\n    let deleteMessage = () => {\r\n        props.deleteMessageForMe(props.id)\r\n    }\r\n\r\n    // if (props.senderId !== props.authUserId) {\r\n    //     props.setMessageViewed(props.id);\r\n    //     return (\r\n    //         <div className={style.message}>\r\n    //             <div>\r\n    //                 <NavLink to={`/profile/${props.senderId}`}>\r\n    //                     <span className={style.name}>{props.senderName}</span>\r\n    //                 </NavLink>\r\n    //                 <span className={style.date}>{props.addedAt}</span>\r\n    //                 <img className={style.spamButton} src={spamIcon}\r\n    //                      onClick={() =>{addToSpam()}}/>\r\n    //             </div>\r\n    //             <div className={style.text}>{props.messageText}</div>\r\n    //         </div>\r\n    //     )\r\n    // }\r\n\r\n    if (props.senderId !== props.authUserId) {\r\n\r\n    }\r\n\r\n\r\n    return (\r\n            <Message id={props.id} messageText={props.body}\r\n                     recipientId={props.recipientId}\r\n                     senderId={props.senderId}\r\n                     senderName={props.senderName}\r\n                     translatedBody={props.translatedBody}\r\n                     viewed={props.viewed}\r\n                     totalCount={props.totalCount}\r\n                     addedAt={props.addedAt}\r\n                     authUserId={props.authUserId}\r\n                     setMessageViewed={props.setMessageViewed}\r\n                     sendMessageInSpam={addToSpam}\r\n                     deleteMessageForMe={deleteMessage}/>\r\n    )\r\n}\r\n\r\nexport default Messages\r\n\r\n\r\n// let [numberOfPage, setNumberOfPage] = useState(1)\r\n//\r\n// let loadNextMessagesPage = React.lazy(() => {\r\n//         let pageCount = Math.ceil(props.dialogsPage.messages.totalCount / props.pageSize)\r\n//         if (numberOfPage >= pageCount) {\r\n//             return <div> It's all </div>\r\n//         }\r\n//         props.getMessages(props.activeDialogId, props.messagePageSize, (numberOfPage + 1))\r\n//         let startItem = numberOfPage * props.pageSize;\r\n//         let endItem = startItem + props.pageSize;\r\n//         let element = props.dialogsPage.messagesItems.slice(startItem, endItem);\r\n//\r\n//         setNumberOfPage(numberOfPage + 1);\r\n//\r\n//         let reversElement = reversedCopy(element).map(m => <Message id={m.id} key={m.id} messageText={m.body}\r\n//                                                                     recipientId={m.recipientId}\r\n//                                                                     senderId={m.senderId}\r\n//                                                                     senderName={m.senderName}\r\n//                                                                     translatedBody={m.translatedBody}\r\n//                                                                     viewed={m.viewed}\r\n//                                                                     totalCount={m.totalCount}\r\n//                                                                     addedAt={m.addedAt}/>)\r\n//         return reversElement\r\n//         // const DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"))\r\n//         //     <Route path=\"/dialogs\" render={() => withSuspense(DialogsContainer)}/>\r\n//\r\n//\r\n//     }\r\n// )\r\n"]},"metadata":{},"sourceType":"module"}