{"ast":null,"code":"import React from\"react\";import style from\"./NewPost.module.css\";import{Field,reduxForm}from\"redux-form\";import{Textarea}from\"../../../common/FormsControl/FormsControl.jsx\";import{maxLengthCreator,required}from\"../../../../utils/validators/validators\";var maxLength50=maxLengthCreator(50);var NewPostForm=function NewPostForm(props){// const deleteValue = () => {\n//     props.reset()\n//     alert(\"!\")\n// }\nreturn React.createElement(\"form\",{onSubmit:props.handleSubmit,className:style.newPost},React.createElement(\"h2\",null,\"Posts\"),React.createElement(\"div\",null,React.createElement(Field,{component:Textarea,validate:[required,maxLength50],placeholder:\"Enter new post\",name:\"newPostText\"})),React.createElement(\"div\",null,React.createElement(\"button\",{className:style.sendButton},\"Post\")));};var NewPostReduxForm=reduxForm({form:\"newPostText\"})(NewPostForm);var NewPost=function NewPost(props){var addPost=function addPost(value){props.onAddPost(value.newPostText);value.newPostText=\"\";};return React.createElement(\"div\",{className:style.newPostBlock},React.createElement(NewPostReduxForm,{props:props,onSubmit:addPost}));};export default NewPost;","map":{"version":3,"sources":["D:/react/net/project1/src/components/Profile/ProfileDescription/NewPost/NewPost.jsx"],"names":["React","style","Field","reduxForm","Textarea","maxLengthCreator","required","maxLength50","NewPostForm","props","handleSubmit","newPost","sendButton","NewPostReduxForm","form","NewPost","addPost","value","onAddPost","newPostText","newPostBlock"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,sBAAlB,CACA,OAAQC,KAAR,CAAeC,SAAf,KAA+B,YAA/B,CACA,OAAQC,QAAR,KAAuB,+CAAvB,CACA,OAAQC,gBAAR,CAA0BC,QAA1B,KAAyC,yCAAzC,CAEA,GAAMC,CAAAA,WAAW,CAAGF,gBAAgB,CAAC,EAAD,CAApC,CACA,GAAMG,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAE3B;AACA;AACA;AACA;AAEA,MAEI,6BAAM,QAAQ,CAAEA,KAAK,CAACC,YAAtB,CAAoC,SAAS,CAAET,KAAK,CAACU,OAArD,EACI,sCADJ,CAEI,+BACI,oBAAC,KAAD,EAAO,SAAS,CAAEP,QAAlB,CAA4B,QAAQ,CAAE,CAACE,QAAD,CAAWC,WAAX,CAAtC,CACO,WAAW,CAAE,gBADpB,CACsC,IAAI,CAAE,aAD5C,EADJ,CAFJ,CAMI,+BACI,8BAAQ,SAAS,CAAEN,KAAK,CAACW,UAAzB,SADJ,CANJ,CAFJ,CAaH,CApBD,CAsBA,GAAMC,CAAAA,gBAAgB,CAAGV,SAAS,CAAC,CAACW,IAAI,CAAE,aAAP,CAAD,CAAT,CAAiCN,WAAjC,CAAzB,CAEA,GAAMO,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACN,KAAD,CAAW,CACvB,GAAIO,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,CACrBR,KAAK,CAACS,SAAN,CAAgBD,KAAK,CAACE,WAAtB,EACAF,KAAK,CAACE,WAAN,CAAoB,EAApB,CACH,CAHD,CAIA,MACI,4BAAK,SAAS,CAAElB,KAAK,CAACmB,YAAtB,EACI,oBAAC,gBAAD,EAAkB,KAAK,CAAEX,KAAzB,CAAgC,QAAQ,CAAEO,OAA1C,EADJ,CADJ,CAKH,CAVD,CAYA,cAAeD,CAAAA,OAAf","sourcesContent":["import React from \"react\"\r\nimport style from \"./NewPost.module.css\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../../common/FormsControl/FormsControl.jsx\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst NewPostForm = (props) => {\r\n\r\n    // const deleteValue = () => {\r\n    //     props.reset()\r\n    //     alert(\"!\")\r\n    // }\r\n\r\n    return (\r\n\r\n        <form onSubmit={props.handleSubmit} className={style.newPost}>\r\n            <h2>Posts</h2>\r\n            <div>\r\n                <Field component={Textarea} validate={[required, maxLength50]}\r\n                       placeholder={\"Enter new post\"} name={\"newPostText\"}/>\r\n            </div>\r\n            <div>\r\n                <button className={style.sendButton}>Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst NewPostReduxForm = reduxForm({form: \"newPostText\"})(NewPostForm);\r\n\r\nconst NewPost = (props) => {\r\n    let addPost = (value) => {\r\n        props.onAddPost(value.newPostText)\r\n        value.newPostText = \"\";\r\n    }\r\n    return (\r\n        <div className={style.newPostBlock}>\r\n            <NewPostReduxForm props={props} onSubmit={addPost}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewPost"]},"metadata":{},"sourceType":"module"}