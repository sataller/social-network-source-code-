{"ast":null,"code":"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { sendMessageAC, updateMessageTextAC } from \"../../Redux/dialogsReducer\";\nimport Dialogs from \"./Dialogs\";\nimport withAuthRedirect from \"../../HOC/wihtAuthRedirect\";\n\nlet mapStateToProps = state => {\n  return {\n    dialogsPage: state.dialogsPage,\n    isAuth: state.auth.isAuth\n  };\n};\n\nlet AuthRedirectComponent = withAuthRedirect(Dialogs);\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    onAddMessage: (newText, userId) => {\n      dispatch(sendMessageAC(newText, userId));\n    } // onUpdateTextMessage: (text) => {\n    //     dispatch(updateMessageTextAC(text))\n    // },\n\n  };\n};\n\nlet DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\nexport default DialogsContainer;","map":{"version":3,"sources":["D:/react/net/project1/src/components/Dialogs/DialogsContainer.jsx"],"names":["React","connect","sendMessageAC","updateMessageTextAC","Dialogs","withAuthRedirect","mapStateToProps","state","dialogsPage","isAuth","auth","AuthRedirectComponent","mapDispatchToProps","dispatch","onAddMessage","newText","userId","DialogsContainer"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,aAAR,EAAuBC,mBAAvB,QAAiD,4BAAjD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;;AAGA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACC,WADhB;AAEHC,IAAAA,MAAM,EAAEF,KAAK,CAACG,IAAN,CAAWD;AAFhB,GAAP;AAIH,CALD;;AAOA,IAAIE,qBAAqB,GAAGN,gBAAgB,CAACD,OAAD,CAA5C;;AAEA,IAAIQ,kBAAkB,GAAIC,QAAD,IAAc;AACnC,SAAO;AACHC,IAAAA,YAAY,EAAE,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BH,MAAAA,QAAQ,CAACX,aAAa,CAACa,OAAD,EAAUC,MAAV,CAAd,CAAR;AACH,KAHE,CAIH;AACA;AACA;;AANG,GAAP;AAQH,CATD;;AAWA,IAAIC,gBAAgB,GAAGhB,OAAO,CAACK,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CD,qBAA7C,CAAvB;AAEA,eAAeM,gBAAf","sourcesContent":["import React from \"react\"\r\nimport {connect} from \"react-redux\";\r\nimport {sendMessageAC, updateMessageTextAC} from \"../../Redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport withAuthRedirect from \"../../HOC/wihtAuthRedirect\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(Dialogs)\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onAddMessage: (newText, userId) => {\r\n            dispatch(sendMessageAC(newText, userId))\r\n        },\r\n        // onUpdateTextMessage: (text) => {\r\n        //     dispatch(updateMessageTextAC(text))\r\n        // },\r\n    }\r\n}\r\n\r\nlet DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent)\r\n\r\nexport default DialogsContainer"]},"metadata":{},"sourceType":"module"}